# Copyright Â© 2023- Gimlet Labs, Inc.
# All Rights Reserved.
#
# NOTICE:  All information contained herein is, and remains
# the property of Gimlet Labs, Inc. and its suppliers,
# if any.  The intellectual and technical concepts contained
# herein are proprietary to Gimlet Labs, Inc. and its suppliers and
# may be covered by U.S. and Foreign Patents, patents in process,
# and are protected by trade secret or copyright law. Dissemination
# of this information or reproduction of this material is strictly
# forbidden unless prior written permission is obtained from
# Gimlet Labs, Inc.
#
# SPDX-License-Identifier: Proprietary

load("@bazel_gazelle//:def.bzl", "DEFAULT_LANGUAGES", "gazelle_binary")
load("@pip//:requirements.bzl", "all_whl_requirements")
load("@rules_python//python:pip.bzl", "compile_pip_requirements")
load("@rules_python_gazelle_plugin//manifest:defs.bzl", "gazelle_python_manifest")
load("@rules_python_gazelle_plugin//modules_mapping:def.bzl", "modules_mapping")
load("//bazel:gazelle.bzl", "gazelle_runners")
load("//bazel:gml_build_system.bzl", "no_sysroot")
load("//bazel:images.bzl", "gml_oci_image")
load("//bazel:repositories.bzl", "list_gml_deps")
load("//bazel/cc_toolchains/sysroots:tars.bzl", "sysroot_runtime_tar", "sysroot_test_tar")

exports_files([
    "requirements.in",
    "requirements_lock.txt",
])

compile_pip_requirements(
    name = "requirements",
    timeout = "long",
    src = "requirements.in",
    constraints = "constraints.txt",
    extra_args = [
        "--extra-index-url https://download.pytorch.org/whl/cu121",
    ],
    requirements_txt = "requirements_lock.txt",
    target_compatible_with = no_sysroot(),
)

modules_mapping(
    name = "modules_map",
    wheels = all_whl_requirements,
)

gazelle_python_manifest(
    name = "gazelle_python_manifest",
    modules_mapping = ":modules_map",
    pip_repository_name = "pip",
    requirements = ":requirements_lock.txt",
    target_compatible_with = no_sysroot(),
)

gazelle_binary(
    name = "gazelle_with_plugins",
    languages = DEFAULT_LANGUAGES + [
        "@com_github_benchsci_rules_nodejs_gazelle//gazelle",
        "@build_stack_rules_proto//language/protobuf",
        "@rules_python_gazelle_plugin//python:python",
    ],
)

gazelle_runners(gazelle = "//:gazelle_with_plugins")

sysroot_runtime_tar(
    name = "cc_base_tar",
    visibility = ["//visibility:public"],
)

sysroot_test_tar(
    name = "cc_base_debug_tar",
    visibility = ["//visibility:public"],
)

gml_oci_image(
    name = "cc_base_image",
    architecture = select({
        "@platforms//cpu:arm64": "arm64",
        "@platforms//cpu:x86_64": "amd64",
    }),
    multiarch = True,
    tars = [":cc_base_tar"],
    visibility = ["//visibility:public"],
)

gml_oci_image(
    name = "cc_base_debug_image",
    architecture = select({
        "@platforms//cpu:arm64": "arm64",
        "@platforms//cpu:x86_64": "amd64",
    }),
    multiarch = True,
    tars = [":cc_base_debug_tar"],
    visibility = ["//visibility:public"],
)

# gazelle:exclude **/coverage
# gazelle:exclude external
# gazelle:go_naming_convention import

# gazelle:js_extension disabled

# gazelle:exclude **/*.pb.go
# gazelle:exclude **/*_pb2.py
# gazelle:exclude **/*_pb2_grpc.py
# gazelle:exclude **/.terraform/**
# gazelle:exclude **/mock.go

# gazelle:go_proto_compilers @io_bazel_rules_go//proto:gogoslick_proto
# gazelle:go_grpc_compilers @io_bazel_rules_go//proto:gogoslick_grpc
# gazelle:go_generate_proto false

# gazelle:map_kind go_binary gml_go_binary @gml//bazel:gml_build_system.bzl
# gazelle:map_kind go_test gml_go_test @gml//bazel:gml_build_system.bzl
# gazelle:map_kind py_test gml_py_test @gml//bazel:gml_build_system.bzl

# gazelle:python_generation_mode package
# gazelle:python_default_visibility NONE

exports_files([
    "LICENSE",
    "go.sum",
    ".clang-tidy",
])

list_gml_deps(
    name = "gml_3p_deps",
)
