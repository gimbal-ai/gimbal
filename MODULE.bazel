# Copyright Â© 2023- Gimlet Labs, Inc.
# All Rights Reserved.
#
# NOTICE:  All information contained herein is, and remains
# the property of Gimlet Labs, Inc. and its suppliers,
# if any.  The intellectual and technical concepts contained
# herein are proprietary to Gimlet Labs, Inc. and its suppliers and
# may be covered by U.S. and Foreign Patents, patents in process,
# and are protected by trade secret or copyright law. Dissemination
# of this information or reproduction of this material is strictly
# forbidden unless prior written permission is obtained from
# Gimlet Labs, Inc.
#
# SPDX-License-Identifier: Proprietary

module(
    name = "gml",
    version = "0.1.0",
    compatibility_level = 1,
    repo_name = "gimlet",
)

bazel_dep(name = "rules_go", version = "0.42.0", repo_name = "io_bazel_rules_go")
bazel_dep(name = "gazelle", version = "0.33.0", repo_name = "bazel_gazelle")
bazel_dep(name = "aspect_bazel_lib", version = "1.35.0")
bazel_dep(name = "aspect_rules_jest", version = "0.19.5")
bazel_dep(name = "rules_pkg", version = "0.9.1")
bazel_dep(name = "bazel_skylib", version = "1.4.2")
bazel_dep(name = "rules_foreign_cc", version = "0.9.0")
bazel_dep(name = "rules_python", version = "0.25.0")
bazel_dep(name = "rules_oci", version = "1.4.0")
bazel_dep(name = "rules_python_gazelle_plugin", version = "0.25.0")
bazel_dep(name = "glog", version = "0.6.0", repo_name = "com_github_google_glog")
bazel_dep(name = "abseil-cpp", version = "20230802.0", repo_name = "com_google_absl")
bazel_dep(name = "googletest", version = "1.14.0", repo_name = "com_google_googletest")
bazel_dep(name = "google_benchmark", version = "1.8.3", repo_name = "com_google_benchmark")
bazel_dep(name = "re2", version = "2021-09-01")

# Remove once rules_python_gazelle_plugin releases.
archive_override(
    module_name = "rules_python_gazelle_plugin",
    integrity = "sha256-uk9Uc5PRU5Jyxu+MPnrdjsusXI841tA8ZosnEzqSWtU=",
    strip_prefix = "rules_python-48daf52bdf85d46c529a873cc1f51e08672fd6d7/gazelle",
    urls = [
        "https://github.com/bazelbuild/rules_python/archive/48daf52bdf85d46c529a873cc1f51e08672fd6d7.tar.gz",
    ],
)

# rules_go/gazelle setup
go_sdk = use_extension("@io_bazel_rules_go//go:extensions.bzl", "go_sdk")
go_sdk.download(version = "1.21.1")

go_deps = use_extension("@bazel_gazelle//:extensions.bzl", "go_deps")
go_deps.from_file(go_mod = "//:go.mod")
use_repo(
    go_deps,
    "com_github_bazelbuild_buildtools",
    "com_github_blang_semver_v4",
    "com_github_bmatcuk_doublestar",
    "com_github_getsentry_sentry_go",
    "com_github_gofrs_uuid_v5",
    "com_github_gogo_protobuf",
    "com_github_golang_migrate_migrate_v4",
    "com_github_golang_mock",
    "com_github_gorilla_handlers",
    "com_github_gorilla_sessions",
    "com_github_graph_gophers_graphql_go",
    "com_github_grpc_ecosystem_go_grpc_middleware_v2",
    "com_github_jackc_pgx_v5",
    "com_github_jmoiron_sqlx",
    "com_github_lestrrat_go_jwx_v2",
    "com_github_ory_dockertest_v3",
    "com_github_prometheus_client_golang",
    "com_github_segmentio_analytics_go_v3",
    "com_github_sercand_kuberesolver_v5",
    "com_github_sirupsen_logrus",
    "com_github_spf13_pflag",
    "com_github_spf13_viper",
    "com_github_stretchr_testify",
    "com_github_zenazn_goji",
    "in_gopkg_yaml_v3",
    "org_golang_google_grpc",
    "org_golang_google_protobuf",
    "org_golang_x_net",
    "org_golang_x_sync",
)

# rules_python setup
python = use_extension("@rules_python//python/extensions:python.bzl", "python")
python.toolchain(
    configure_coverage_tool = True,
    ignore_root_user_error = True,
    is_default = True,
    python_version = "3.9",
)

pip = use_extension("@rules_python//python/extensions:pip.bzl", "pip")
pip.parse(
    hub_name = "pip",
    python_version = "3.9",
    requirements_lock = "//bazel/python:requirements_lock.txt",
)
use_repo(pip, "pip")

oci = use_extension("@rules_oci//oci:extensions.bzl", "oci")
oci.pull(
    name = "distroless_nodejs",
    digest = "sha256:64073c3dc7893a4f95f9199ed61155426be4c2623c1ac74e31968961d4a6f7b6",
    image = "gcr.io/distroless/nodejs18-debian12",
)
use_repo(oci, "distroless_nodejs")
