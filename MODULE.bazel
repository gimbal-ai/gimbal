# Copyright Â© 2023- Gimlet Labs, Inc.
# All Rights Reserved.
#
# NOTICE:  All information contained herein is, and remains
# the property of Gimlet Labs, Inc. and its suppliers,
# if any.  The intellectual and technical concepts contained
# herein are proprietary to Gimlet Labs, Inc. and its suppliers and
# may be covered by U.S. and Foreign Patents, patents in process,
# and are protected by trade secret or copyright law. Dissemination
# of this information or reproduction of this material is strictly
# forbidden unless prior written permission is obtained from
# Gimlet Labs, Inc.
#
# SPDX-License-Identifier: Proprietary

module(
    name = "gml",
    version = "0.1.0",
    compatibility_level = 1,
    repo_name = "gimlet",
)

bazel_dep(name = "rules_go", version = "0.46.0", repo_name = "io_bazel_rules_go")
bazel_dep(name = "gazelle", version = "0.35.0", repo_name = "bazel_gazelle")
bazel_dep(name = "aspect_bazel_lib", version = "2.6.1")
bazel_dep(name = "aspect_rules_jest", version = "0.20.0")
bazel_dep(name = "aspect_rules_js", version = "1.34.1")
bazel_dep(name = "aspect_rules_ts", version = "2.1.0")
bazel_dep(name = "rules_pkg", version = "0.10.1")
bazel_dep(name = "bazel_skylib", version = "1.5.0")
bazel_dep(name = "rules_foreign_cc", version = "0.10.1")
bazel_dep(name = "rules_python", version = "0.31.0")
bazel_dep(name = "rules_oci", version = "1.7.5")
bazel_dep(name = "rules_python_gazelle_plugin", version = "0.31.0")
bazel_dep(name = "with_cfg.bzl", version = "0.2.3")
bazel_dep(name = "glog", version = "0.6.0", repo_name = "com_github_google_glog")
bazel_dep(name = "abseil-cpp", version = "20230802.0", repo_name = "com_google_absl")
bazel_dep(name = "googletest", version = "1.14.0.bcr.1", repo_name = "com_google_googletest")
bazel_dep(name = "google_benchmark", version = "1.8.3", repo_name = "com_google_benchmark")
bazel_dep(name = "re2", version = "2023-11-01")
bazel_dep(name = "rules_apple", version = "3.4.0", repo_name = "build_bazel_rules_apple")

# mediapipe uses rules_nodejs so we pull it in at the top level despite it being pulled in by aspect_rules_js already.
bazel_dep(name = "rules_nodejs", version = "5.8.2")

node = use_extension("@rules_nodejs//nodejs:extensions.bzl", "node")

# Switch to 20.9.0 once we upgrade rules_nodejs to one that has toolchain URLs for 20.9.0
# Don't use versions in the [18.13.0, 18.15.0) range due to https://github.com/nodejs/node/issues/46123
node.toolchain(node_version = "18.12.0")
use_repo(node, "nodejs_toolchains")

single_version_override(
    module_name = "aspect_rules_js",
    patch_strip = 1,
    patches = ["//bazel/external:rules_js.patch"],
)

single_version_override(
    module_name = "gazelle",
    patch_strip = 1,
    patches = ["//bazel/external:gazelle.ignore_in_go_mod.patch"],
)

single_version_override(
    module_name = "rules_foreign_cc",
    patch_strip = 1,
    patches = [
        "//bazel/external:rules_foreign_cc.cache_entries_make_vars.patch",
        "//bazel/external:rules_foreign_cc.absolute_bazel_out.patch",
        "//bazel/external:rules_foreign_cc.cross_compile_params.patch",
    ],
)

single_version_override(
    module_name = "rules_python",
    patch_strip = 1,
    patches = [
        "//bazel/external:rules_python.binaries.patch",
    ],
)

archive_override(
    module_name = "rules_python_gazelle_plugin",
    integrity = "sha256-Ru+6YNMQVjEJJfYgBjdVgQ2l6IQWq7VVkDcpUJh5Q/4=",
    patch_strip = 2,
    patches = [
        "//bazel/external:rules_python_gazelle_plugin.proto_import.patch",
    ],
    strip_prefix = "rules_python-bdb2aa2e5c0ca435918037aa3568c0b0c4c9c1ab/gazelle",
    urls = ["https://github.com/bazelbuild/rules_python/archive/bdb2aa2e5c0ca435918037aa3568c0b0c4c9c1ab.tar.gz"],
)

# rules_go/gazelle setup
go_sdk = use_extension("@io_bazel_rules_go//go:extensions.bzl", "go_sdk")
go_sdk.download(version = "1.22.1")

go_deps = use_extension("@bazel_gazelle//:extensions.bzl", "go_deps")
go_deps.from_file(go_mod = "//:go.mod")

# This can be dropped once https://github.com/bazelbuild/bazel-gazelle/pull/1758 makes it into a release and we update past it.
go_deps.gazelle_override(
    directives = [
        "gazelle:proto disable",
    ],
    path = "google.golang.org/protobuf",
)
use_repo(
    go_deps,
    "ag_pault_go_debian",
    "com_github_bazelbuild_buildtools",
    "com_github_blang_semver_v4",
    "com_github_bmatcuk_doublestar",
    "com_github_cenkalti_backoff_v4",
    "com_github_getsentry_sentry_go",
    "com_github_gofrs_uuid_v5",
    "com_github_gogo_protobuf",
    "com_github_golang_migrate_migrate_v4",
    "com_github_google_go_github_v57",
    "com_github_gorilla_handlers",
    "com_github_gorilla_sessions",
    "com_github_graph_gophers_graphql_go",
    "com_github_grpc_ecosystem_go_grpc_middleware_v2",
    "com_github_jackc_pgerrcode",
    "com_github_jackc_pgx_v5",
    "com_github_jarcoal_httpmock",
    "com_github_jmoiron_sqlx",
    "com_github_kkdai_youtube_v2",
    "com_github_lestrrat_go_jwx_v2",
    "com_github_mikefarah_yq_v4",
    "com_github_nats_io_nats_go",
    "com_github_nats_io_nats_server_v2",
    "com_github_olekukonko_tablewriter",
    "com_github_ory_dockertest_v3",
    "com_github_phayes_freeport",
    "com_github_prometheus_client_golang",
    "com_github_prometheus_common",
    "com_github_puerkitobio_goquery",
    "com_github_sabhiram_go_gitignore",
    "com_github_segmentio_analytics_go_v3",
    "com_github_sercand_kuberesolver_v5",
    "com_github_sirupsen_logrus",
    "com_github_spf13_cobra",
    "com_github_spf13_pflag",
    "com_github_spf13_viper",
    "com_github_stretchr_testify",
    "com_github_ulikunitz_xz",
    "com_google_cloud_go_storage",
    "in_gopkg_yaml_v3",
    "io_k8s_api",
    "io_k8s_apimachinery",
    "io_k8s_client_go",
    "io_nhooyr_websocket",
    "org_golang_google_api",
    "org_golang_google_grpc",
    "org_golang_google_protobuf",
    "org_golang_x_net",
    "org_golang_x_oauth2",
    "org_golang_x_sync",
    "org_uber_go_mock",
)

# rules_ts setup
rules_ts_ext = use_extension(
    "@aspect_rules_ts//ts:extensions.bzl",
    "ext",
    dev_dependency = True,
)
rules_ts_ext.deps()
use_repo(rules_ts_ext, "npm_typescript")

# rules_js setup
npm = use_extension("@aspect_rules_js//npm:extensions.bzl", "npm", dev_dependency = True)
npm.npm_translate_lock(
    name = "npm",
    bins = {
        "next": ["next=./dist/bin/next"],
        "storybook": ["storybook=./index.js"],
    },
    npmrc = "//src/ui:.npmrc",
    pnpm_lock = "//src/ui:pnpm-lock.yaml",
    verify_node_modules_ignored = "//:.bazelignore",
)
use_repo(npm, "npm")

# rules_python setup
python = use_extension("@rules_python//python/extensions:python.bzl", "python")
python.toolchain(
    configure_coverage_tool = True,
    ignore_root_user_error = True,
    is_default = True,
    python_version = "3.11",
)
use_repo(python, python = "python_3_11")

pip = use_extension("@rules_python//python/extensions:pip.bzl", "pip")
pip.parse(
    hub_name = "pip",
    python_version = "3.11",
    requirements_lock = "//bazel/python:requirements_lock.txt",
)
use_repo(pip, "pip")

# rules_oci setup
oci = use_extension("@rules_oci//oci:extensions.bzl", "oci")
oci.pull(
    name = "distroless_nodejs",
    digest = "sha256:d3b3e2272621ed6ac35bd7b95aeb3c703301ba5b0a20b3f14a9504ca96a8f086",
    image = "gcr.io/distroless/nodejs20-debian12",
)
oci.pull(
    name = "victoria_metrics_1_93_6",
    digest = "sha256:d82583468b3f90dda5681b9a3496185ba1c2db6938e9dba36f3a05ebe6963f9c",  # v1.93.6 multiarch digest
    image = "index.docker.io/victoriametrics/victoria-metrics",
    platforms = [
        "linux/amd64",
        "linux/arm64",
    ],
)
oci.pull(
    name = "python_3_11_image",
    digest = "sha256:2a746e2b9dfd9c155e1218ee5bcaad64c3c8816258c0ee7d25f3893ed2252a1e",  # 3.11-slim-bookworm multiarch
    image = "index.docker.io/library/python",
    platforms = [
        "linux/amd64",
        "linux/arm64/v8",
    ],
)
oci.pull(
    name = "pgvector_pg15",
    digest = "sha256:f6bbe84a8e61c58fa8f441b502cce01ec4055c78ce19467c4315cd62d4cdbb97",  # pg15 multiarch digest
    image = "index.docker.io/pgvector/pgvector",
    platforms = [
        "linux/amd64",
        "linux/arm64",
    ],
)
use_repo(oci, "distroless_nodejs", "pgvector_pg15", "python_3_11_image", "victoria_metrics_1_93_6")
