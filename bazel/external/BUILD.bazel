# Copyright Â© 2023- Gimlet Labs, Inc.
# All Rights Reserved.
#
# NOTICE:  All information contained herein is, and remains
# the property of Gimlet Labs, Inc. and its suppliers,
# if any.  The intellectual and technical concepts contained
# herein are proprietary to Gimlet Labs, Inc. and its suppliers and
# may be covered by U.S. and Foreign Patents, patents in process,
# and are protected by trade secret or copyright law. Dissemination
# of this information or reproduction of this material is strictly
# forbidden unless prior written permission is obtained from
# Gimlet Labs, Inc.
#
# SPDX-License-Identifier: Proprietary

load("@rules_cc//cc:defs.bzl", "cc_library")
load("@rules_foreign_cc//foreign_cc:defs.bzl", "cmake", "configure_make")

package(default_visibility = ["//visibility:public"])

licenses(["notice"])

configure_make(
    name = "gperftools_build",
    args = [
        "-j`nproc`",
        "-l`nproc`",
    ],
    configure_options = [
        "--enable-shared=no",
        "--disable-frame-pointers",
        "--enable-libunwind",
        "--host x86_64-unknown-linux-gnu",
    ],
    lib_source = "@com_github_gperftools_gperftools//:all",
    linkopts = ["-lpthread"],
    out_static_libs = select({
        "//bazel:debug_tcmalloc": ["libtcmalloc_debug.a"],
        "//conditions:default": ["libtcmalloc_and_profiler.a"],
    }),
    targets = [
        "install-libLTLIBRARIES",
        "install-perftoolsincludeHEADERS",
    ],
)

# Workaround for https://github.com/bazelbuild/rules_foreign_cc/issues/227
cc_library(
    name = "gperftools",
    deps = [
        "gperftools_build",
    ],
)

cmake(
    name = "natsc",
    build_args = [
        "--",  # <- Pass remaining options to the native tool.
        "-j`nproc`",
        "-l`nproc`",
    ],
    cache_entries = {
        "BUILD_TESTING": "OFF",
        # This forces nats to link against boringssl instead of openssl.
        # Since some of our services use both GRPC and nats, this lets
        # us have a single SSL library.
        "CMAKE_SYSTEM_PREFIX_PATH": "$$EXT_BUILD_DEPS",
        "NATS_BUILD_EXAMPLES": "OFF",
        "NATS_BUILD_LIB_SHARED": "OFF",
        "NATS_BUILD_STREAMING": "OFF",
        # There's some issue here and the hostname verification from the
        # Cert SAN seems to fail.
        "NATS_BUILD_TLS_FORCE_HOST_VERIFY": "OFF",
    },
    lib_name = select({
        "//bazel:debug_build": "libnats_staticd",
        "//conditions:default": "libnats_static",
    }),
    lib_source = "@com_github_nats_io_natsc//:all",
    targets = [
        "nats_static",
    ],
    deps = ["@boringssl//:ssl"],
)

cmake(
    name = "libuv",
    build_args = [
        "--",  # <- Pass remaining options to the native tool.
        "-j`nproc`",
        "-l`nproc`",
    ],
    cache_entries = {
        "BUILDING_UV_SHARED": "OFF",
        "BUILD_TESTING": "OFF",
        "LIBUV_BUILD_TESTS": "OFF",
        "USING_UV_SHARED": "OFF",
    },
    lib_name = "libuv_a",
    lib_source = "@com_github_libuv_libuv//:all",
    targets = [
        "uv_a",
    ],
)
