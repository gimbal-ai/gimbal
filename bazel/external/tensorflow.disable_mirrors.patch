diff --git a/third_party/repo.bzl b/third_party/repo.bzl
index 226f8799392..e0dfa6e7fb8 100644
--- a/third_party/repo.bzl
+++ b/third_party/repo.bzl
@@ -20,12 +20,7 @@ def tf_mirror_urls(url):
     Given a URL, it returns a list of the TF-mirror cache version of that URL
     and the original URL, suitable for use in `urls` field of `tf_http_archive`.
     """
-    if not url.startswith("https://"):
-        return [url]
-    return [
-        "https://storage.googleapis.com/mirror.tensorflow.org/%s" % url[8:],
-        url,
-    ]
+    return [url]
 
 def _get_env_var(ctx, name):
     if name in ctx.os.environ:
@@ -114,23 +109,8 @@ def tf_http_archive(name, sha256, urls, **kwargs):
     labels (e.g. '@foo//:bar') or from a label created in their repository (e.g.
     'str(Label("//:bar"))').
     """
-    if len(urls) < 2:
-        fail("tf_http_archive(urls) must have redundant URLs.")
-
-    if not any([mirror in urls[0] for mirror in (
-        "mirror.tensorflow.org",
-        "mirror.bazel.build",
-        "storage.googleapis.com",
-    )]):
-        fail("The first entry of tf_http_archive(urls) must be a mirror " +
-             "URL, preferrably mirror.tensorflow.org. Even if you don't have " +
-             "permission to mirror the file, please put the correctly " +
-             "formatted mirror URL there anyway, because someone will come " +
-             "along shortly thereafter and mirror the file.")
 
     if native.existing_rule(name):
-        print("\n\033[1;33mWarning:\033[0m skipping import of repository '" +
-              name + "' because it already exists.\n")
         return
 
     _tf_http_archive(
