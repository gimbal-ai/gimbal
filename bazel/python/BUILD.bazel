# Copyright 2023- Gimlet Labs, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# SPDX-License-Identifier: Apache-2.0

load("@experimental_pip//:requirements.bzl", experimental_data_requirements = "all_data_requirements", experimental_requirements = "all_requirements")
load("@pip//:requirements.bzl", "all_data_requirements", "all_requirements")
load("@rules_pkg//pkg:tar.bzl", "pkg_tar")
load("//bazel:images.bzl", "gml_oci_image")
load("//bazel/python:py_pkg_provider.bzl", "py_pkg_provider")

py_pkg_provider(
    name = "python_deps_files",
    srcs = all_requirements + all_data_requirements,
)

pkg_tar(
    name = "python_deps_tar",
    srcs = [":python_deps_files"],
)

py_pkg_provider(
    name = "experimental_deps_files",
    srcs = experimental_requirements + experimental_data_requirements,
)

pkg_tar(
    name = "experimental_deps_tar",
    srcs = [":experimental_deps_files"],
)

# This is a workaround for the fact that OCI image and pkg_tar are really slow for large tars.
# Typically the pip dependencies are pulled in as runfiles for each python binary target.
# So any change to python source files would lead to the full tar with all the pip dependencies being rebuilt.
# To avoid this we build a tar with the pip dependencies separately.
# This ensures that changes to python source won't cause the pip dependency tar to be rebuilt.
# However, this has the downside that all pip dependencies are always included in the python images.
gml_oci_image(
    name = "python_base_image",
    # We switch out the base image to include extra libs when we need to run a optimized ffmpeg.
    base = select({
        "//bazel/cc_toolchains/sysroots:sysroot_type_cuda": "@gml//:cc_base_image",
        "//conditions:default": "@python_3_11_image",
    }),
    tars = [":python_deps_tar"],
    visibility = ["//visibility:public"],
)

gml_oci_image(
    name = "python_experimental_base_image",
    base = "@gml//:cc_base_image",
    tars = [
        ":experimental_deps_tar",
        "@com_github_ffmpeg_ffmpeg//:ffmpeg_binaries",
        "@com_github_ffmpeg_ffmpeg//:ffmpeg_libs",
    ],
    visibility = ["//src/experimental:__subpackages__"],
)
