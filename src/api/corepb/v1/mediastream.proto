/*
 * Copyright Â© 2023- Gimlet Labs, Inc.
 * All Rights Reserved.
 *
 * NOTICE:  All information contained herein is, and remains
 * the property of Gimlet Labs, Inc. and its suppliers,
 * if any.  The intellectual and technical concepts contained
 * herein are proprietary to Gimlet Labs, Inc. and its suppliers and
 * may be covered by U.S. and Foreign Patents, patents in process,
 * and are protected by trade secret or copyright law. Dissemination
 * of this information or reproduction of this material is strictly
 * forbidden unless prior written permission is obtained from
 * Gimlet Labs, Inc.
 *
 * SPDX-License-Identifier: Proprietary
 */

syntax = "proto3";

package gml.internal.api.core.v1;

option go_package = "gimletlabs.ai/gimlet/src/api/corepb/v1;corepb";

import "third_party/github.com/gogo/protobuf/gogoproto/gogo.proto";

// Label represents a label with its confidence score.
message Label {
  string label = 1;
  // Confidence score associated with the label.
  float score = 2;
}

// NormalizedCenterRect represents a rectangle in normalized coordinates with the anchor point
// specified as the center of the rectangle, such that the rectangle is:
//  [xc - width/2, xc + width/2] x [yc - height/2, yc + height/2]
// All values are in [0, 1].
message NormalizedCenterRect {
  float xc = 1;
  float yc = 2;
  float width = 3;
  float height = 4;
}

// Detection represents a bounding-box style object detection.
message Detection {
  // Support sending multiple labels for a single bounding box with associated confidence scores.
  // Labels should be sorted by their associated confidence scores, such that label[0].score is the
  // highest of all label scores.
  repeated Label label = 1;

  NormalizedCenterRect bounding_box = 2;
}

// DetectionList is a list of Detection protos. The only reason it's necessary is because oneofs
// aren't allowed to have `repeated` fields.
message DetectionList {
  repeated Detection detection = 1;
}

// ImageOverlayChunk stores a chunk of image overlays (bounding boxes, segmentation masks, etc)
// Each chunk only contains overlays for a single frame (not necessarily all the overlays for a
// single frame).
message ImageOverlayChunk {
  // Monotonically increasing frame number.
  int64 frame_number = 1;
  // Whether this is the last overlay chunk for this frame
  bool eof = 2 [ (gogoproto.customname) = "EOF" ];

  oneof overlay {
    // Each detection is a bounding box with a label.
    DetectionList detections = 100;
    // TODO(james): add segmentation overlay.
  }
}

// H264Chunk stores a chunk of h.264 encoded NAL units. The NAL units are stored packed into a
// single byte array. Each chunk has the NAL units for no more than a single frame.
message H264Chunk {
  // Monotonically increasing frame number.
  int64 frame_number = 1;
  // Whether this is the last h264 chunk for this frame
  bool eof = 2 [ (gogoproto.customname) = "EOF" ];

  // NAL units in bytestream format (i.e. delineated by the 3-byte start code prefix 0x000001)
  bytes nal_data = 3 [ (gogoproto.customname) = "NALData" ];
}
