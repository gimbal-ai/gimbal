/*
 * Copyright 2023- Gimlet Labs, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * SPDX-License-Identifier: Apache-2.0
 */

syntax = "proto3";

package gml.types;

option go_package = "gimletlabs.ai/gimlet/src/common/typespb;typespb";

import "gogoproto/gogo.proto";

// Store the basic JWT claim information.
message JWTClaims {
  // Generic claims, as referenced at
  // https://tools.ietf.org/html/rfc7519#section-4.1
  string audience = 1 [ (gogoproto.jsontag) = "aud" ];
  int64 expires_at = 2 [ (gogoproto.jsontag) = "exp" ];
  string jti = 3 [ (gogoproto.customname) = "JTI", (gogoproto.jsontag) = "jti" ];
  int64 issued_at = 4 [ (gogoproto.jsontag) = "iat" ];
  string issuer = 5 [ (gogoproto.jsontag) = "iss" ];
  int64 not_before = 6 [ (gogoproto.jsontag) = "nbf" ];
  string subject = 7 [ (gogoproto.jsontag) = "sub" ];
  // The permitted scopes for the jwt. For now, these scopes will just be
  // "user", or "service".
  repeated string scopes = 8;
  oneof custom_claims {
    UserJWTClaims user_claims = 9;
    ServiceJWTClaims service_claims = 10;
    DeviceJWTClaims device_claims = 11;
  }
}

// Claims for User JWTs.
message UserJWTClaims {
  // Store authorization details in the JWT token for now until we have proper policy enforcement.
  message AuthorizationDetails {
    // The scope of this authorization. Only org:admin and org:user are permitted right now.
    repeated string scopes = 1;
    repeated string org_ids = 2
        [ (gogoproto.customname) = "OrgIDs", (gogoproto.jsontag) = "orgIDs" ];
  }
  // The GML user ID.
  string user_id = 1 [ (gogoproto.customname) = "UserID", (gogoproto.jsontag) = "userID" ];
  // The email of the user.
  string email = 2;
  // The list of authorizations for this user.
  repeated AuthorizationDetails authorizations = 3;
}

// Claims for Service JWTs.
message ServiceJWTClaims {
  string service_id = 1 [ (gogoproto.customname) = "ServiceID", (gogoproto.jsontag) = "serviceID" ];
}

// Claims for Device JWTs.
message DeviceJWTClaims {
  // The ID of the device. This can be empty (e.g. device register message).
  string device_id = 1 [ (gogoproto.customname) = "DeviceID", (gogoproto.jsontag) = "deviceID" ];
  // The ID of the fleet that the device is in.
  string fleet_id = 2 [ (gogoproto.customname) = "FleetID", (gogoproto.jsontag) = "fleetID" ];
  // The deploy key ID that the device is using. This can be empty (e.g. device heartbeat message).
  string deploy_key_id = 3
      [ (gogoproto.customname) = "DeployKeyID", (gogoproto.jsontag) = "deployKeyID" ];
}
