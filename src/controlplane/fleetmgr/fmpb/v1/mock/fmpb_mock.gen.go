// Code generated by MockGen. DO NOT EDIT.
// Source: fmpb.pb.go
//
// Generated by this command:
//
//	mockgen -source=fmpb.pb.go -destination=mock/fmpb_mock.gen.go FleetMgrService,FleetMgrEdgeService
//
// Package mock_fmpb is a generated GoMock package.
package mock_fmpb

import (
	context "context"
	reflect "reflect"

	fmpb "gimletlabs.ai/gimlet/src/controlplane/fleetmgr/fmpb/v1"
	gomock "go.uber.org/mock/gomock"
	grpc "google.golang.org/grpc"
)

// MockFleetMgrServiceClient is a mock of FleetMgrServiceClient interface.
type MockFleetMgrServiceClient struct {
	ctrl     *gomock.Controller
	recorder *MockFleetMgrServiceClientMockRecorder
}

// MockFleetMgrServiceClientMockRecorder is the mock recorder for MockFleetMgrServiceClient.
type MockFleetMgrServiceClientMockRecorder struct {
	mock *MockFleetMgrServiceClient
}

// NewMockFleetMgrServiceClient creates a new mock instance.
func NewMockFleetMgrServiceClient(ctrl *gomock.Controller) *MockFleetMgrServiceClient {
	mock := &MockFleetMgrServiceClient{ctrl: ctrl}
	mock.recorder = &MockFleetMgrServiceClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockFleetMgrServiceClient) EXPECT() *MockFleetMgrServiceClientMockRecorder {
	return m.recorder
}

// CreateFleet mocks base method.
func (m *MockFleetMgrServiceClient) CreateFleet(ctx context.Context, in *fmpb.CreateFleetRequest, opts ...grpc.CallOption) (*fmpb.CreateFleetResponse, error) {
	m.ctrl.T.Helper()
	varargs := []any{ctx, in}
	for _, a := range opts {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "CreateFleet", varargs...)
	ret0, _ := ret[0].(*fmpb.CreateFleetResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateFleet indicates an expected call of CreateFleet.
func (mr *MockFleetMgrServiceClientMockRecorder) CreateFleet(ctx, in any, opts ...any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]any{ctx, in}, opts...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateFleet", reflect.TypeOf((*MockFleetMgrServiceClient)(nil).CreateFleet), varargs...)
}

// GetFleet mocks base method.
func (m *MockFleetMgrServiceClient) GetFleet(ctx context.Context, in *fmpb.GetFleetRequest, opts ...grpc.CallOption) (*fmpb.GetFleetResponse, error) {
	m.ctrl.T.Helper()
	varargs := []any{ctx, in}
	for _, a := range opts {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "GetFleet", varargs...)
	ret0, _ := ret[0].(*fmpb.GetFleetResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetFleet indicates an expected call of GetFleet.
func (mr *MockFleetMgrServiceClientMockRecorder) GetFleet(ctx, in any, opts ...any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]any{ctx, in}, opts...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetFleet", reflect.TypeOf((*MockFleetMgrServiceClient)(nil).GetFleet), varargs...)
}

// MockFleetMgrServiceServer is a mock of FleetMgrServiceServer interface.
type MockFleetMgrServiceServer struct {
	ctrl     *gomock.Controller
	recorder *MockFleetMgrServiceServerMockRecorder
}

// MockFleetMgrServiceServerMockRecorder is the mock recorder for MockFleetMgrServiceServer.
type MockFleetMgrServiceServerMockRecorder struct {
	mock *MockFleetMgrServiceServer
}

// NewMockFleetMgrServiceServer creates a new mock instance.
func NewMockFleetMgrServiceServer(ctrl *gomock.Controller) *MockFleetMgrServiceServer {
	mock := &MockFleetMgrServiceServer{ctrl: ctrl}
	mock.recorder = &MockFleetMgrServiceServerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockFleetMgrServiceServer) EXPECT() *MockFleetMgrServiceServerMockRecorder {
	return m.recorder
}

// CreateFleet mocks base method.
func (m *MockFleetMgrServiceServer) CreateFleet(arg0 context.Context, arg1 *fmpb.CreateFleetRequest) (*fmpb.CreateFleetResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateFleet", arg0, arg1)
	ret0, _ := ret[0].(*fmpb.CreateFleetResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateFleet indicates an expected call of CreateFleet.
func (mr *MockFleetMgrServiceServerMockRecorder) CreateFleet(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateFleet", reflect.TypeOf((*MockFleetMgrServiceServer)(nil).CreateFleet), arg0, arg1)
}

// GetFleet mocks base method.
func (m *MockFleetMgrServiceServer) GetFleet(arg0 context.Context, arg1 *fmpb.GetFleetRequest) (*fmpb.GetFleetResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetFleet", arg0, arg1)
	ret0, _ := ret[0].(*fmpb.GetFleetResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetFleet indicates an expected call of GetFleet.
func (mr *MockFleetMgrServiceServerMockRecorder) GetFleet(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetFleet", reflect.TypeOf((*MockFleetMgrServiceServer)(nil).GetFleet), arg0, arg1)
}

// MockFleetMgrEdgeServiceClient is a mock of FleetMgrEdgeServiceClient interface.
type MockFleetMgrEdgeServiceClient struct {
	ctrl     *gomock.Controller
	recorder *MockFleetMgrEdgeServiceClientMockRecorder
}

// MockFleetMgrEdgeServiceClientMockRecorder is the mock recorder for MockFleetMgrEdgeServiceClient.
type MockFleetMgrEdgeServiceClientMockRecorder struct {
	mock *MockFleetMgrEdgeServiceClient
}

// NewMockFleetMgrEdgeServiceClient creates a new mock instance.
func NewMockFleetMgrEdgeServiceClient(ctrl *gomock.Controller) *MockFleetMgrEdgeServiceClient {
	mock := &MockFleetMgrEdgeServiceClient{ctrl: ctrl}
	mock.recorder = &MockFleetMgrEdgeServiceClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockFleetMgrEdgeServiceClient) EXPECT() *MockFleetMgrEdgeServiceClientMockRecorder {
	return m.recorder
}

// Register mocks base method.
func (m *MockFleetMgrEdgeServiceClient) Register(ctx context.Context, in *fmpb.RegisterRequest, opts ...grpc.CallOption) (*fmpb.RegisterResponse, error) {
	m.ctrl.T.Helper()
	varargs := []any{ctx, in}
	for _, a := range opts {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "Register", varargs...)
	ret0, _ := ret[0].(*fmpb.RegisterResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Register indicates an expected call of Register.
func (mr *MockFleetMgrEdgeServiceClientMockRecorder) Register(ctx, in any, opts ...any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]any{ctx, in}, opts...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Register", reflect.TypeOf((*MockFleetMgrEdgeServiceClient)(nil).Register), varargs...)
}

// MockFleetMgrEdgeServiceServer is a mock of FleetMgrEdgeServiceServer interface.
type MockFleetMgrEdgeServiceServer struct {
	ctrl     *gomock.Controller
	recorder *MockFleetMgrEdgeServiceServerMockRecorder
}

// MockFleetMgrEdgeServiceServerMockRecorder is the mock recorder for MockFleetMgrEdgeServiceServer.
type MockFleetMgrEdgeServiceServerMockRecorder struct {
	mock *MockFleetMgrEdgeServiceServer
}

// NewMockFleetMgrEdgeServiceServer creates a new mock instance.
func NewMockFleetMgrEdgeServiceServer(ctrl *gomock.Controller) *MockFleetMgrEdgeServiceServer {
	mock := &MockFleetMgrEdgeServiceServer{ctrl: ctrl}
	mock.recorder = &MockFleetMgrEdgeServiceServerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockFleetMgrEdgeServiceServer) EXPECT() *MockFleetMgrEdgeServiceServerMockRecorder {
	return m.recorder
}

// Register mocks base method.
func (m *MockFleetMgrEdgeServiceServer) Register(arg0 context.Context, arg1 *fmpb.RegisterRequest) (*fmpb.RegisterResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Register", arg0, arg1)
	ret0, _ := ret[0].(*fmpb.RegisterResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Register indicates an expected call of Register.
func (mr *MockFleetMgrEdgeServiceServerMockRecorder) Register(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Register", reflect.TypeOf((*MockFleetMgrEdgeServiceServer)(nil).Register), arg0, arg1)
}
