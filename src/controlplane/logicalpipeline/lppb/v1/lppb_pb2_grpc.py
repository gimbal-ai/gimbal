# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from src.controlplane.logicalpipeline.lppb.v1 import lppb_pb2 as src_dot_controlplane_dot_logicalpipeline_dot_lppb_dot_v1_dot_lppb__pb2


class LogicalPipelineServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.ListLogicalPipelines = channel.unary_unary(
                '/gml.internal.controlplane.logicalpipeline.v1.LogicalPipelineService/ListLogicalPipelines',
                request_serializer=src_dot_controlplane_dot_logicalpipeline_dot_lppb_dot_v1_dot_lppb__pb2.ListLogicalPipelinesRequest.SerializeToString,
                response_deserializer=src_dot_controlplane_dot_logicalpipeline_dot_lppb_dot_v1_dot_lppb__pb2.ListLogicalPipelinesResponse.FromString,
                )
        self.GetLogicalPipeline = channel.unary_unary(
                '/gml.internal.controlplane.logicalpipeline.v1.LogicalPipelineService/GetLogicalPipeline',
                request_serializer=src_dot_controlplane_dot_logicalpipeline_dot_lppb_dot_v1_dot_lppb__pb2.GetLogicalPipelineRequest.SerializeToString,
                response_deserializer=src_dot_controlplane_dot_logicalpipeline_dot_lppb_dot_v1_dot_lppb__pb2.GetLogicalPipelineResponse.FromString,
                )
        self.CreateLogicalPipeline = channel.unary_unary(
                '/gml.internal.controlplane.logicalpipeline.v1.LogicalPipelineService/CreateLogicalPipeline',
                request_serializer=src_dot_controlplane_dot_logicalpipeline_dot_lppb_dot_v1_dot_lppb__pb2.CreateLogicalPipelineRequest.SerializeToString,
                response_deserializer=src_dot_controlplane_dot_logicalpipeline_dot_lppb_dot_v1_dot_lppb__pb2.CreateLogicalPipelineResponse.FromString,
                )


class LogicalPipelineServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def ListLogicalPipelines(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetLogicalPipeline(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateLogicalPipeline(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_LogicalPipelineServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'ListLogicalPipelines': grpc.unary_unary_rpc_method_handler(
                    servicer.ListLogicalPipelines,
                    request_deserializer=src_dot_controlplane_dot_logicalpipeline_dot_lppb_dot_v1_dot_lppb__pb2.ListLogicalPipelinesRequest.FromString,
                    response_serializer=src_dot_controlplane_dot_logicalpipeline_dot_lppb_dot_v1_dot_lppb__pb2.ListLogicalPipelinesResponse.SerializeToString,
            ),
            'GetLogicalPipeline': grpc.unary_unary_rpc_method_handler(
                    servicer.GetLogicalPipeline,
                    request_deserializer=src_dot_controlplane_dot_logicalpipeline_dot_lppb_dot_v1_dot_lppb__pb2.GetLogicalPipelineRequest.FromString,
                    response_serializer=src_dot_controlplane_dot_logicalpipeline_dot_lppb_dot_v1_dot_lppb__pb2.GetLogicalPipelineResponse.SerializeToString,
            ),
            'CreateLogicalPipeline': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateLogicalPipeline,
                    request_deserializer=src_dot_controlplane_dot_logicalpipeline_dot_lppb_dot_v1_dot_lppb__pb2.CreateLogicalPipelineRequest.FromString,
                    response_serializer=src_dot_controlplane_dot_logicalpipeline_dot_lppb_dot_v1_dot_lppb__pb2.CreateLogicalPipelineResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'gml.internal.controlplane.logicalpipeline.v1.LogicalPipelineService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class LogicalPipelineService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def ListLogicalPipelines(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/gml.internal.controlplane.logicalpipeline.v1.LogicalPipelineService/ListLogicalPipelines',
            src_dot_controlplane_dot_logicalpipeline_dot_lppb_dot_v1_dot_lppb__pb2.ListLogicalPipelinesRequest.SerializeToString,
            src_dot_controlplane_dot_logicalpipeline_dot_lppb_dot_v1_dot_lppb__pb2.ListLogicalPipelinesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetLogicalPipeline(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/gml.internal.controlplane.logicalpipeline.v1.LogicalPipelineService/GetLogicalPipeline',
            src_dot_controlplane_dot_logicalpipeline_dot_lppb_dot_v1_dot_lppb__pb2.GetLogicalPipelineRequest.SerializeToString,
            src_dot_controlplane_dot_logicalpipeline_dot_lppb_dot_v1_dot_lppb__pb2.GetLogicalPipelineResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateLogicalPipeline(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/gml.internal.controlplane.logicalpipeline.v1.LogicalPipelineService/CreateLogicalPipeline',
            src_dot_controlplane_dot_logicalpipeline_dot_lppb_dot_v1_dot_lppb__pb2.CreateLogicalPipelineRequest.SerializeToString,
            src_dot_controlplane_dot_logicalpipeline_dot_lppb_dot_v1_dot_lppb__pb2.CreateLogicalPipelineResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
