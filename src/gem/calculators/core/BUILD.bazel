# Copyright 2023- Gimlet Labs, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# SPDX-License-Identifier: Apache-2.0

load("//bazel:gml_build_system.bzl", "gml_cc_library", "gml_cc_test")

package(default_visibility = [
    "//src/experimental:__subpackages__",
    "//src/gem:__subpackages__",
])

gml_cc_library(
    name = "cc_library",
    srcs = [
        "barcode_detector_calculator.cc",
        "barcode_detector_calculator.h",
        "buffer_tokens_for_autoregression_calculator.cc",
        "buffer_tokens_for_autoregression_calculator.h",
        "bytetrack_calculator.cc",
        "bytetrack_calculator.h",
        "classification_metrics_sink_calculator.cc",
        "classification_metrics_sink_calculator.h",
        "clock_latency_metrics_sink_calculator.cc",
        "clock_latency_metrics_sink_calculator.h",
        "debug_dump_frame_calculator.cc",
        "debug_dump_frame_calculator.h",
        "detections_metrics_sink_calculator.cc",
        "detections_metrics_sink_calculator.h",
        "detections_to_mediapipe_calculator.cc",
        "detections_to_mediapipe_calculator.h",
        "execution_context_calculator.h",
        "flow_limiter_metrics_sink_calculator.cc",
        "generate_tokens_metrics_sink_calculator.cc",
        "generate_tokens_metrics_sink_calculator.h",
        "image_frame_to_yuv_planar_image.cc",
        "image_frame_to_yuv_planar_image.h",
        "image_quality_calculator.cc",
        "image_quality_calculator.h",
        "mediapipe_typed_calculators.cc",
        "merge_tokens_calculator.cc",
        "metrics_utils.h",
        "modify_detection_with_classification_calculator.cc",
        "modify_detection_with_classification_calculator.h",
        "modify_detection_with_regression_calculator.cc",
        "modify_detection_with_regression_calculator.h",
        "packet_latency_metrics_sink_calculator.cc",
        "packet_latency_metrics_sink_calculator.h",
        "semantic_segmentation_metrics_sink_calculator.cc",
        "stop_on_token_set_calculator.cc",
        "stop_on_token_set_calculator.h",
        "template_chat_message_calculator.cc",
        "template_chat_message_calculator.h",
        "text_stream_sink_calculator.cc",
        "text_stream_source_calculator.cc",
        "text_stream_source_calculator.h",
        "tracks_metrics_sink_calculator.cc",
        "tracks_metrics_sink_calculator.h",
    ],
    data = ["@com_github_opencv_contrib//:quality_models"],
    deps = [
        "//src/api/corepb/v1:corepb_cc_library",
        "//src/common/bazel:cc_library",
        "//src/common/metrics:cc_library",
        "//src/gem/calculators/core/optionspb:optionspb_cc_library",
        "//src/gem/exec/core:cc_library",
        "@com_github_google_mediapipe//mediapipe/calculators/core:begin_loop_calculator",
        "@com_github_google_mediapipe//mediapipe/calculators/core:concatenate_vector_calculator",
        "@com_github_google_mediapipe//mediapipe/calculators/core:end_loop_calculator",
        "@com_github_google_mediapipe//mediapipe/calculators/core:pass_through_calculator",
        "@com_github_google_mediapipe//mediapipe/calculators/image:image_cropping_calculator",
        "@com_github_google_mediapipe//mediapipe/calculators/util:detections_to_rects_calculator",
        "@com_github_google_mediapipe//mediapipe/calculators/util:latency_cc_proto",
        "@com_github_google_mediapipe//mediapipe/framework:calculator_framework",
        "@com_github_google_mediapipe//mediapipe/framework:mediapipe_options_cc_proto",
        "@com_github_google_mediapipe//mediapipe/framework/formats:detection_cc_proto",
        "@com_github_google_mediapipe//mediapipe/framework/stream_handler:sync_set_input_stream_handler",
        "@com_github_google_mediapipe//mediapipe/framework/stream_handler:sync_set_input_stream_handler_cc_proto",
        "@com_github_pantor_inja//:inja",
        "@com_github_vertical_beach_bytetrack_cpp//:bytetrack",
        "@io_opentelemetry_cpp//sdk/src/metrics",
    ],
)

gml_cc_test(
    name = "detections_to_mediapipe_calculator_test",
    srcs = [
        "detections_to_mediapipe_calculator_test.cc",
    ],
    deps = [
        ":cc_library",
        "//src/gem/testing/core:cc_library",
    ],
)

gml_cc_test(
    name = "image_frame_to_yuv_planar_image_calculator_test",
    srcs = [
        "image_frame_to_yuv_planar_image_calculator_test.cc",
    ],
    deps = [
        ":cc_library",
        "//src/gem/testing/core:cc_library",
        "//src/gem/testing/core/testdata:cc_library",
    ],
)

gml_cc_test(
    name = "clock_latency_metrics_sink_calculator_test",
    srcs = [
        "clock_latency_metrics_sink_calculator_test.cc",
        "test_utils.h",
    ],
    deps = [
        ":cc_library",
        "//src/gem/testing/core:cc_library",
    ],
)

gml_cc_test(
    name = "classification_metrics_sink_calculator_test",
    srcs = [
        "classification_metrics_sink_calculator_test.cc",
        "test_utils.h",
    ],
    deps = [
        ":cc_library",
        "//src/gem/testing/core:cc_library",
    ],
)

gml_cc_test(
    name = "detections_metrics_sink_calculator_test",
    srcs = [
        "detections_metrics_sink_calculator_test.cc",
        "test_utils.h",
    ],
    deps = [
        ":cc_library",
        "//src/gem/testing/core:cc_library",
    ],
)

gml_cc_test(
    name = "barcode_detector_calculator_test",
    srcs = [
        "barcode_detector_calculator_test.cc",
    ],
    deps = [
        ":cc_library",
        "//src/gem/testing/core:cc_library",
        "//src/gem/testing/core/testdata:cc_library",
    ],
)

gml_cc_test(
    name = "bytetrack_calculator_test",
    srcs = [
        "bytetrack_calculator_test.cc",
    ],
    deps = [
        ":cc_library",
        "//src/gem/testing/core:cc_library",
    ],
)

gml_cc_test(
    name = "modify_detection_with_regression_calculator_test",
    srcs = [
        "modify_detection_with_regression_calculator_test.cc",
    ],
    deps = [
        ":cc_library",
        "//src/gem/testing/core:cc_library",
    ],
)

gml_cc_test(
    name = "tracks_metrics_sink_calculator_test",
    srcs = [
        "test_utils.h",
        "tracks_metrics_sink_calculator_test.cc",
    ],
    deps = [
        ":cc_library",
        "//src/gem/testing/core:cc_library",
    ],
)

gml_cc_test(
    name = "modify_detection_with_classification_calculator_test",
    srcs = [
        "modify_detection_with_classification_calculator_test.cc",
    ],
    deps = [
        ":cc_library",
        "//src/gem/testing/core:cc_library",
    ],
)

gml_cc_test(
    name = "text_stream_sink_calculator_test",
    srcs = [
        "test_utils.h",
        "text_stream_sink_calculator_test.cc",
    ],
    deps = [
        ":cc_library",
        "//src/gem/testing/core:cc_library",
    ],
)

gml_cc_test(
    name = "merge_tokens_calculator_test",
    srcs = [
        "merge_tokens_calculator_test.cc",
        "test_utils.h",
    ],
    deps = [
        ":cc_library",
        "//src/gem/testing/core:cc_library",
    ],
)

gml_cc_test(
    name = "generate_tokens_metrics_sink_calculator_test",
    srcs = [
        "generate_tokens_metrics_sink_calculator_test.cc",
        "test_utils.h",
    ],
    deps = [
        ":cc_library",
        "//src/gem/testing/core:cc_library",
    ],
)

gml_cc_test(
    name = "stop_on_token_set_calculator_test",
    srcs = [
        "stop_on_token_set_calculator_test.cc",
    ],
    deps = [
        ":cc_library",
        "//src/gem/testing/core:cc_library",
    ],
)

gml_cc_test(
    name = "buffer_tokens_for_autoregression_calculator_test",
    srcs = [
        "buffer_tokens_for_autoregression_calculator_test.cc",
    ],
    deps = [
        ":cc_library",
        "//src/gem/testing/core:cc_library",
    ],
)

gml_cc_test(
    name = "template_chat_message_calculator_test",
    srcs = [
        "template_chat_message_calculator_test.cc",
        "test_utils.h",
    ],
    deps = [
        ":cc_library",
        "//src/gem/testing/core:cc_library",
    ],
)

gml_cc_test(
    name = "flow_limiter_metrics_sink_calculator_test",
    srcs = [
        "flow_limiter_metrics_sink_calculator_test.cc",
        "test_utils.h",
    ],
    deps = [
        ":cc_library",
        "//src/gem/testing/core:cc_library",
    ],
)

gml_cc_test(
    name = "semantic_segmentation_metrics_sink_calculator_test",
    srcs = [
        "semantic_segmentation_metrics_sink_calculator_test.cc",
        "test_utils.h",
    ],
    deps = [
        ":cc_library",
        "//src/gem/testing/core:cc_library",
    ],
)
