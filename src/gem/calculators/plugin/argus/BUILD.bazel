# Copyright Â© 2023- Gimlet Labs, Inc.
# All Rights Reserved.
#
# NOTICE:  All information contained herein is, and remains
# the property of Gimlet Labs, Inc. and its suppliers,
# if any.  The intellectual and technical concepts contained
# herein are proprietary to Gimlet Labs, Inc. and its suppliers and
# may be covered by U.S. and Foreign Patents, patents in process,
# and are protected by trade secret or copyright law. Dissemination
# of this information or reproduction of this material is strictly
# forbidden unless prior written permission is obtained from
# Gimlet Labs, Inc.
#
# SPDX-License-Identifier: Proprietary

load("//bazel:gml_build_system.bzl", "gml_cc_library", "gml_cc_test")
load("//bazel:images.bzl", "gml_host_cuda_binary_image")

package(default_visibility = [
    "//src/experimental:__subpackages__",
    "//src/gem:__subpackages__",
])

gml_cc_library(
    name = "cc_library",
    srcs = glob(
        [
            "*.h",
            "*.cc",
        ],
        exclude = ["**/*_test.cc"],
    ),
    hdrs = ["argus_cam_calculator.h"],
    deps = [
        "//src/gem/devices/camera/argus:cc_library",
        "@com_github_google_mediapipe//mediapipe/framework:calculator_framework",
        "@libyuv",
    ],
)

# Test is marked as manual, because it can only run on the Jeston device.
gml_cc_test(
    name = "nvbuf_to_image_frame_test",
    srcs = [
        "nvbuf_to_image_frame_test.cc",
    ],
    tags = ["manual"],
    deps = [
        ":cc_library",
        "//src/gem/testing/core:cc_library",
        "@com_github_google_mediapipe//mediapipe/framework:calculator_runner",
    ],
)

# Because the test needs to be run on the Jeston device, we put the test into a container image.
# This image can then be deployed on the device as part of manually testing.
# TODO(oazizi): Package the test data in the image as well.
gml_host_cuda_binary_image(
    name = "nvbuf_to_image_frame_test_image",
    testonly = 1,
    base = "//:cc_base_debug_image",
    binary = ":nvbuf_to_image_frame_test",
    multiarch = False,
)
