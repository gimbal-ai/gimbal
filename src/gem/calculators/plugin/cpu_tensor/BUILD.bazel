# Copyright 2023- Gimlet Labs, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# SPDX-License-Identifier: Apache-2.0

load("//bazel:gml_build_system.bzl", "gml_cc_test")
load("//src/gem/plugins:plugins.bzl", "gem_plugin_cc_library")

package(default_visibility = [
    "//src/experimental:__subpackages__",
    "//src/gem:__subpackages__",
])

gem_plugin_cc_library(
    name = "cc_library",
    srcs = [
        "base.h",
        "bounding_box_tensors_to_detections_calculator.cc",
        "bounding_box_tensors_to_detections_calculator.h",
        "image_frame_to_cpu_tensor_calculator.cc",
        "image_frame_to_cpu_tensor_calculator.h",
        "image_shape_cpu_tensor_calculator.cc",
        "image_shape_cpu_tensor_calculator.h",
        "regression_to_proto_calculator.cc",
        "regression_to_proto_calculator.h",
        "scores_to_classification_calculator.cc",
        "scores_to_classification_calculator.h",
        "scores_to_label_calculator.cc",
        "scores_to_label_calculator.h",
        "segmentation_masks_to_proto_calculator.cc",
        "segmentation_masks_to_proto_calculator.h",
        "standardize_tensor_calculator.cc",
        "standardize_tensor_calculator.h",
        "tensor_to_tokens_calculator.cc",
        "tensor_to_tokens_calculator.h",
        "tokens_to_tensor_calculator.cc",
        "tokens_to_tensor_calculator.h",
    ],
    plugin_name = "cpu_tensor",
    deps = [
        "//src/api/corepb/v1:corepb_cc_library",
        "//src/gem/calculators/core:cc_library",
        "//src/gem/calculators/plugin/cpu_tensor/optionspb:optionspb_cc_library",
        "//src/gem/exec/core:cc_library",
        "//src/gem/exec/plugin/cpu_tensor:cc_library",
        "@com_github_google_mediapipe//mediapipe/framework/formats:image_frame",
        "@com_github_google_mediapipe//mediapipe/framework/formats:image_frame_opencv",
        "@com_github_opencv_opencv//:opencv",
    ],
)

gml_cc_test(
    name = "image_shape_cpu_tensor_calculator_test",
    srcs = [
        "image_shape_cpu_tensor_calculator_test.cc",
    ],
    deps = [
        ":cc_library",
        "//src/gem/testing/core:cc_library",
        "//src/gem/testing/plugin/cpu_tensor:cc_library",
    ],
)

gml_cc_test(
    name = "bounding_box_tensors_to_detections_calculator_test",
    srcs = [
        "bounding_box_tensors_to_detections_calculator_test.cc",
    ],
    deps = [
        ":cc_library",
        "//src/gem/testing/core:cc_library",
        "//src/gem/testing/plugin/cpu_tensor:cc_library",
    ],
)

gml_cc_test(
    name = "segmentation_masks_to_proto_calculator_test",
    srcs = [
        "segmentation_masks_to_proto_calculator_test.cc",
    ],
    deps = [
        ":cc_library",
        "//src/gem/testing/core:cc_library",
        "//src/gem/testing/plugin/cpu_tensor:cc_library",
    ],
)

gml_cc_test(
    name = "regression_to_proto_calculator_test",
    srcs = [
        "regression_to_proto_calculator_test.cc",
    ],
    deps = [
        ":cc_library",
        "//src/gem/testing/core:cc_library",
        "//src/gem/testing/plugin/cpu_tensor:cc_library",
    ],
)

gml_cc_test(
    name = "scores_to_classification_calculator_test",
    srcs = [
        "scores_to_classification_calculator_test.cc",
    ],
    deps = [
        ":cc_library",
        "//src/gem/testing/core:cc_library",
        "//src/gem/testing/plugin/cpu_tensor:cc_library",
    ],
)

gml_cc_test(
    name = "tokens_to_tensor_calculator_test",
    srcs = [
        "tokens_to_tensor_calculator_test.cc",
    ],
    deps = [
        ":cc_library",
        "//src/gem/testing/core:cc_library",
        "//src/gem/testing/plugin/cpu_tensor:cc_library",
    ],
)

gml_cc_test(
    name = "tensor_to_tokens_calculator_test",
    srcs = [
        "tensor_to_tokens_calculator_test.cc",
    ],
    deps = [
        ":cc_library",
        "//src/gem/testing/core:cc_library",
        "//src/gem/testing/plugin/cpu_tensor:cc_library",
    ],
)
