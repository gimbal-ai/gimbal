// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: src/gem/calculators/plugin/cpu_tensor/optionspb/regression_to_proto_options.proto

package optionspb

import (
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	io "io"
	math "math"
	math_bits "math/bits"
	reflect "reflect"
	strings "strings"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type RegressionToProtoOptions struct {
	Label string `protobuf:"bytes,1,opt,name=label,proto3" json:"label,omitempty"`
}

func (m *RegressionToProtoOptions) Reset()      { *m = RegressionToProtoOptions{} }
func (*RegressionToProtoOptions) ProtoMessage() {}
func (*RegressionToProtoOptions) Descriptor() ([]byte, []int) {
	return fileDescriptor_c84a6a96125cfd54, []int{0}
}
func (m *RegressionToProtoOptions) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *RegressionToProtoOptions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_RegressionToProtoOptions.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *RegressionToProtoOptions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegressionToProtoOptions.Merge(m, src)
}
func (m *RegressionToProtoOptions) XXX_Size() int {
	return m.Size()
}
func (m *RegressionToProtoOptions) XXX_DiscardUnknown() {
	xxx_messageInfo_RegressionToProtoOptions.DiscardUnknown(m)
}

var xxx_messageInfo_RegressionToProtoOptions proto.InternalMessageInfo

func (m *RegressionToProtoOptions) GetLabel() string {
	if m != nil {
		return m.Label
	}
	return ""
}

func init() {
	proto.RegisterType((*RegressionToProtoOptions)(nil), "gml.gem.calculators.cpu_tensor.optionspb.RegressionToProtoOptions")
}

func init() {
	proto.RegisterFile("src/gem/calculators/plugin/cpu_tensor/optionspb/regression_to_proto_options.proto", fileDescriptor_c84a6a96125cfd54)
}

var fileDescriptor_c84a6a96125cfd54 = []byte{
	// 234 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x8f, 0xbf, 0x4a, 0x04, 0x31,
	0x10, 0x87, 0x33, 0x85, 0x82, 0x5b, 0x1e, 0x16, 0x57, 0x0d, 0x62, 0x75, 0x55, 0x22, 0x58, 0xda,
	0xf9, 0x00, 0xfe, 0x39, 0xac, 0x6c, 0x96, 0xec, 0x12, 0x42, 0x60, 0x36, 0x13, 0x92, 0x6c, 0x6f,
	0xe1, 0x03, 0xf8, 0x18, 0x3e, 0x8a, 0xe5, 0x96, 0x57, 0xba, 0xd9, 0xc6, 0xf2, 0x1e, 0x41, 0xbc,
	0x95, 0xd5, 0xf6, 0xba, 0xf9, 0xf8, 0x31, 0x1f, 0x7c, 0xd5, 0x63, 0x8a, 0xad, 0xb2, 0xa6, 0x53,
	0xad, 0xa6, 0xb6, 0x27, 0x9d, 0x39, 0x26, 0x15, 0xa8, 0xb7, 0xce, 0xab, 0x36, 0xf4, 0x75, 0x36,
	0x3e, 0x71, 0x54, 0x1c, 0xb2, 0x63, 0x9f, 0x42, 0xa3, 0xa2, 0xb1, 0xd1, 0xa4, 0xe4, 0xd8, 0xd7,
	0x99, 0xeb, 0x10, 0x39, 0x73, 0xfd, 0xbb, 0xca, 0x03, 0xad, 0x36, 0xb6, 0x23, 0x69, 0x4d, 0x27,
	0xff, 0x29, 0xe5, 0x9f, 0x4b, 0x2e, 0xae, 0xcb, 0xab, 0x6a, 0xbd, 0x5d, 0x74, 0x4f, 0xfc, 0xf0,
	0xf3, 0x7e, 0x3f, 0xaf, 0xab, 0xf3, 0xea, 0x84, 0x74, 0x63, 0x68, 0x0d, 0x17, 0xb0, 0x39, 0xdb,
	0xce, 0x70, 0xfb, 0x0a, 0xc3, 0x88, 0x62, 0x37, 0xa2, 0xd8, 0x8f, 0x08, 0x2f, 0x05, 0xe1, 0xbd,
	0x20, 0x7c, 0x14, 0x84, 0xa1, 0x20, 0x7c, 0x16, 0x84, 0xaf, 0x82, 0x62, 0x5f, 0x10, 0xde, 0x26,
	0x14, 0xc3, 0x84, 0x62, 0x37, 0xa1, 0x78, 0xbe, 0xb3, 0xae, 0x23, 0x93, 0x49, 0x37, 0x49, 0x6a,
	0xa7, 0x66, 0x52, 0x47, 0xa6, 0xdf, 0x2c, 0x57, 0x73, 0x7a, 0x28, 0xbd, 0xfe, 0x0e, 0x00, 0x00,
	0xff, 0xff, 0x45, 0x3b, 0xcd, 0x0b, 0x3e, 0x01, 0x00, 0x00,
}

func (this *RegressionToProtoOptions) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*RegressionToProtoOptions)
	if !ok {
		that2, ok := that.(RegressionToProtoOptions)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Label != that1.Label {
		return false
	}
	return true
}
func (this *RegressionToProtoOptions) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 5)
	s = append(s, "&optionspb.RegressionToProtoOptions{")
	s = append(s, "Label: "+fmt.Sprintf("%#v", this.Label)+",\n")
	s = append(s, "}")
	return strings.Join(s, "")
}
func valueToGoStringRegressionToProtoOptions(v interface{}, typ string) string {
	rv := reflect.ValueOf(v)
	if rv.IsNil() {
		return "nil"
	}
	pv := reflect.Indirect(rv).Interface()
	return fmt.Sprintf("func(v %v) *%v { return &v } ( %#v )", typ, typ, pv)
}
func (m *RegressionToProtoOptions) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *RegressionToProtoOptions) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *RegressionToProtoOptions) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Label) > 0 {
		i -= len(m.Label)
		copy(dAtA[i:], m.Label)
		i = encodeVarintRegressionToProtoOptions(dAtA, i, uint64(len(m.Label)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func encodeVarintRegressionToProtoOptions(dAtA []byte, offset int, v uint64) int {
	offset -= sovRegressionToProtoOptions(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *RegressionToProtoOptions) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Label)
	if l > 0 {
		n += 1 + l + sovRegressionToProtoOptions(uint64(l))
	}
	return n
}

func sovRegressionToProtoOptions(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozRegressionToProtoOptions(x uint64) (n int) {
	return sovRegressionToProtoOptions(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (this *RegressionToProtoOptions) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&RegressionToProtoOptions{`,
		`Label:` + fmt.Sprintf("%v", this.Label) + `,`,
		`}`,
	}, "")
	return s
}
func valueToStringRegressionToProtoOptions(v interface{}) string {
	rv := reflect.ValueOf(v)
	if rv.IsNil() {
		return "nil"
	}
	pv := reflect.Indirect(rv).Interface()
	return fmt.Sprintf("*%v", pv)
}
func (m *RegressionToProtoOptions) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRegressionToProtoOptions
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: RegressionToProtoOptions: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: RegressionToProtoOptions: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Label", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRegressionToProtoOptions
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRegressionToProtoOptions
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRegressionToProtoOptions
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Label = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRegressionToProtoOptions(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthRegressionToProtoOptions
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipRegressionToProtoOptions(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowRegressionToProtoOptions
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowRegressionToProtoOptions
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowRegressionToProtoOptions
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthRegressionToProtoOptions
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupRegressionToProtoOptions
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthRegressionToProtoOptions
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthRegressionToProtoOptions        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowRegressionToProtoOptions          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupRegressionToProtoOptions = fmt.Errorf("proto: unexpected end of group")
)
