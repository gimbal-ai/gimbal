# Copyright Â© 2023- Gimlet Labs, Inc.
# All Rights Reserved.
#
# NOTICE:  All information contained herein is, and remains
# the property of Gimlet Labs, Inc. and its suppliers,
# if any.  The intellectual and technical concepts contained
# herein are proprietary to Gimlet Labs, Inc. and its suppliers and
# may be covered by U.S. and Foreign Patents, patents in process,
# and are protected by trade secret or copyright law. Dissemination
# of this information or reproduction of this material is strictly
# forbidden unless prior written permission is obtained from
# Gimlet Labs, Inc.
#
# SPDX-License-Identifier: Proprietary

load("@com_github_google_mediapipe//mediapipe/framework/tool:mediapipe_graph.bzl", "mediapipe_simple_subgraph")
load("//bazel:gml_build_system.bzl", "gml_cc_test")

package(default_visibility = [
    "//src:__subpackages__",
])

mediapipe_simple_subgraph(
    name = "argus_cam_source_subgraph",
    graph = "argus_cam_source_subgraph.pbtxt",
    register_as = "ArgusCamSourceSubgraph",
    deps = [
        "//src/gem/calculators/plugin/argus:cc_library",
        "@com_github_google_mediapipe//mediapipe/calculators/core:flow_limiter_calculator",
    ],
)

mediapipe_simple_subgraph(
    name = "opencv_cam_source_subgraph",
    graph = "opencv_cam_source_subgraph.pbtxt",
    register_as = "OpenCVCamSourceSubgraph",
    deps = [
        "//src/gem/calculators/plugin/opencv_cam:cc_library",
        "@com_github_google_mediapipe//mediapipe/calculators/core:flow_limiter_calculator",
    ],
)

mediapipe_simple_subgraph(
    name = "obj_detection_overlayed_video_sink_subgraph",
    graph = "obj_detection_overlayed_video_sink_subgraph.pbtxt",
    register_as = "ObjDetectionOverlayedVideoSinkSubgraph",
    deps = [
        "//src/gem/calculators/plugin/ffmpeg:cc_library",
    ],
)

mediapipe_simple_subgraph(
    name = "video_encoder_subgraph",
    graph = "video_encoder_subgraph.pbtxt",
    register_as = "VideoEncoderSubgraph",
    deps = [
        "//src/gem/calculators/core:cc_library",
        "//src/gem/calculators/plugin/ffmpeg:cc_library",
        "@com_github_google_mediapipe//mediapipe/calculators/image:scale_image_calculator",
    ],
)

mediapipe_simple_subgraph(
    name = "yolo_model_tensorrt_subgraph",
    graph = "yolo_model_tensorrt_subgraph.pbtxt",
    register_as = "YoloModelTensorRTSubgraph",
    deps = [
        "//src/gem/calculators/plugin/cpu_tensor:cc_library",
        "//src/gem/calculators/plugin/tensorrt:cc_library",
        "@com_github_google_mediapipe//mediapipe/calculators/image:image_transformation_calculator",
    ],
)

mediapipe_simple_subgraph(
    name = "yolo_model_openvino_subgraph",
    graph = "yolo_model_openvino_subgraph.pbtxt",
    register_as = "YoloModelOpenVINOSubgraph",
    deps = [
        "//src/gem/calculators/plugin/cpu_tensor:cc_library",
        "//src/gem/calculators/plugin/openvino:cc_library",
        "@com_github_google_mediapipe//mediapipe/calculators/image:image_transformation_calculator",
    ],
)

mediapipe_simple_subgraph(
    name = "product_model_tensorrt_subgraph",
    graph = "product_model_tensorrt_subgraph.pbtxt",
    register_as = "ProductModelTensorRTSubgraph",
    deps = [
        "//src/gem/calculators/plugin/cpu_tensor:cc_library",
        "//src/gem/calculators/plugin/tensorrt:cc_library",
        "@com_github_google_mediapipe//mediapipe/calculators/image:image_transformation_calculator",
    ],
)

mediapipe_simple_subgraph(
    name = "product_model_openvino_subgraph",
    graph = "product_model_openvino_subgraph.pbtxt",
    register_as = "ProductModelOpenVINOSubgraph",
    deps = [
        "//src/gem/calculators/plugin/cpu_tensor:cc_library",
        "//src/gem/calculators/plugin/openvino:cc_library",
        "@com_github_google_mediapipe//mediapipe/calculators/image:image_transformation_calculator",
    ],
)

gml_cc_test(
    name = "subgraph_test",
    srcs = ["subgraph_test.cc"],
    deps = [
        ":opencv_cam_source_subgraph",
        ":video_encoder_subgraph",
        "@com_github_google_mediapipe//mediapipe/framework:subgraph",
    ],
)
