# Copyright 2023- Gimlet Labs, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# SPDX-License-Identifier: Apache-2.0

load("//bazel:gml_build_system.bzl", "gml_cc_library")
load("//src/gem/plugins:plugins.bzl", "select_plugins")

package(default_visibility = [
    "//src:__subpackages__",
])

gml_cc_library(
    name = "cc_library",
    srcs = [
        "cached_blob_store.cc",
        "controller.cc",
        "device_info.cc",
        "device_serial.cc",
        "file_downloader.cc",
        "gem_metrics.cc",
        "grpc_bridge.cc",
        "heartbeat.cc",
        "lifecycle.cc",
        "metrics_handler.cc",
        "model_exec_handler.cc",
        "system_metrics.cc",
        "video_stream_handler.cc",
    ],
    hdrs = [
        "cached_blob_store.h",
        "controller.h",
        "device_info.h",
        "device_serial.h",
        "file_downloader.h",
        "gem_info.h",
        "gem_metrics.h",
        "grpc_bridge.h",
        "heartbeat.h",
        "lifecycle.h",
        "message_handler.h",
        "metrics_handler.h",
        "model_exec_handler.h",
        "system_metrics.h",
        "video_stream_handler.h",
    ],
    deps = [
        "//src/api/corepb/v1:corepb_cc_library",
        "//src/common/bazel:cc_library",
        "//src/common/event:cc_library",
        "//src/common/grpcutils:cc_library",
        "//src/common/metrics:cc_library",
        "//src/common/signal:cc_library",
        "//src/common/system:cc_library",
        "//src/common/uuid:cc_library",
        "//src/controlplane/egw/egwpb/v1:egwpb_cc_library",
        "//src/controlplane/egw/egwpb/v1:egwpb_grpc_cc_library",
        "//src/controlplane/filetransfer/ftpb/v1:ftpb_cc_library",
        "//src/controlplane/fleetmgr/fmpb/v1:fmpb_cc_library",
        "//src/controlplane/fleetmgr/fmpb/v1:fmpb_grpc_cc_library",
        "//src/gem/calculators/core:cc_library",
        "//src/gem/calculators/plugin/argus/optionspb:optionspb_cc_library",
        "//src/gem/calculators/plugin/opencv_cam/optionspb:optionspb_cc_library",
        "//src/gem/exec/core/runner:cc_library",
        "//src/gem/plugins:cc_library",
        "//src/gem/storage:cc_library",
        "//src/shared/version:cc_library",
        "@com_github_google_mediapipe//mediapipe/calculators/core:flow_limiter_calculator",
        "@com_github_google_mediapipe//mediapipe/calculators/util:annotation_overlay_calculator",
        "@com_github_google_mediapipe//mediapipe/calculators/util:detections_to_render_data_calculator",
        "@com_github_google_mediapipe//mediapipe/calculators/util:packet_latency_calculator",
        "@com_github_google_mediapipe//mediapipe/framework:calculator_framework",
        "@com_github_okdshin_picosha//:picosha",
        "@com_github_oneapi_oneTBB//:tbb",
        "@com_github_rlyeh_sole//:sole",
    ] + select_plugins(),
)
