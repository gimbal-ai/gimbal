# Copyright 2023- Gimlet Labs, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# SPDX-License-Identifier: Apache-2.0

load("@build_stack_rules_proto//rules:proto_compile.bzl", "proto_compile")
load("@build_stack_rules_proto//rules/cc:proto_cc_library.bzl", "proto_cc_library")
load("@build_stack_rules_proto//rules/go:proto_go_library.bzl", "proto_go_library")
load("@build_stack_rules_proto//rules/py:proto_py_library.bzl", "proto_py_library")
load("@rules_proto//proto:defs.bzl", "proto_library")

proto_library(
    name = "core_proto",
    srcs = [
        "bypass_calculator.proto",
        "clip_vector_size_calculator.proto",
        "concatenate_vector_calculator.proto",
        "constant_side_packet_calculator.proto",
        "dequantize_byte_array_calculator.proto",
        "flow_limiter_calculator.proto",
        "gate_calculator.proto",
        "get_vector_item_calculator.proto",
        "graph_profile_calculator.proto",
        "packet_cloner_calculator.proto",
        "packet_resampler_calculator.proto",
        "packet_thinner_calculator.proto",
        "quantize_float_vector_calculator.proto",
        "sequence_shift_calculator.proto",
        "split_vector_calculator.proto",
    ],
    strip_import_prefix = "/third_party/github.com/google/mediapipe",
    visibility = ["//visibility:public"],
    deps = [
        "//third_party/github.com/google/mediapipe/mediapipe/framework:framework_proto",
        "//third_party/github.com/google/mediapipe/mediapipe/framework/formats:formats_proto",
    ],
)

proto_cc_library(
    name = "core_cc_library",
    srcs = [
        "bypass_calculator.pb.cc",
        "clip_vector_size_calculator.pb.cc",
        "concatenate_vector_calculator.pb.cc",
        "constant_side_packet_calculator.pb.cc",
        "dequantize_byte_array_calculator.pb.cc",
        "flow_limiter_calculator.pb.cc",
        "gate_calculator.pb.cc",
        "get_vector_item_calculator.pb.cc",
        "graph_profile_calculator.pb.cc",
        "packet_cloner_calculator.pb.cc",
        "packet_resampler_calculator.pb.cc",
        "packet_thinner_calculator.pb.cc",
        "quantize_float_vector_calculator.pb.cc",
        "sequence_shift_calculator.pb.cc",
        "split_vector_calculator.pb.cc",
    ],
    hdrs = [
        "bypass_calculator.pb.h",
        "clip_vector_size_calculator.pb.h",
        "concatenate_vector_calculator.pb.h",
        "constant_side_packet_calculator.pb.h",
        "dequantize_byte_array_calculator.pb.h",
        "flow_limiter_calculator.pb.h",
        "gate_calculator.pb.h",
        "get_vector_item_calculator.pb.h",
        "graph_profile_calculator.pb.h",
        "packet_cloner_calculator.pb.h",
        "packet_resampler_calculator.pb.h",
        "packet_thinner_calculator.pb.h",
        "quantize_float_vector_calculator.pb.h",
        "sequence_shift_calculator.pb.h",
        "split_vector_calculator.pb.h",
    ],
    strip_include_prefix = "/third_party/github.com/google/mediapipe",
    visibility = ["//visibility:public"],
    deps = [
        "//third_party/github.com/google/mediapipe/mediapipe/framework:framework_cc_library",
        "//third_party/github.com/google/mediapipe/mediapipe/framework/formats:formats_cc_library",
        "@com_google_protobuf//:protobuf",
    ],
)

proto_compile(
    name = "core_cpp_compile",
    output_mappings = [
        "bypass_calculator.pb.cc=mediapipe/calculators/core/bypass_calculator.pb.cc",
        "bypass_calculator.pb.h=mediapipe/calculators/core/bypass_calculator.pb.h",
        "clip_vector_size_calculator.pb.cc=mediapipe/calculators/core/clip_vector_size_calculator.pb.cc",
        "clip_vector_size_calculator.pb.h=mediapipe/calculators/core/clip_vector_size_calculator.pb.h",
        "concatenate_vector_calculator.pb.cc=mediapipe/calculators/core/concatenate_vector_calculator.pb.cc",
        "concatenate_vector_calculator.pb.h=mediapipe/calculators/core/concatenate_vector_calculator.pb.h",
        "constant_side_packet_calculator.pb.cc=mediapipe/calculators/core/constant_side_packet_calculator.pb.cc",
        "constant_side_packet_calculator.pb.h=mediapipe/calculators/core/constant_side_packet_calculator.pb.h",
        "dequantize_byte_array_calculator.pb.cc=mediapipe/calculators/core/dequantize_byte_array_calculator.pb.cc",
        "dequantize_byte_array_calculator.pb.h=mediapipe/calculators/core/dequantize_byte_array_calculator.pb.h",
        "flow_limiter_calculator.pb.cc=mediapipe/calculators/core/flow_limiter_calculator.pb.cc",
        "flow_limiter_calculator.pb.h=mediapipe/calculators/core/flow_limiter_calculator.pb.h",
        "gate_calculator.pb.cc=mediapipe/calculators/core/gate_calculator.pb.cc",
        "gate_calculator.pb.h=mediapipe/calculators/core/gate_calculator.pb.h",
        "get_vector_item_calculator.pb.cc=mediapipe/calculators/core/get_vector_item_calculator.pb.cc",
        "get_vector_item_calculator.pb.h=mediapipe/calculators/core/get_vector_item_calculator.pb.h",
        "graph_profile_calculator.pb.cc=mediapipe/calculators/core/graph_profile_calculator.pb.cc",
        "graph_profile_calculator.pb.h=mediapipe/calculators/core/graph_profile_calculator.pb.h",
        "packet_cloner_calculator.pb.cc=mediapipe/calculators/core/packet_cloner_calculator.pb.cc",
        "packet_cloner_calculator.pb.h=mediapipe/calculators/core/packet_cloner_calculator.pb.h",
        "packet_resampler_calculator.pb.cc=mediapipe/calculators/core/packet_resampler_calculator.pb.cc",
        "packet_resampler_calculator.pb.h=mediapipe/calculators/core/packet_resampler_calculator.pb.h",
        "packet_thinner_calculator.pb.cc=mediapipe/calculators/core/packet_thinner_calculator.pb.cc",
        "packet_thinner_calculator.pb.h=mediapipe/calculators/core/packet_thinner_calculator.pb.h",
        "quantize_float_vector_calculator.pb.cc=mediapipe/calculators/core/quantize_float_vector_calculator.pb.cc",
        "quantize_float_vector_calculator.pb.h=mediapipe/calculators/core/quantize_float_vector_calculator.pb.h",
        "sequence_shift_calculator.pb.cc=mediapipe/calculators/core/sequence_shift_calculator.pb.cc",
        "sequence_shift_calculator.pb.h=mediapipe/calculators/core/sequence_shift_calculator.pb.h",
        "split_vector_calculator.pb.cc=mediapipe/calculators/core/split_vector_calculator.pb.cc",
        "split_vector_calculator.pb.h=mediapipe/calculators/core/split_vector_calculator.pb.h",
    ],
    outputs = [
        "bypass_calculator.pb.cc",
        "bypass_calculator.pb.h",
        "clip_vector_size_calculator.pb.cc",
        "clip_vector_size_calculator.pb.h",
        "concatenate_vector_calculator.pb.cc",
        "concatenate_vector_calculator.pb.h",
        "constant_side_packet_calculator.pb.cc",
        "constant_side_packet_calculator.pb.h",
        "dequantize_byte_array_calculator.pb.cc",
        "dequantize_byte_array_calculator.pb.h",
        "flow_limiter_calculator.pb.cc",
        "flow_limiter_calculator.pb.h",
        "gate_calculator.pb.cc",
        "gate_calculator.pb.h",
        "get_vector_item_calculator.pb.cc",
        "get_vector_item_calculator.pb.h",
        "graph_profile_calculator.pb.cc",
        "graph_profile_calculator.pb.h",
        "packet_cloner_calculator.pb.cc",
        "packet_cloner_calculator.pb.h",
        "packet_resampler_calculator.pb.cc",
        "packet_resampler_calculator.pb.h",
        "packet_thinner_calculator.pb.cc",
        "packet_thinner_calculator.pb.h",
        "quantize_float_vector_calculator.pb.cc",
        "quantize_float_vector_calculator.pb.h",
        "sequence_shift_calculator.pb.cc",
        "sequence_shift_calculator.pb.h",
        "split_vector_calculator.pb.cc",
        "split_vector_calculator.pb.h",
    ],
    plugins = ["@build_stack_rules_proto//plugin/builtin:cpp"],
    proto = "core_proto",
    visibility = ["//visibility:public"],
)

proto_compile(
    name = "core_go_compile",
    output_mappings = [
        "bypass_calculator.pb.go=github.com/google/mediapipe/mediapipe/calculators/core/bypass_calculator.pb.go",
        "clip_vector_size_calculator.pb.go=github.com/google/mediapipe/mediapipe/calculators/core/clip_vector_size_calculator.pb.go",
        "concatenate_vector_calculator.pb.go=github.com/google/mediapipe/mediapipe/calculators/core/concatenate_vector_calculator.pb.go",
        "constant_side_packet_calculator.pb.go=github.com/google/mediapipe/mediapipe/calculators/core/constant_side_packet_calculator.pb.go",
        "dequantize_byte_array_calculator.pb.go=github.com/google/mediapipe/mediapipe/calculators/core/dequantize_byte_array_calculator.pb.go",
        "flow_limiter_calculator.pb.go=github.com/google/mediapipe/mediapipe/calculators/core/flow_limiter_calculator.pb.go",
        "gate_calculator.pb.go=github.com/google/mediapipe/mediapipe/calculators/core/gate_calculator.pb.go",
        "get_vector_item_calculator.pb.go=github.com/google/mediapipe/mediapipe/calculators/core/get_vector_item_calculator.pb.go",
        "graph_profile_calculator.pb.go=github.com/google/mediapipe/mediapipe/calculators/core/graph_profile_calculator.pb.go",
        "packet_cloner_calculator.pb.go=github.com/google/mediapipe/mediapipe/calculators/core/packet_cloner_calculator.pb.go",
        "packet_resampler_calculator.pb.go=github.com/google/mediapipe/mediapipe/calculators/core/packet_resampler_calculator.pb.go",
        "packet_thinner_calculator.pb.go=github.com/google/mediapipe/mediapipe/calculators/core/packet_thinner_calculator.pb.go",
        "quantize_float_vector_calculator.pb.go=github.com/google/mediapipe/mediapipe/calculators/core/quantize_float_vector_calculator.pb.go",
        "sequence_shift_calculator.pb.go=github.com/google/mediapipe/mediapipe/calculators/core/sequence_shift_calculator.pb.go",
        "split_vector_calculator.pb.go=github.com/google/mediapipe/mediapipe/calculators/core/split_vector_calculator.pb.go",
    ],
    outputs = [
        "bypass_calculator.pb.go",
        "clip_vector_size_calculator.pb.go",
        "concatenate_vector_calculator.pb.go",
        "constant_side_packet_calculator.pb.go",
        "dequantize_byte_array_calculator.pb.go",
        "flow_limiter_calculator.pb.go",
        "gate_calculator.pb.go",
        "get_vector_item_calculator.pb.go",
        "graph_profile_calculator.pb.go",
        "packet_cloner_calculator.pb.go",
        "packet_resampler_calculator.pb.go",
        "packet_thinner_calculator.pb.go",
        "quantize_float_vector_calculator.pb.go",
        "sequence_shift_calculator.pb.go",
        "split_vector_calculator.pb.go",
    ],
    plugins = ["@build_stack_rules_proto//plugin/gogo/protobuf:protoc-gen-gogoslick"],
    proto = "core_proto",
    visibility = ["//visibility:public"],
)

proto_go_library(
    name = "core_go_proto",
    srcs = [
        "bypass_calculator.pb.go",
        "clip_vector_size_calculator.pb.go",
        "concatenate_vector_calculator.pb.go",
        "constant_side_packet_calculator.pb.go",
        "dequantize_byte_array_calculator.pb.go",
        "flow_limiter_calculator.pb.go",
        "gate_calculator.pb.go",
        "get_vector_item_calculator.pb.go",
        "graph_profile_calculator.pb.go",
        "packet_cloner_calculator.pb.go",
        "packet_resampler_calculator.pb.go",
        "packet_thinner_calculator.pb.go",
        "quantize_float_vector_calculator.pb.go",
        "sequence_shift_calculator.pb.go",
        "split_vector_calculator.pb.go",
    ],
    importpath = "github.com/google/mediapipe/mediapipe/calculators/core",
    visibility = ["//visibility:public"],
    deps = [
        "//third_party/github.com/google/mediapipe/mediapipe/framework:framework_go_proto",
        "//third_party/github.com/google/mediapipe/mediapipe/framework/formats:formats_go_proto",
        "@com_github_gogo_protobuf//proto",
        "@com_github_gogo_protobuf//protoc-gen-gogo/descriptor",
        "@com_github_gogo_protobuf//sortkeys",
        "@com_github_gogo_protobuf//types",
        "@org_golang_google_grpc//:go_default_library",
        "@org_golang_google_grpc//codes",
        "@org_golang_google_grpc//status",
    ],
)

proto_compile(
    name = "core_py_compile",
    output_mappings = [
        "bypass_calculator_pb2.py=/mediapipe/calculators/core/bypass_calculator_pb2.py",
        "clip_vector_size_calculator_pb2.py=/mediapipe/calculators/core/clip_vector_size_calculator_pb2.py",
        "concatenate_vector_calculator_pb2.py=/mediapipe/calculators/core/concatenate_vector_calculator_pb2.py",
        "constant_side_packet_calculator_pb2.py=/mediapipe/calculators/core/constant_side_packet_calculator_pb2.py",
        "dequantize_byte_array_calculator_pb2.py=/mediapipe/calculators/core/dequantize_byte_array_calculator_pb2.py",
        "flow_limiter_calculator_pb2.py=/mediapipe/calculators/core/flow_limiter_calculator_pb2.py",
        "gate_calculator_pb2.py=/mediapipe/calculators/core/gate_calculator_pb2.py",
        "get_vector_item_calculator_pb2.py=/mediapipe/calculators/core/get_vector_item_calculator_pb2.py",
        "graph_profile_calculator_pb2.py=/mediapipe/calculators/core/graph_profile_calculator_pb2.py",
        "packet_cloner_calculator_pb2.py=/mediapipe/calculators/core/packet_cloner_calculator_pb2.py",
        "packet_resampler_calculator_pb2.py=/mediapipe/calculators/core/packet_resampler_calculator_pb2.py",
        "packet_thinner_calculator_pb2.py=/mediapipe/calculators/core/packet_thinner_calculator_pb2.py",
        "quantize_float_vector_calculator_pb2.py=/mediapipe/calculators/core/quantize_float_vector_calculator_pb2.py",
        "sequence_shift_calculator_pb2.py=/mediapipe/calculators/core/sequence_shift_calculator_pb2.py",
        "split_vector_calculator_pb2.py=/mediapipe/calculators/core/split_vector_calculator_pb2.py",
        "bypass_calculator_pb2.pyi=/mediapipe/calculators/core/bypass_calculator_pb2.pyi",
        "clip_vector_size_calculator_pb2.pyi=/mediapipe/calculators/core/clip_vector_size_calculator_pb2.pyi",
        "concatenate_vector_calculator_pb2.pyi=/mediapipe/calculators/core/concatenate_vector_calculator_pb2.pyi",
        "constant_side_packet_calculator_pb2.pyi=/mediapipe/calculators/core/constant_side_packet_calculator_pb2.pyi",
        "dequantize_byte_array_calculator_pb2.pyi=/mediapipe/calculators/core/dequantize_byte_array_calculator_pb2.pyi",
        "flow_limiter_calculator_pb2.pyi=/mediapipe/calculators/core/flow_limiter_calculator_pb2.pyi",
        "gate_calculator_pb2.pyi=/mediapipe/calculators/core/gate_calculator_pb2.pyi",
        "get_vector_item_calculator_pb2.pyi=/mediapipe/calculators/core/get_vector_item_calculator_pb2.pyi",
        "graph_profile_calculator_pb2.pyi=/mediapipe/calculators/core/graph_profile_calculator_pb2.pyi",
        "packet_cloner_calculator_pb2.pyi=/mediapipe/calculators/core/packet_cloner_calculator_pb2.pyi",
        "packet_resampler_calculator_pb2.pyi=/mediapipe/calculators/core/packet_resampler_calculator_pb2.pyi",
        "packet_thinner_calculator_pb2.pyi=/mediapipe/calculators/core/packet_thinner_calculator_pb2.pyi",
        "quantize_float_vector_calculator_pb2.pyi=/mediapipe/calculators/core/quantize_float_vector_calculator_pb2.pyi",
        "sequence_shift_calculator_pb2.pyi=/mediapipe/calculators/core/sequence_shift_calculator_pb2.pyi",
        "split_vector_calculator_pb2.pyi=/mediapipe/calculators/core/split_vector_calculator_pb2.pyi",
    ],
    outputs = [
        "bypass_calculator_pb2.py",
        "clip_vector_size_calculator_pb2.py",
        "concatenate_vector_calculator_pb2.py",
        "constant_side_packet_calculator_pb2.py",
        "dequantize_byte_array_calculator_pb2.py",
        "flow_limiter_calculator_pb2.py",
        "gate_calculator_pb2.py",
        "get_vector_item_calculator_pb2.py",
        "graph_profile_calculator_pb2.py",
        "packet_cloner_calculator_pb2.py",
        "packet_resampler_calculator_pb2.py",
        "packet_thinner_calculator_pb2.py",
        "quantize_float_vector_calculator_pb2.py",
        "sequence_shift_calculator_pb2.py",
        "split_vector_calculator_pb2.py",
        "bypass_calculator_pb2.pyi",
        "clip_vector_size_calculator_pb2.pyi",
        "concatenate_vector_calculator_pb2.pyi",
        "constant_side_packet_calculator_pb2.pyi",
        "dequantize_byte_array_calculator_pb2.pyi",
        "flow_limiter_calculator_pb2.pyi",
        "gate_calculator_pb2.pyi",
        "get_vector_item_calculator_pb2.pyi",
        "graph_profile_calculator_pb2.pyi",
        "packet_cloner_calculator_pb2.pyi",
        "packet_resampler_calculator_pb2.pyi",
        "packet_thinner_calculator_pb2.pyi",
        "quantize_float_vector_calculator_pb2.pyi",
        "sequence_shift_calculator_pb2.pyi",
        "split_vector_calculator_pb2.pyi",
    ],
    plugins = [
        "@build_stack_rules_proto//plugin/builtin:python",
        "@build_stack_rules_proto//plugin/builtin:pyi",
    ],
    proto = "core_proto",
    visibility = ["//visibility:public"],
)

proto_py_library(
    name = "core_py_library",
    srcs = [
        "bypass_calculator_pb2.py",
        "clip_vector_size_calculator_pb2.py",
        "concatenate_vector_calculator_pb2.py",
        "constant_side_packet_calculator_pb2.py",
        "dequantize_byte_array_calculator_pb2.py",
        "flow_limiter_calculator_pb2.py",
        "gate_calculator_pb2.py",
        "get_vector_item_calculator_pb2.py",
        "graph_profile_calculator_pb2.py",
        "packet_cloner_calculator_pb2.py",
        "packet_resampler_calculator_pb2.py",
        "packet_thinner_calculator_pb2.py",
        "quantize_float_vector_calculator_pb2.py",
        "sequence_shift_calculator_pb2.py",
        "split_vector_calculator_pb2.py",
    ],
    imports = ["../../.."],
    visibility = ["//visibility:public"],
    deps = [
        "//third_party/github.com/google/mediapipe/mediapipe/framework:framework_py_library",
        "//third_party/github.com/google/mediapipe/mediapipe/framework/formats:formats_py_library",
        "@pip//protobuf",
    ],
)
