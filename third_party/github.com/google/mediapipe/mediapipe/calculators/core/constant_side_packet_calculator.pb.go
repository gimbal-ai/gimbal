// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: mediapipe/calculators/core/constant_side_packet_calculator.proto

package core

import (
	encoding_binary "encoding/binary"
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	_ "github.com/google/mediapipe/mediapipe/framework"
	formats "github.com/google/mediapipe/mediapipe/framework/formats"
	io "io"
	math "math"
	math_bits "math/bits"
	reflect "reflect"
	strings "strings"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type ConstantSidePacketCalculatorOptions struct {
	Packet []*ConstantSidePacketCalculatorOptions_ConstantSidePacket `protobuf:"bytes,1,rep,name=packet,proto3" json:"packet,omitempty"`
}

func (m *ConstantSidePacketCalculatorOptions) Reset()      { *m = ConstantSidePacketCalculatorOptions{} }
func (*ConstantSidePacketCalculatorOptions) ProtoMessage() {}
func (*ConstantSidePacketCalculatorOptions) Descriptor() ([]byte, []int) {
	return fileDescriptor_a76c5d043d836771, []int{0}
}
func (m *ConstantSidePacketCalculatorOptions) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ConstantSidePacketCalculatorOptions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ConstantSidePacketCalculatorOptions.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ConstantSidePacketCalculatorOptions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConstantSidePacketCalculatorOptions.Merge(m, src)
}
func (m *ConstantSidePacketCalculatorOptions) XXX_Size() int {
	return m.Size()
}
func (m *ConstantSidePacketCalculatorOptions) XXX_DiscardUnknown() {
	xxx_messageInfo_ConstantSidePacketCalculatorOptions.DiscardUnknown(m)
}

var xxx_messageInfo_ConstantSidePacketCalculatorOptions proto.InternalMessageInfo

func (m *ConstantSidePacketCalculatorOptions) GetPacket() []*ConstantSidePacketCalculatorOptions_ConstantSidePacket {
	if m != nil {
		return m.Packet
	}
	return nil
}

type ConstantSidePacketCalculatorOptions_ConstantSidePacket struct {
	// Types that are valid to be assigned to Value:
	//	*ConstantSidePacketCalculatorOptions_ConstantSidePacket_IntValue
	//	*ConstantSidePacketCalculatorOptions_ConstantSidePacket_Uint64Value
	//	*ConstantSidePacketCalculatorOptions_ConstantSidePacket_Int64Value
	//	*ConstantSidePacketCalculatorOptions_ConstantSidePacket_FloatValue
	//	*ConstantSidePacketCalculatorOptions_ConstantSidePacket_DoubleValue
	//	*ConstantSidePacketCalculatorOptions_ConstantSidePacket_BoolValue
	//	*ConstantSidePacketCalculatorOptions_ConstantSidePacket_StringValue
	//	*ConstantSidePacketCalculatorOptions_ConstantSidePacket_ClassificationListValue
	//	*ConstantSidePacketCalculatorOptions_ConstantSidePacket_LandmarkListValue
	//	*ConstantSidePacketCalculatorOptions_ConstantSidePacket_TimeSeriesHeaderValue
	//	*ConstantSidePacketCalculatorOptions_ConstantSidePacket_MatrixDataValue
	Value isConstantSidePacketCalculatorOptions_ConstantSidePacket_Value `protobuf_oneof:"value"`
}

func (m *ConstantSidePacketCalculatorOptions_ConstantSidePacket) Reset() {
	*m = ConstantSidePacketCalculatorOptions_ConstantSidePacket{}
}
func (*ConstantSidePacketCalculatorOptions_ConstantSidePacket) ProtoMessage() {}
func (*ConstantSidePacketCalculatorOptions_ConstantSidePacket) Descriptor() ([]byte, []int) {
	return fileDescriptor_a76c5d043d836771, []int{0, 0}
}
func (m *ConstantSidePacketCalculatorOptions_ConstantSidePacket) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ConstantSidePacketCalculatorOptions_ConstantSidePacket) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ConstantSidePacketCalculatorOptions_ConstantSidePacket.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ConstantSidePacketCalculatorOptions_ConstantSidePacket) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConstantSidePacketCalculatorOptions_ConstantSidePacket.Merge(m, src)
}
func (m *ConstantSidePacketCalculatorOptions_ConstantSidePacket) XXX_Size() int {
	return m.Size()
}
func (m *ConstantSidePacketCalculatorOptions_ConstantSidePacket) XXX_DiscardUnknown() {
	xxx_messageInfo_ConstantSidePacketCalculatorOptions_ConstantSidePacket.DiscardUnknown(m)
}

var xxx_messageInfo_ConstantSidePacketCalculatorOptions_ConstantSidePacket proto.InternalMessageInfo

type isConstantSidePacketCalculatorOptions_ConstantSidePacket_Value interface {
	isConstantSidePacketCalculatorOptions_ConstantSidePacket_Value()
	Equal(interface{}) bool
	MarshalTo([]byte) (int, error)
	Size() int
}

type ConstantSidePacketCalculatorOptions_ConstantSidePacket_IntValue struct {
	IntValue int32 `protobuf:"varint,1,opt,name=int_value,json=intValue,proto3,oneof" json:"int_value,omitempty"`
}
type ConstantSidePacketCalculatorOptions_ConstantSidePacket_Uint64Value struct {
	Uint64Value uint64 `protobuf:"varint,5,opt,name=uint64_value,json=uint64Value,proto3,oneof" json:"uint64_value,omitempty"`
}
type ConstantSidePacketCalculatorOptions_ConstantSidePacket_Int64Value struct {
	Int64Value int64 `protobuf:"varint,11,opt,name=int64_value,json=int64Value,proto3,oneof" json:"int64_value,omitempty"`
}
type ConstantSidePacketCalculatorOptions_ConstantSidePacket_FloatValue struct {
	FloatValue float32 `protobuf:"fixed32,2,opt,name=float_value,json=floatValue,proto3,oneof" json:"float_value,omitempty"`
}
type ConstantSidePacketCalculatorOptions_ConstantSidePacket_DoubleValue struct {
	DoubleValue float64 `protobuf:"fixed64,9,opt,name=double_value,json=doubleValue,proto3,oneof" json:"double_value,omitempty"`
}
type ConstantSidePacketCalculatorOptions_ConstantSidePacket_BoolValue struct {
	BoolValue bool `protobuf:"varint,3,opt,name=bool_value,json=boolValue,proto3,oneof" json:"bool_value,omitempty"`
}
type ConstantSidePacketCalculatorOptions_ConstantSidePacket_StringValue struct {
	StringValue string `protobuf:"bytes,4,opt,name=string_value,json=stringValue,proto3,oneof" json:"string_value,omitempty"`
}
type ConstantSidePacketCalculatorOptions_ConstantSidePacket_ClassificationListValue struct {
	ClassificationListValue *formats.ClassificationList `protobuf:"bytes,6,opt,name=classification_list_value,json=classificationListValue,proto3,oneof" json:"classification_list_value,omitempty"`
}
type ConstantSidePacketCalculatorOptions_ConstantSidePacket_LandmarkListValue struct {
	LandmarkListValue *formats.LandmarkList `protobuf:"bytes,7,opt,name=landmark_list_value,json=landmarkListValue,proto3,oneof" json:"landmark_list_value,omitempty"`
}
type ConstantSidePacketCalculatorOptions_ConstantSidePacket_TimeSeriesHeaderValue struct {
	TimeSeriesHeaderValue *formats.TimeSeriesHeader `protobuf:"bytes,10,opt,name=time_series_header_value,json=timeSeriesHeaderValue,proto3,oneof" json:"time_series_header_value,omitempty"`
}
type ConstantSidePacketCalculatorOptions_ConstantSidePacket_MatrixDataValue struct {
	MatrixDataValue *formats.MatrixData `protobuf:"bytes,12,opt,name=matrix_data_value,json=matrixDataValue,proto3,oneof" json:"matrix_data_value,omitempty"`
}

func (*ConstantSidePacketCalculatorOptions_ConstantSidePacket_IntValue) isConstantSidePacketCalculatorOptions_ConstantSidePacket_Value() {
}
func (*ConstantSidePacketCalculatorOptions_ConstantSidePacket_Uint64Value) isConstantSidePacketCalculatorOptions_ConstantSidePacket_Value() {
}
func (*ConstantSidePacketCalculatorOptions_ConstantSidePacket_Int64Value) isConstantSidePacketCalculatorOptions_ConstantSidePacket_Value() {
}
func (*ConstantSidePacketCalculatorOptions_ConstantSidePacket_FloatValue) isConstantSidePacketCalculatorOptions_ConstantSidePacket_Value() {
}
func (*ConstantSidePacketCalculatorOptions_ConstantSidePacket_DoubleValue) isConstantSidePacketCalculatorOptions_ConstantSidePacket_Value() {
}
func (*ConstantSidePacketCalculatorOptions_ConstantSidePacket_BoolValue) isConstantSidePacketCalculatorOptions_ConstantSidePacket_Value() {
}
func (*ConstantSidePacketCalculatorOptions_ConstantSidePacket_StringValue) isConstantSidePacketCalculatorOptions_ConstantSidePacket_Value() {
}
func (*ConstantSidePacketCalculatorOptions_ConstantSidePacket_ClassificationListValue) isConstantSidePacketCalculatorOptions_ConstantSidePacket_Value() {
}
func (*ConstantSidePacketCalculatorOptions_ConstantSidePacket_LandmarkListValue) isConstantSidePacketCalculatorOptions_ConstantSidePacket_Value() {
}
func (*ConstantSidePacketCalculatorOptions_ConstantSidePacket_TimeSeriesHeaderValue) isConstantSidePacketCalculatorOptions_ConstantSidePacket_Value() {
}
func (*ConstantSidePacketCalculatorOptions_ConstantSidePacket_MatrixDataValue) isConstantSidePacketCalculatorOptions_ConstantSidePacket_Value() {
}

func (m *ConstantSidePacketCalculatorOptions_ConstantSidePacket) GetValue() isConstantSidePacketCalculatorOptions_ConstantSidePacket_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *ConstantSidePacketCalculatorOptions_ConstantSidePacket) GetIntValue() int32 {
	if x, ok := m.GetValue().(*ConstantSidePacketCalculatorOptions_ConstantSidePacket_IntValue); ok {
		return x.IntValue
	}
	return 0
}

func (m *ConstantSidePacketCalculatorOptions_ConstantSidePacket) GetUint64Value() uint64 {
	if x, ok := m.GetValue().(*ConstantSidePacketCalculatorOptions_ConstantSidePacket_Uint64Value); ok {
		return x.Uint64Value
	}
	return 0
}

func (m *ConstantSidePacketCalculatorOptions_ConstantSidePacket) GetInt64Value() int64 {
	if x, ok := m.GetValue().(*ConstantSidePacketCalculatorOptions_ConstantSidePacket_Int64Value); ok {
		return x.Int64Value
	}
	return 0
}

func (m *ConstantSidePacketCalculatorOptions_ConstantSidePacket) GetFloatValue() float32 {
	if x, ok := m.GetValue().(*ConstantSidePacketCalculatorOptions_ConstantSidePacket_FloatValue); ok {
		return x.FloatValue
	}
	return 0
}

func (m *ConstantSidePacketCalculatorOptions_ConstantSidePacket) GetDoubleValue() float64 {
	if x, ok := m.GetValue().(*ConstantSidePacketCalculatorOptions_ConstantSidePacket_DoubleValue); ok {
		return x.DoubleValue
	}
	return 0
}

func (m *ConstantSidePacketCalculatorOptions_ConstantSidePacket) GetBoolValue() bool {
	if x, ok := m.GetValue().(*ConstantSidePacketCalculatorOptions_ConstantSidePacket_BoolValue); ok {
		return x.BoolValue
	}
	return false
}

func (m *ConstantSidePacketCalculatorOptions_ConstantSidePacket) GetStringValue() string {
	if x, ok := m.GetValue().(*ConstantSidePacketCalculatorOptions_ConstantSidePacket_StringValue); ok {
		return x.StringValue
	}
	return ""
}

func (m *ConstantSidePacketCalculatorOptions_ConstantSidePacket) GetClassificationListValue() *formats.ClassificationList {
	if x, ok := m.GetValue().(*ConstantSidePacketCalculatorOptions_ConstantSidePacket_ClassificationListValue); ok {
		return x.ClassificationListValue
	}
	return nil
}

func (m *ConstantSidePacketCalculatorOptions_ConstantSidePacket) GetLandmarkListValue() *formats.LandmarkList {
	if x, ok := m.GetValue().(*ConstantSidePacketCalculatorOptions_ConstantSidePacket_LandmarkListValue); ok {
		return x.LandmarkListValue
	}
	return nil
}

func (m *ConstantSidePacketCalculatorOptions_ConstantSidePacket) GetTimeSeriesHeaderValue() *formats.TimeSeriesHeader {
	if x, ok := m.GetValue().(*ConstantSidePacketCalculatorOptions_ConstantSidePacket_TimeSeriesHeaderValue); ok {
		return x.TimeSeriesHeaderValue
	}
	return nil
}

func (m *ConstantSidePacketCalculatorOptions_ConstantSidePacket) GetMatrixDataValue() *formats.MatrixData {
	if x, ok := m.GetValue().(*ConstantSidePacketCalculatorOptions_ConstantSidePacket_MatrixDataValue); ok {
		return x.MatrixDataValue
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*ConstantSidePacketCalculatorOptions_ConstantSidePacket) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*ConstantSidePacketCalculatorOptions_ConstantSidePacket_IntValue)(nil),
		(*ConstantSidePacketCalculatorOptions_ConstantSidePacket_Uint64Value)(nil),
		(*ConstantSidePacketCalculatorOptions_ConstantSidePacket_Int64Value)(nil),
		(*ConstantSidePacketCalculatorOptions_ConstantSidePacket_FloatValue)(nil),
		(*ConstantSidePacketCalculatorOptions_ConstantSidePacket_DoubleValue)(nil),
		(*ConstantSidePacketCalculatorOptions_ConstantSidePacket_BoolValue)(nil),
		(*ConstantSidePacketCalculatorOptions_ConstantSidePacket_StringValue)(nil),
		(*ConstantSidePacketCalculatorOptions_ConstantSidePacket_ClassificationListValue)(nil),
		(*ConstantSidePacketCalculatorOptions_ConstantSidePacket_LandmarkListValue)(nil),
		(*ConstantSidePacketCalculatorOptions_ConstantSidePacket_TimeSeriesHeaderValue)(nil),
		(*ConstantSidePacketCalculatorOptions_ConstantSidePacket_MatrixDataValue)(nil),
	}
}

func init() {
	proto.RegisterType((*ConstantSidePacketCalculatorOptions)(nil), "mediapipe.ConstantSidePacketCalculatorOptions")
	proto.RegisterType((*ConstantSidePacketCalculatorOptions_ConstantSidePacket)(nil), "mediapipe.ConstantSidePacketCalculatorOptions.ConstantSidePacket")
}

func init() {
	proto.RegisterFile("mediapipe/calculators/core/constant_side_packet_calculator.proto", fileDescriptor_a76c5d043d836771)
}

var fileDescriptor_a76c5d043d836771 = []byte{
	// 562 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x94, 0x41, 0x6f, 0xd3, 0x3c,
	0x18, 0xc7, 0xed, 0xad, 0xed, 0x56, 0x77, 0xd2, 0xab, 0xf5, 0xd5, 0xb4, 0x52, 0x34, 0x13, 0x18,
	0x87, 0x08, 0x89, 0x06, 0x8d, 0x69, 0x67, 0x58, 0x39, 0x04, 0x69, 0x08, 0x94, 0xa1, 0x49, 0xc0,
	0x21, 0x72, 0x13, 0xb7, 0xb3, 0xea, 0xc4, 0x55, 0xec, 0x02, 0x47, 0x3e, 0x02, 0x1f, 0x83, 0x8f,
	0xc2, 0xb1, 0x37, 0x26, 0x4e, 0x34, 0xbd, 0x70, 0xdc, 0x47, 0x40, 0x71, 0xdc, 0x34, 0x5d, 0x47,
	0xc5, 0x31, 0xff, 0xfe, 0x9e, 0xdf, 0x63, 0x3f, 0x7a, 0x5c, 0xf4, 0x2c, 0xa2, 0x21, 0x23, 0x23,
	0x36, 0xa2, 0x4e, 0x40, 0x78, 0x30, 0xe6, 0x44, 0x89, 0x44, 0x3a, 0x81, 0x48, 0xa8, 0x13, 0x88,
	0x58, 0x2a, 0x12, 0x2b, 0x5f, 0xb2, 0x90, 0xfa, 0x23, 0x12, 0x0c, 0xa9, 0xf2, 0x17, 0x54, 0x67,
	0x94, 0x08, 0x25, 0x9a, 0xf5, 0xc2, 0xd0, 0x7e, 0xb8, 0x90, 0xf5, 0x13, 0x12, 0xd1, 0x4f, 0x22,
	0x19, 0x3a, 0x37, 0x0b, 0xda, 0x4f, 0x6e, 0xa3, 0xfa, 0x22, 0x89, 0x88, 0x92, 0x4e, 0xc0, 0x89,
	0x94, 0xac, 0xcf, 0x02, 0xa2, 0x98, 0x88, 0x4d, 0xc5, 0xa3, 0x75, 0x15, 0x9c, 0xc4, 0x61, 0x44,
	0x92, 0xa1, 0x61, 0x1f, 0xaf, 0x63, 0x23, 0xa2, 0x12, 0xf6, 0xd9, 0x0f, 0x89, 0x22, 0x06, 0x3f,
	0x5e, 0x87, 0x2b, 0x16, 0x51, 0x5f, 0xd2, 0x84, 0x51, 0xe9, 0x5f, 0x52, 0x12, 0x52, 0x73, 0x85,
	0x07, 0x3f, 0xab, 0xe8, 0xb0, 0x6b, 0xa6, 0x73, 0xce, 0x42, 0xfa, 0x46, 0xcf, 0xa6, 0x5b, 0xdc,
	0xf4, 0xf5, 0x28, 0x3b, 0xbd, 0x6c, 0xbe, 0x43, 0xb5, 0x7c, 0x6c, 0x2d, 0x68, 0x6d, 0xda, 0x8d,
	0xa3, 0xe7, 0x9d, 0xa2, 0x5d, 0xe7, 0x1f, 0xea, 0x6f, 0x61, 0x3c, 0x23, 0x6c, 0xff, 0xa8, 0xa0,
	0xe6, 0xea, 0xcf, 0xcd, 0x03, 0x54, 0x67, 0xb1, 0xf2, 0x3f, 0x12, 0x3e, 0xa6, 0x2d, 0x68, 0x41,
	0xbb, 0xea, 0x02, 0x6f, 0x9b, 0xc5, 0xea, 0x22, 0x4b, 0x9a, 0x87, 0x68, 0x67, 0xcc, 0x62, 0x75,
	0x72, 0x6c, 0x88, 0xaa, 0x05, 0xed, 0x8a, 0x0b, 0xbc, 0x46, 0x9e, 0xe6, 0xd0, 0x7d, 0xd4, 0x28,
	0x33, 0x0d, 0x0b, 0xda, 0x9b, 0x2e, 0xf0, 0xd0, 0x32, 0xd2, 0xe7, 0x82, 0xcc, 0x1b, 0x6d, 0x58,
	0xd0, 0xde, 0xc8, 0x10, 0x1d, 0x16, 0xad, 0x42, 0x31, 0xee, 0x71, 0x6a, 0x98, 0xba, 0x05, 0x6d,
	0x98, 0xb5, 0xca, 0xd3, 0x1c, 0xba, 0x87, 0x50, 0x4f, 0x08, 0x6e, 0x90, 0x4d, 0x0b, 0xda, 0xdb,
	0x2e, 0xf0, 0xea, 0x59, 0x56, 0x58, 0xa4, 0x4a, 0x58, 0x3c, 0x30, 0x48, 0xc5, 0x82, 0x76, 0x3d,
	0xb3, 0xe4, 0x69, 0x0e, 0x7d, 0x40, 0x77, 0x96, 0xf7, 0xc6, 0xe7, 0x4c, 0xce, 0xcf, 0x56, 0xb3,
	0xa0, 0xdd, 0x38, 0x3a, 0x28, 0x4f, 0x7e, 0x89, 0x3d, 0x63, 0x52, 0xb9, 0xc0, 0xdb, 0x0f, 0x56,
	0xd2, 0x5c, 0xfe, 0x12, 0xfd, 0x3f, 0x5f, 0xb1, 0xb2, 0x76, 0x4b, 0x6b, 0xf7, 0x4b, 0xda, 0x33,
	0x43, 0x19, 0xe1, 0x2e, 0x2f, 0x7d, 0xe7, 0xaa, 0x0b, 0xd4, 0x5a, 0x5d, 0x29, 0xe3, 0x43, 0xda,
	0x77, 0xb7, 0xe4, 0x7b, 0xcb, 0x22, 0x7a, 0xae, 0x49, 0x57, 0x83, 0x2e, 0xf0, 0xf6, 0xd4, 0x8d,
	0x2c, 0xf7, 0x76, 0xd1, 0x6e, 0x69, 0xb3, 0x8d, 0x70, 0x47, 0x0b, 0xf7, 0x4a, 0xc2, 0x57, 0x9a,
	0x79, 0x41, 0x14, 0x71, 0x81, 0xf7, 0x5f, 0x54, 0x7c, 0x69, 0xc9, 0xe9, 0x16, 0xaa, 0xea, 0xc2,
	0x53, 0x3e, 0x99, 0x62, 0x70, 0x35, 0xc5, 0xe0, 0x7a, 0x8a, 0xe1, 0x97, 0x14, 0xc3, 0x6f, 0x29,
	0x86, 0xdf, 0x53, 0x0c, 0x27, 0x29, 0x86, 0xbf, 0x52, 0x0c, 0x7f, 0xa7, 0x18, 0x5c, 0xa7, 0x18,
	0x7e, 0x9d, 0x61, 0x30, 0x99, 0x61, 0x70, 0x35, 0xc3, 0xe0, 0xfd, 0xc9, 0x80, 0xa9, 0xcb, 0x71,
	0xaf, 0x13, 0x88, 0xc8, 0x19, 0x08, 0x31, 0xe0, 0xd4, 0x59, 0x3c, 0xad, 0xbf, 0xff, 0xc9, 0xf4,
	0x6a, 0xfa, 0x45, 0x3d, 0xfd, 0x13, 0x00, 0x00, 0xff, 0xff, 0xcd, 0x1f, 0xb0, 0xbc, 0x89, 0x04,
	0x00, 0x00,
}

func (this *ConstantSidePacketCalculatorOptions) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ConstantSidePacketCalculatorOptions)
	if !ok {
		that2, ok := that.(ConstantSidePacketCalculatorOptions)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if len(this.Packet) != len(that1.Packet) {
		return false
	}
	for i := range this.Packet {
		if !this.Packet[i].Equal(that1.Packet[i]) {
			return false
		}
	}
	return true
}
func (this *ConstantSidePacketCalculatorOptions_ConstantSidePacket) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ConstantSidePacketCalculatorOptions_ConstantSidePacket)
	if !ok {
		that2, ok := that.(ConstantSidePacketCalculatorOptions_ConstantSidePacket)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if that1.Value == nil {
		if this.Value != nil {
			return false
		}
	} else if this.Value == nil {
		return false
	} else if !this.Value.Equal(that1.Value) {
		return false
	}
	return true
}
func (this *ConstantSidePacketCalculatorOptions_ConstantSidePacket_IntValue) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ConstantSidePacketCalculatorOptions_ConstantSidePacket_IntValue)
	if !ok {
		that2, ok := that.(ConstantSidePacketCalculatorOptions_ConstantSidePacket_IntValue)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.IntValue != that1.IntValue {
		return false
	}
	return true
}
func (this *ConstantSidePacketCalculatorOptions_ConstantSidePacket_Uint64Value) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ConstantSidePacketCalculatorOptions_ConstantSidePacket_Uint64Value)
	if !ok {
		that2, ok := that.(ConstantSidePacketCalculatorOptions_ConstantSidePacket_Uint64Value)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Uint64Value != that1.Uint64Value {
		return false
	}
	return true
}
func (this *ConstantSidePacketCalculatorOptions_ConstantSidePacket_Int64Value) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ConstantSidePacketCalculatorOptions_ConstantSidePacket_Int64Value)
	if !ok {
		that2, ok := that.(ConstantSidePacketCalculatorOptions_ConstantSidePacket_Int64Value)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Int64Value != that1.Int64Value {
		return false
	}
	return true
}
func (this *ConstantSidePacketCalculatorOptions_ConstantSidePacket_FloatValue) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ConstantSidePacketCalculatorOptions_ConstantSidePacket_FloatValue)
	if !ok {
		that2, ok := that.(ConstantSidePacketCalculatorOptions_ConstantSidePacket_FloatValue)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.FloatValue != that1.FloatValue {
		return false
	}
	return true
}
func (this *ConstantSidePacketCalculatorOptions_ConstantSidePacket_DoubleValue) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ConstantSidePacketCalculatorOptions_ConstantSidePacket_DoubleValue)
	if !ok {
		that2, ok := that.(ConstantSidePacketCalculatorOptions_ConstantSidePacket_DoubleValue)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.DoubleValue != that1.DoubleValue {
		return false
	}
	return true
}
func (this *ConstantSidePacketCalculatorOptions_ConstantSidePacket_BoolValue) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ConstantSidePacketCalculatorOptions_ConstantSidePacket_BoolValue)
	if !ok {
		that2, ok := that.(ConstantSidePacketCalculatorOptions_ConstantSidePacket_BoolValue)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.BoolValue != that1.BoolValue {
		return false
	}
	return true
}
func (this *ConstantSidePacketCalculatorOptions_ConstantSidePacket_StringValue) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ConstantSidePacketCalculatorOptions_ConstantSidePacket_StringValue)
	if !ok {
		that2, ok := that.(ConstantSidePacketCalculatorOptions_ConstantSidePacket_StringValue)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.StringValue != that1.StringValue {
		return false
	}
	return true
}
func (this *ConstantSidePacketCalculatorOptions_ConstantSidePacket_ClassificationListValue) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ConstantSidePacketCalculatorOptions_ConstantSidePacket_ClassificationListValue)
	if !ok {
		that2, ok := that.(ConstantSidePacketCalculatorOptions_ConstantSidePacket_ClassificationListValue)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.ClassificationListValue.Equal(that1.ClassificationListValue) {
		return false
	}
	return true
}
func (this *ConstantSidePacketCalculatorOptions_ConstantSidePacket_LandmarkListValue) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ConstantSidePacketCalculatorOptions_ConstantSidePacket_LandmarkListValue)
	if !ok {
		that2, ok := that.(ConstantSidePacketCalculatorOptions_ConstantSidePacket_LandmarkListValue)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.LandmarkListValue.Equal(that1.LandmarkListValue) {
		return false
	}
	return true
}
func (this *ConstantSidePacketCalculatorOptions_ConstantSidePacket_TimeSeriesHeaderValue) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ConstantSidePacketCalculatorOptions_ConstantSidePacket_TimeSeriesHeaderValue)
	if !ok {
		that2, ok := that.(ConstantSidePacketCalculatorOptions_ConstantSidePacket_TimeSeriesHeaderValue)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.TimeSeriesHeaderValue.Equal(that1.TimeSeriesHeaderValue) {
		return false
	}
	return true
}
func (this *ConstantSidePacketCalculatorOptions_ConstantSidePacket_MatrixDataValue) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ConstantSidePacketCalculatorOptions_ConstantSidePacket_MatrixDataValue)
	if !ok {
		that2, ok := that.(ConstantSidePacketCalculatorOptions_ConstantSidePacket_MatrixDataValue)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.MatrixDataValue.Equal(that1.MatrixDataValue) {
		return false
	}
	return true
}
func (this *ConstantSidePacketCalculatorOptions) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 5)
	s = append(s, "&core.ConstantSidePacketCalculatorOptions{")
	if this.Packet != nil {
		s = append(s, "Packet: "+fmt.Sprintf("%#v", this.Packet)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *ConstantSidePacketCalculatorOptions_ConstantSidePacket) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 15)
	s = append(s, "&core.ConstantSidePacketCalculatorOptions_ConstantSidePacket{")
	if this.Value != nil {
		s = append(s, "Value: "+fmt.Sprintf("%#v", this.Value)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *ConstantSidePacketCalculatorOptions_ConstantSidePacket_IntValue) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&core.ConstantSidePacketCalculatorOptions_ConstantSidePacket_IntValue{` +
		`IntValue:` + fmt.Sprintf("%#v", this.IntValue) + `}`}, ", ")
	return s
}
func (this *ConstantSidePacketCalculatorOptions_ConstantSidePacket_Uint64Value) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&core.ConstantSidePacketCalculatorOptions_ConstantSidePacket_Uint64Value{` +
		`Uint64Value:` + fmt.Sprintf("%#v", this.Uint64Value) + `}`}, ", ")
	return s
}
func (this *ConstantSidePacketCalculatorOptions_ConstantSidePacket_Int64Value) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&core.ConstantSidePacketCalculatorOptions_ConstantSidePacket_Int64Value{` +
		`Int64Value:` + fmt.Sprintf("%#v", this.Int64Value) + `}`}, ", ")
	return s
}
func (this *ConstantSidePacketCalculatorOptions_ConstantSidePacket_FloatValue) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&core.ConstantSidePacketCalculatorOptions_ConstantSidePacket_FloatValue{` +
		`FloatValue:` + fmt.Sprintf("%#v", this.FloatValue) + `}`}, ", ")
	return s
}
func (this *ConstantSidePacketCalculatorOptions_ConstantSidePacket_DoubleValue) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&core.ConstantSidePacketCalculatorOptions_ConstantSidePacket_DoubleValue{` +
		`DoubleValue:` + fmt.Sprintf("%#v", this.DoubleValue) + `}`}, ", ")
	return s
}
func (this *ConstantSidePacketCalculatorOptions_ConstantSidePacket_BoolValue) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&core.ConstantSidePacketCalculatorOptions_ConstantSidePacket_BoolValue{` +
		`BoolValue:` + fmt.Sprintf("%#v", this.BoolValue) + `}`}, ", ")
	return s
}
func (this *ConstantSidePacketCalculatorOptions_ConstantSidePacket_StringValue) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&core.ConstantSidePacketCalculatorOptions_ConstantSidePacket_StringValue{` +
		`StringValue:` + fmt.Sprintf("%#v", this.StringValue) + `}`}, ", ")
	return s
}
func (this *ConstantSidePacketCalculatorOptions_ConstantSidePacket_ClassificationListValue) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&core.ConstantSidePacketCalculatorOptions_ConstantSidePacket_ClassificationListValue{` +
		`ClassificationListValue:` + fmt.Sprintf("%#v", this.ClassificationListValue) + `}`}, ", ")
	return s
}
func (this *ConstantSidePacketCalculatorOptions_ConstantSidePacket_LandmarkListValue) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&core.ConstantSidePacketCalculatorOptions_ConstantSidePacket_LandmarkListValue{` +
		`LandmarkListValue:` + fmt.Sprintf("%#v", this.LandmarkListValue) + `}`}, ", ")
	return s
}
func (this *ConstantSidePacketCalculatorOptions_ConstantSidePacket_TimeSeriesHeaderValue) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&core.ConstantSidePacketCalculatorOptions_ConstantSidePacket_TimeSeriesHeaderValue{` +
		`TimeSeriesHeaderValue:` + fmt.Sprintf("%#v", this.TimeSeriesHeaderValue) + `}`}, ", ")
	return s
}
func (this *ConstantSidePacketCalculatorOptions_ConstantSidePacket_MatrixDataValue) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&core.ConstantSidePacketCalculatorOptions_ConstantSidePacket_MatrixDataValue{` +
		`MatrixDataValue:` + fmt.Sprintf("%#v", this.MatrixDataValue) + `}`}, ", ")
	return s
}
func valueToGoStringConstantSidePacketCalculator(v interface{}, typ string) string {
	rv := reflect.ValueOf(v)
	if rv.IsNil() {
		return "nil"
	}
	pv := reflect.Indirect(rv).Interface()
	return fmt.Sprintf("func(v %v) *%v { return &v } ( %#v )", typ, typ, pv)
}
func (m *ConstantSidePacketCalculatorOptions) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ConstantSidePacketCalculatorOptions) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ConstantSidePacketCalculatorOptions) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Packet) > 0 {
		for iNdEx := len(m.Packet) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Packet[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintConstantSidePacketCalculator(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *ConstantSidePacketCalculatorOptions_ConstantSidePacket) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ConstantSidePacketCalculatorOptions_ConstantSidePacket) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ConstantSidePacketCalculatorOptions_ConstantSidePacket) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Value != nil {
		{
			size := m.Value.Size()
			i -= size
			if _, err := m.Value.MarshalTo(dAtA[i:]); err != nil {
				return 0, err
			}
		}
	}
	return len(dAtA) - i, nil
}

func (m *ConstantSidePacketCalculatorOptions_ConstantSidePacket_IntValue) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ConstantSidePacketCalculatorOptions_ConstantSidePacket_IntValue) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i = encodeVarintConstantSidePacketCalculator(dAtA, i, uint64(m.IntValue))
	i--
	dAtA[i] = 0x8
	return len(dAtA) - i, nil
}
func (m *ConstantSidePacketCalculatorOptions_ConstantSidePacket_FloatValue) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ConstantSidePacketCalculatorOptions_ConstantSidePacket_FloatValue) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i -= 4
	encoding_binary.LittleEndian.PutUint32(dAtA[i:], uint32(math.Float32bits(float32(m.FloatValue))))
	i--
	dAtA[i] = 0x15
	return len(dAtA) - i, nil
}
func (m *ConstantSidePacketCalculatorOptions_ConstantSidePacket_BoolValue) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ConstantSidePacketCalculatorOptions_ConstantSidePacket_BoolValue) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.BoolValue {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x18
	return len(dAtA) - i, nil
}
func (m *ConstantSidePacketCalculatorOptions_ConstantSidePacket_StringValue) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ConstantSidePacketCalculatorOptions_ConstantSidePacket_StringValue) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i -= len(m.StringValue)
	copy(dAtA[i:], m.StringValue)
	i = encodeVarintConstantSidePacketCalculator(dAtA, i, uint64(len(m.StringValue)))
	i--
	dAtA[i] = 0x22
	return len(dAtA) - i, nil
}
func (m *ConstantSidePacketCalculatorOptions_ConstantSidePacket_Uint64Value) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ConstantSidePacketCalculatorOptions_ConstantSidePacket_Uint64Value) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i = encodeVarintConstantSidePacketCalculator(dAtA, i, uint64(m.Uint64Value))
	i--
	dAtA[i] = 0x28
	return len(dAtA) - i, nil
}
func (m *ConstantSidePacketCalculatorOptions_ConstantSidePacket_ClassificationListValue) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ConstantSidePacketCalculatorOptions_ConstantSidePacket_ClassificationListValue) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.ClassificationListValue != nil {
		{
			size, err := m.ClassificationListValue.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintConstantSidePacketCalculator(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x32
	}
	return len(dAtA) - i, nil
}
func (m *ConstantSidePacketCalculatorOptions_ConstantSidePacket_LandmarkListValue) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ConstantSidePacketCalculatorOptions_ConstantSidePacket_LandmarkListValue) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.LandmarkListValue != nil {
		{
			size, err := m.LandmarkListValue.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintConstantSidePacketCalculator(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x3a
	}
	return len(dAtA) - i, nil
}
func (m *ConstantSidePacketCalculatorOptions_ConstantSidePacket_DoubleValue) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ConstantSidePacketCalculatorOptions_ConstantSidePacket_DoubleValue) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i -= 8
	encoding_binary.LittleEndian.PutUint64(dAtA[i:], uint64(math.Float64bits(float64(m.DoubleValue))))
	i--
	dAtA[i] = 0x49
	return len(dAtA) - i, nil
}
func (m *ConstantSidePacketCalculatorOptions_ConstantSidePacket_TimeSeriesHeaderValue) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ConstantSidePacketCalculatorOptions_ConstantSidePacket_TimeSeriesHeaderValue) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.TimeSeriesHeaderValue != nil {
		{
			size, err := m.TimeSeriesHeaderValue.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintConstantSidePacketCalculator(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x52
	}
	return len(dAtA) - i, nil
}
func (m *ConstantSidePacketCalculatorOptions_ConstantSidePacket_Int64Value) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ConstantSidePacketCalculatorOptions_ConstantSidePacket_Int64Value) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i = encodeVarintConstantSidePacketCalculator(dAtA, i, uint64(m.Int64Value))
	i--
	dAtA[i] = 0x58
	return len(dAtA) - i, nil
}
func (m *ConstantSidePacketCalculatorOptions_ConstantSidePacket_MatrixDataValue) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ConstantSidePacketCalculatorOptions_ConstantSidePacket_MatrixDataValue) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.MatrixDataValue != nil {
		{
			size, err := m.MatrixDataValue.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintConstantSidePacketCalculator(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x62
	}
	return len(dAtA) - i, nil
}
func encodeVarintConstantSidePacketCalculator(dAtA []byte, offset int, v uint64) int {
	offset -= sovConstantSidePacketCalculator(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *ConstantSidePacketCalculatorOptions) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Packet) > 0 {
		for _, e := range m.Packet {
			l = e.Size()
			n += 1 + l + sovConstantSidePacketCalculator(uint64(l))
		}
	}
	return n
}

func (m *ConstantSidePacketCalculatorOptions_ConstantSidePacket) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Value != nil {
		n += m.Value.Size()
	}
	return n
}

func (m *ConstantSidePacketCalculatorOptions_ConstantSidePacket_IntValue) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 1 + sovConstantSidePacketCalculator(uint64(m.IntValue))
	return n
}
func (m *ConstantSidePacketCalculatorOptions_ConstantSidePacket_FloatValue) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 5
	return n
}
func (m *ConstantSidePacketCalculatorOptions_ConstantSidePacket_BoolValue) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 2
	return n
}
func (m *ConstantSidePacketCalculatorOptions_ConstantSidePacket_StringValue) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.StringValue)
	n += 1 + l + sovConstantSidePacketCalculator(uint64(l))
	return n
}
func (m *ConstantSidePacketCalculatorOptions_ConstantSidePacket_Uint64Value) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 1 + sovConstantSidePacketCalculator(uint64(m.Uint64Value))
	return n
}
func (m *ConstantSidePacketCalculatorOptions_ConstantSidePacket_ClassificationListValue) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ClassificationListValue != nil {
		l = m.ClassificationListValue.Size()
		n += 1 + l + sovConstantSidePacketCalculator(uint64(l))
	}
	return n
}
func (m *ConstantSidePacketCalculatorOptions_ConstantSidePacket_LandmarkListValue) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.LandmarkListValue != nil {
		l = m.LandmarkListValue.Size()
		n += 1 + l + sovConstantSidePacketCalculator(uint64(l))
	}
	return n
}
func (m *ConstantSidePacketCalculatorOptions_ConstantSidePacket_DoubleValue) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 9
	return n
}
func (m *ConstantSidePacketCalculatorOptions_ConstantSidePacket_TimeSeriesHeaderValue) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.TimeSeriesHeaderValue != nil {
		l = m.TimeSeriesHeaderValue.Size()
		n += 1 + l + sovConstantSidePacketCalculator(uint64(l))
	}
	return n
}
func (m *ConstantSidePacketCalculatorOptions_ConstantSidePacket_Int64Value) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 1 + sovConstantSidePacketCalculator(uint64(m.Int64Value))
	return n
}
func (m *ConstantSidePacketCalculatorOptions_ConstantSidePacket_MatrixDataValue) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.MatrixDataValue != nil {
		l = m.MatrixDataValue.Size()
		n += 1 + l + sovConstantSidePacketCalculator(uint64(l))
	}
	return n
}

func sovConstantSidePacketCalculator(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozConstantSidePacketCalculator(x uint64) (n int) {
	return sovConstantSidePacketCalculator(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (this *ConstantSidePacketCalculatorOptions) String() string {
	if this == nil {
		return "nil"
	}
	repeatedStringForPacket := "[]*ConstantSidePacketCalculatorOptions_ConstantSidePacket{"
	for _, f := range this.Packet {
		repeatedStringForPacket += strings.Replace(fmt.Sprintf("%v", f), "ConstantSidePacketCalculatorOptions_ConstantSidePacket", "ConstantSidePacketCalculatorOptions_ConstantSidePacket", 1) + ","
	}
	repeatedStringForPacket += "}"
	s := strings.Join([]string{`&ConstantSidePacketCalculatorOptions{`,
		`Packet:` + repeatedStringForPacket + `,`,
		`}`,
	}, "")
	return s
}
func (this *ConstantSidePacketCalculatorOptions_ConstantSidePacket) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ConstantSidePacketCalculatorOptions_ConstantSidePacket{`,
		`Value:` + fmt.Sprintf("%v", this.Value) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ConstantSidePacketCalculatorOptions_ConstantSidePacket_IntValue) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ConstantSidePacketCalculatorOptions_ConstantSidePacket_IntValue{`,
		`IntValue:` + fmt.Sprintf("%v", this.IntValue) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ConstantSidePacketCalculatorOptions_ConstantSidePacket_FloatValue) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ConstantSidePacketCalculatorOptions_ConstantSidePacket_FloatValue{`,
		`FloatValue:` + fmt.Sprintf("%v", this.FloatValue) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ConstantSidePacketCalculatorOptions_ConstantSidePacket_BoolValue) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ConstantSidePacketCalculatorOptions_ConstantSidePacket_BoolValue{`,
		`BoolValue:` + fmt.Sprintf("%v", this.BoolValue) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ConstantSidePacketCalculatorOptions_ConstantSidePacket_StringValue) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ConstantSidePacketCalculatorOptions_ConstantSidePacket_StringValue{`,
		`StringValue:` + fmt.Sprintf("%v", this.StringValue) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ConstantSidePacketCalculatorOptions_ConstantSidePacket_Uint64Value) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ConstantSidePacketCalculatorOptions_ConstantSidePacket_Uint64Value{`,
		`Uint64Value:` + fmt.Sprintf("%v", this.Uint64Value) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ConstantSidePacketCalculatorOptions_ConstantSidePacket_ClassificationListValue) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ConstantSidePacketCalculatorOptions_ConstantSidePacket_ClassificationListValue{`,
		`ClassificationListValue:` + strings.Replace(fmt.Sprintf("%v", this.ClassificationListValue), "ClassificationList", "formats.ClassificationList", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ConstantSidePacketCalculatorOptions_ConstantSidePacket_LandmarkListValue) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ConstantSidePacketCalculatorOptions_ConstantSidePacket_LandmarkListValue{`,
		`LandmarkListValue:` + strings.Replace(fmt.Sprintf("%v", this.LandmarkListValue), "LandmarkList", "formats.LandmarkList", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ConstantSidePacketCalculatorOptions_ConstantSidePacket_DoubleValue) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ConstantSidePacketCalculatorOptions_ConstantSidePacket_DoubleValue{`,
		`DoubleValue:` + fmt.Sprintf("%v", this.DoubleValue) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ConstantSidePacketCalculatorOptions_ConstantSidePacket_TimeSeriesHeaderValue) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ConstantSidePacketCalculatorOptions_ConstantSidePacket_TimeSeriesHeaderValue{`,
		`TimeSeriesHeaderValue:` + strings.Replace(fmt.Sprintf("%v", this.TimeSeriesHeaderValue), "TimeSeriesHeader", "formats.TimeSeriesHeader", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ConstantSidePacketCalculatorOptions_ConstantSidePacket_Int64Value) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ConstantSidePacketCalculatorOptions_ConstantSidePacket_Int64Value{`,
		`Int64Value:` + fmt.Sprintf("%v", this.Int64Value) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ConstantSidePacketCalculatorOptions_ConstantSidePacket_MatrixDataValue) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ConstantSidePacketCalculatorOptions_ConstantSidePacket_MatrixDataValue{`,
		`MatrixDataValue:` + strings.Replace(fmt.Sprintf("%v", this.MatrixDataValue), "MatrixData", "formats.MatrixData", 1) + `,`,
		`}`,
	}, "")
	return s
}
func valueToStringConstantSidePacketCalculator(v interface{}) string {
	rv := reflect.ValueOf(v)
	if rv.IsNil() {
		return "nil"
	}
	pv := reflect.Indirect(rv).Interface()
	return fmt.Sprintf("*%v", pv)
}
func (m *ConstantSidePacketCalculatorOptions) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowConstantSidePacketCalculator
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ConstantSidePacketCalculatorOptions: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ConstantSidePacketCalculatorOptions: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Packet", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConstantSidePacketCalculator
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthConstantSidePacketCalculator
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthConstantSidePacketCalculator
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Packet = append(m.Packet, &ConstantSidePacketCalculatorOptions_ConstantSidePacket{})
			if err := m.Packet[len(m.Packet)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipConstantSidePacketCalculator(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthConstantSidePacketCalculator
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ConstantSidePacketCalculatorOptions_ConstantSidePacket) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowConstantSidePacketCalculator
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ConstantSidePacket: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ConstantSidePacket: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field IntValue", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConstantSidePacketCalculator
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Value = &ConstantSidePacketCalculatorOptions_ConstantSidePacket_IntValue{v}
		case 2:
			if wireType != 5 {
				return fmt.Errorf("proto: wrong wireType = %d for field FloatValue", wireType)
			}
			var v uint32
			if (iNdEx + 4) > l {
				return io.ErrUnexpectedEOF
			}
			v = uint32(encoding_binary.LittleEndian.Uint32(dAtA[iNdEx:]))
			iNdEx += 4
			m.Value = &ConstantSidePacketCalculatorOptions_ConstantSidePacket_FloatValue{float32(math.Float32frombits(v))}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field BoolValue", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConstantSidePacketCalculator
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Value = &ConstantSidePacketCalculatorOptions_ConstantSidePacket_BoolValue{b}
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field StringValue", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConstantSidePacketCalculator
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthConstantSidePacketCalculator
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthConstantSidePacketCalculator
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Value = &ConstantSidePacketCalculatorOptions_ConstantSidePacket_StringValue{string(dAtA[iNdEx:postIndex])}
			iNdEx = postIndex
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Uint64Value", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConstantSidePacketCalculator
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Value = &ConstantSidePacketCalculatorOptions_ConstantSidePacket_Uint64Value{v}
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassificationListValue", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConstantSidePacketCalculator
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthConstantSidePacketCalculator
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthConstantSidePacketCalculator
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &formats.ClassificationList{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Value = &ConstantSidePacketCalculatorOptions_ConstantSidePacket_ClassificationListValue{v}
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LandmarkListValue", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConstantSidePacketCalculator
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthConstantSidePacketCalculator
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthConstantSidePacketCalculator
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &formats.LandmarkList{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Value = &ConstantSidePacketCalculatorOptions_ConstantSidePacket_LandmarkListValue{v}
			iNdEx = postIndex
		case 9:
			if wireType != 1 {
				return fmt.Errorf("proto: wrong wireType = %d for field DoubleValue", wireType)
			}
			var v uint64
			if (iNdEx + 8) > l {
				return io.ErrUnexpectedEOF
			}
			v = uint64(encoding_binary.LittleEndian.Uint64(dAtA[iNdEx:]))
			iNdEx += 8
			m.Value = &ConstantSidePacketCalculatorOptions_ConstantSidePacket_DoubleValue{float64(math.Float64frombits(v))}
		case 10:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TimeSeriesHeaderValue", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConstantSidePacketCalculator
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthConstantSidePacketCalculator
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthConstantSidePacketCalculator
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &formats.TimeSeriesHeader{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Value = &ConstantSidePacketCalculatorOptions_ConstantSidePacket_TimeSeriesHeaderValue{v}
			iNdEx = postIndex
		case 11:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Int64Value", wireType)
			}
			var v int64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConstantSidePacketCalculator
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Value = &ConstantSidePacketCalculatorOptions_ConstantSidePacket_Int64Value{v}
		case 12:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MatrixDataValue", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConstantSidePacketCalculator
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthConstantSidePacketCalculator
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthConstantSidePacketCalculator
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &formats.MatrixData{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Value = &ConstantSidePacketCalculatorOptions_ConstantSidePacket_MatrixDataValue{v}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipConstantSidePacketCalculator(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthConstantSidePacketCalculator
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipConstantSidePacketCalculator(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowConstantSidePacketCalculator
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowConstantSidePacketCalculator
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowConstantSidePacketCalculator
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthConstantSidePacketCalculator
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupConstantSidePacketCalculator
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthConstantSidePacketCalculator
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthConstantSidePacketCalculator        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowConstantSidePacketCalculator          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupConstantSidePacketCalculator = fmt.Errorf("proto: unexpected end of group")
)
