# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: mediapipe/calculators/tensor/tensors_to_detections_calculator.proto
"""Generated protocol buffer code."""
from google.protobuf.internal import builder as _builder
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from mediapipe.framework import calculator_pb2 as mediapipe_dot_framework_dot_calculator__pb2
try:
  mediapipe_dot_framework_dot_calculator__options__pb2 = mediapipe_dot_framework_dot_calculator__pb2.mediapipe_dot_framework_dot_calculator__options__pb2
except AttributeError:
  mediapipe_dot_framework_dot_calculator__options__pb2 = mediapipe_dot_framework_dot_calculator__pb2.mediapipe.framework.calculator_options_pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\nCmediapipe/calculators/tensor/tensors_to_detections_calculator.proto\x12\tmediapipe\x1a$mediapipe/framework/calculator.proto\"\xaa\x0e\n$TensorsToDetectionsCalculatorOptions\x12\x1f\n\x0bnum_classes\x18\x01 \x01(\x05R\nnumClasses\x12\x1b\n\tnum_boxes\x18\x02 \x01(\x05R\x08numBoxes\x12\x1d\n\nnum_coords\x18\x03 \x01(\x05R\tnumCoords\x12\x32\n\x15keypoint_coord_offset\x18\t \x01(\x05R\x13keypointCoordOffset\x12&\n\rnum_keypoints\x18\n \x01(\x05:\x01\x30R\x0cnumKeypoints\x12\x38\n\x17num_values_per_keypoint\x18\x0b \x01(\x05:\x01\x32R\x14numValuesPerKeypoint\x12+\n\x10\x62ox_coord_offset\x18\x0c \x01(\x05:\x01\x30R\x0e\x62oxCoordOffset\x12\x1a\n\x07x_scale\x18\x04 \x01(\x02:\x01\x30R\x06xScale\x12\x1a\n\x07y_scale\x18\x05 \x01(\x02:\x01\x30R\x06yScale\x12\x1a\n\x07w_scale\x18\x06 \x01(\x02:\x01\x30R\x06wScale\x12\x1a\n\x07h_scale\x18\x07 \x01(\x02:\x01\x30R\x06hScale\x12G\n\x1d\x61pply_exponential_on_box_size\x18\r \x01(\x08:\x05\x66\x61lseR\x19\x61pplyExponentialOnBoxSize\x12\x37\n\x14reverse_output_order\x18\x0e \x01(\x08:\x05\x66\x61lseR\x12reverseOutputOrder\x12%\n\x0eignore_classes\x18\x08 \x03(\x05R\rignoreClasses\x12\'\n\rallow_classes\x18\x15 \x03(\x05\x42\x02\x10\x01R\x0c\x61llowClasses\x12*\n\rsigmoid_score\x18\x0f \x01(\x08:\x05\x66\x61lseR\x0csigmoidScore\x12\x32\n\x15score_clipping_thresh\x18\x10 \x01(\x02R\x13scoreClippingThresh\x12.\n\x0f\x66lip_vertically\x18\x12 \x01(\x08:\x05\x66\x61lseR\x0e\x66lipVertically\x12(\n\x10min_score_thresh\x18\x13 \x01(\x02R\x0eminScoreThresh\x12#\n\x0bmax_results\x18\x14 \x01(\x05:\x02-1R\nmaxResults\x12\x64\n\x0etensor_mapping\x18\x16 \x01(\x0b\x32=.mediapipe.TensorsToDetectionsCalculatorOptions.TensorMappingR\rtensorMapping\x12|\n\x16\x62ox_boundaries_indices\x18\x17 \x01(\x0b\x32\x44.mediapipe.TensorsToDetectionsCalculatorOptions.BoxBoundariesIndicesH\x00R\x14\x62oxBoundariesIndices\x12p\n\nbox_format\x18\x18 \x01(\x0e\x32\x39.mediapipe.TensorsToDetectionsCalculatorOptions.BoxFormat:\x16\x42OX_FORMAT_UNSPECIFIEDR\tboxFormat\x1a\x9a\x02\n\rTensorMapping\x12\x36\n\x17\x64\x65tections_tensor_index\x18\x01 \x01(\x05R\x15\x64\x65tectionsTensorIndex\x12\x30\n\x14\x63lasses_tensor_index\x18\x02 \x01(\x05R\x12\x63lassesTensorIndex\x12.\n\x13scores_tensor_index\x18\x03 \x01(\x05R\x11scoresTensorIndex\x12=\n\x1bnum_detections_tensor_index\x18\x04 \x01(\x05R\x18numDetectionsTensorIndex\x12\x30\n\x14\x61nchors_tensor_index\x18\x05 \x01(\x05R\x12\x61nchorsTensorIndex\x1ar\n\x14\x42oxBoundariesIndices\x12\x15\n\x04ymin\x18\x01 \x01(\x05:\x01\x30R\x04ymin\x12\x15\n\x04xmin\x18\x02 \x01(\x05:\x01\x31R\x04xmin\x12\x15\n\x04ymax\x18\x03 \x01(\x05:\x01\x32R\x04ymax\x12\x15\n\x04xmax\x18\x04 \x01(\x05:\x01\x33R\x04xmax\"f\n\tBoxFormat\x12\x1a\n\x16\x42OX_FORMAT_UNSPECIFIED\x10\x00\x12\x13\n\x0f\x42OX_FORMAT_YXHW\x10\x01\x12\x13\n\x0f\x42OX_FORMAT_XYWH\x10\x02\x12\x13\n\x0f\x42OX_FORMAT_XYXY\x10\x03\x32\x63\n\x03\x65xt\x12\x1c.mediapipe.CalculatorOptions\x18\xaf\x8d\x8c\xa0\x01 \x01(\x0b\x32/.mediapipe.TensorsToDetectionsCalculatorOptionsR\x03\x65xtB\r\n\x0b\x62ox_indicesB:Z8github.com/google/mediapipe/mediapipe/calculators/tensor')

_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, globals())
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'mediapipe.calculators.tensor.tensors_to_detections_calculator_pb2', globals())
if _descriptor._USE_C_DESCRIPTORS == False:
  mediapipe_dot_framework_dot_calculator__options__pb2.CalculatorOptions.RegisterExtension(_TENSORSTODETECTIONSCALCULATOROPTIONS.extensions_by_name['ext'])

  DESCRIPTOR._options = None
  DESCRIPTOR._serialized_options = b'Z8github.com/google/mediapipe/mediapipe/calculators/tensor'
  _TENSORSTODETECTIONSCALCULATOROPTIONS.fields_by_name['allow_classes']._options = None
  _TENSORSTODETECTIONSCALCULATOROPTIONS.fields_by_name['allow_classes']._serialized_options = b'\020\001'
  _TENSORSTODETECTIONSCALCULATOROPTIONS._serialized_start=121
  _TENSORSTODETECTIONSCALCULATOROPTIONS._serialized_end=1955
  _TENSORSTODETECTIONSCALCULATOROPTIONS_TENSORMAPPING._serialized_start=1337
  _TENSORSTODETECTIONSCALCULATOROPTIONS_TENSORMAPPING._serialized_end=1619
  _TENSORSTODETECTIONSCALCULATOROPTIONS_BOXBOUNDARIESINDICES._serialized_start=1621
  _TENSORSTODETECTIONSCALCULATOROPTIONS_BOXBOUNDARIESINDICES._serialized_end=1735
  _TENSORSTODETECTIONSCALCULATOROPTIONS_BOXFORMAT._serialized_start=1737
  _TENSORSTODETECTIONSCALCULATOROPTIONS_BOXFORMAT._serialized_end=1839
# @@protoc_insertion_point(module_scope)
