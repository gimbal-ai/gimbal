// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: mediapipe/calculators/util/collection_has_min_size_calculator.proto

package util

import (
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	framework "github.com/google/mediapipe/mediapipe/framework"
	io "io"
	math "math"
	math_bits "math/bits"
	reflect "reflect"
	strings "strings"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type CollectionHasMinSizeCalculatorOptions struct {
	MinSize *int32 `protobuf:"varint,1,opt,name=min_size,json=minSize,def=0" json:"min_size,omitempty"`
}

func (m *CollectionHasMinSizeCalculatorOptions) Reset()      { *m = CollectionHasMinSizeCalculatorOptions{} }
func (*CollectionHasMinSizeCalculatorOptions) ProtoMessage() {}
func (*CollectionHasMinSizeCalculatorOptions) Descriptor() ([]byte, []int) {
	return fileDescriptor_442d1d00338de6a5, []int{0}
}
func (m *CollectionHasMinSizeCalculatorOptions) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *CollectionHasMinSizeCalculatorOptions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_CollectionHasMinSizeCalculatorOptions.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *CollectionHasMinSizeCalculatorOptions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CollectionHasMinSizeCalculatorOptions.Merge(m, src)
}
func (m *CollectionHasMinSizeCalculatorOptions) XXX_Size() int {
	return m.Size()
}
func (m *CollectionHasMinSizeCalculatorOptions) XXX_DiscardUnknown() {
	xxx_messageInfo_CollectionHasMinSizeCalculatorOptions.DiscardUnknown(m)
}

var xxx_messageInfo_CollectionHasMinSizeCalculatorOptions proto.InternalMessageInfo

const Default_CollectionHasMinSizeCalculatorOptions_MinSize int32 = 0

func (m *CollectionHasMinSizeCalculatorOptions) GetMinSize() int32 {
	if m != nil && m.MinSize != nil {
		return *m.MinSize
	}
	return Default_CollectionHasMinSizeCalculatorOptions_MinSize
}

var E_CollectionHasMinSizeCalculatorOptions_Ext = &proto.ExtensionDesc{
	ExtendedType:  (*framework.CalculatorOptions)(nil),
	ExtensionType: (*CollectionHasMinSizeCalculatorOptions)(nil),
	Field:         259397840,
	Name:          "mediapipe.CollectionHasMinSizeCalculatorOptions.ext",
	Tag:           "bytes,259397840,opt,name=ext",
	Filename:      "mediapipe/calculators/util/collection_has_min_size_calculator.proto",
}

func init() {
	proto.RegisterExtension(E_CollectionHasMinSizeCalculatorOptions_Ext)
	proto.RegisterType((*CollectionHasMinSizeCalculatorOptions)(nil), "mediapipe.CollectionHasMinSizeCalculatorOptions")
}

func init() {
	proto.RegisterFile("mediapipe/calculators/util/collection_has_min_size_calculator.proto", fileDescriptor_442d1d00338de6a5)
}

var fileDescriptor_442d1d00338de6a5 = []byte{
	// 268 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x72, 0xce, 0x4d, 0x4d, 0xc9,
	0x4c, 0x2c, 0xc8, 0x2c, 0x48, 0xd5, 0x4f, 0x4e, 0xcc, 0x49, 0x2e, 0xcd, 0x49, 0x2c, 0xc9, 0x2f,
	0x2a, 0xd6, 0x2f, 0x2d, 0xc9, 0xcc, 0xd1, 0x4f, 0xce, 0xcf, 0xc9, 0x49, 0x4d, 0x2e, 0xc9, 0xcc,
	0xcf, 0x8b, 0xcf, 0x48, 0x2c, 0x8e, 0xcf, 0xcd, 0xcc, 0x8b, 0x2f, 0xce, 0xac, 0x4a, 0x8d, 0x47,
	0x28, 0xd4, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x84, 0x1b, 0x22, 0xa5, 0x82, 0x30, 0x2f,
	0xad, 0x28, 0x31, 0x37, 0xb5, 0x3c, 0xbf, 0x28, 0x5b, 0x1f, 0x5d, 0x83, 0xd2, 0x2a, 0x46, 0x2e,
	0x55, 0x67, 0xb8, 0xe9, 0x1e, 0x89, 0xc5, 0xbe, 0x99, 0x79, 0xc1, 0x99, 0x55, 0xa9, 0xce, 0x70,
	0x85, 0xfe, 0x05, 0x20, 0x99, 0x62, 0x21, 0x19, 0x2e, 0x0e, 0x98, 0xbd, 0x12, 0x8c, 0x0a, 0x8c,
	0x1a, 0xac, 0x56, 0x8c, 0x06, 0x41, 0xec, 0xb9, 0x10, 0xe5, 0x46, 0xc9, 0x5c, 0xcc, 0xa9, 0x15,
	0x25, 0x42, 0x32, 0x7a, 0x70, 0x5b, 0xf5, 0x30, 0x8c, 0x90, 0xb8, 0xb0, 0xf1, 0x46, 0xb5, 0x02,
	0xa3, 0x06, 0xb7, 0x91, 0x01, 0xb2, 0x32, 0x62, 0x6c, 0x0f, 0x02, 0x99, 0xee, 0x94, 0x73, 0xe1,
	0xa1, 0x1c, 0xc3, 0x8d, 0x87, 0x72, 0x0c, 0x1f, 0x1e, 0xca, 0x31, 0x36, 0x3c, 0x92, 0x63, 0x5c,
	0xf1, 0x48, 0x8e, 0xf1, 0xc4, 0x23, 0x39, 0xc6, 0x0b, 0x8f, 0xe4, 0x18, 0x1f, 0x3c, 0x92, 0x63,
	0x7c, 0xf1, 0x48, 0x8e, 0xe1, 0xc3, 0x23, 0x39, 0xc6, 0x09, 0x8f, 0xe5, 0x18, 0x2e, 0x3c, 0x96,
	0x63, 0xb8, 0xf1, 0x58, 0x8e, 0x21, 0xca, 0x2c, 0x3d, 0xb3, 0x24, 0xa3, 0x34, 0x49, 0x2f, 0x39,
	0x3f, 0x57, 0x3f, 0x3d, 0x3f, 0x3f, 0x3d, 0x27, 0x55, 0x1f, 0x11, 0x34, 0xb8, 0x03, 0x1d, 0x10,
	0x00, 0x00, 0xff, 0xff, 0x9d, 0xd0, 0xb0, 0xa0, 0x91, 0x01, 0x00, 0x00,
}

func (this *CollectionHasMinSizeCalculatorOptions) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*CollectionHasMinSizeCalculatorOptions)
	if !ok {
		that2, ok := that.(CollectionHasMinSizeCalculatorOptions)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.MinSize != nil && that1.MinSize != nil {
		if *this.MinSize != *that1.MinSize {
			return false
		}
	} else if this.MinSize != nil {
		return false
	} else if that1.MinSize != nil {
		return false
	}
	return true
}
func (this *CollectionHasMinSizeCalculatorOptions) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 5)
	s = append(s, "&util.CollectionHasMinSizeCalculatorOptions{")
	if this.MinSize != nil {
		s = append(s, "MinSize: "+valueToGoStringCollectionHasMinSizeCalculator(this.MinSize, "int32")+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func valueToGoStringCollectionHasMinSizeCalculator(v interface{}, typ string) string {
	rv := reflect.ValueOf(v)
	if rv.IsNil() {
		return "nil"
	}
	pv := reflect.Indirect(rv).Interface()
	return fmt.Sprintf("func(v %v) *%v { return &v } ( %#v )", typ, typ, pv)
}
func (m *CollectionHasMinSizeCalculatorOptions) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *CollectionHasMinSizeCalculatorOptions) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *CollectionHasMinSizeCalculatorOptions) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.MinSize != nil {
		i = encodeVarintCollectionHasMinSizeCalculator(dAtA, i, uint64(*m.MinSize))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func encodeVarintCollectionHasMinSizeCalculator(dAtA []byte, offset int, v uint64) int {
	offset -= sovCollectionHasMinSizeCalculator(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *CollectionHasMinSizeCalculatorOptions) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.MinSize != nil {
		n += 1 + sovCollectionHasMinSizeCalculator(uint64(*m.MinSize))
	}
	return n
}

func sovCollectionHasMinSizeCalculator(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozCollectionHasMinSizeCalculator(x uint64) (n int) {
	return sovCollectionHasMinSizeCalculator(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (this *CollectionHasMinSizeCalculatorOptions) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&CollectionHasMinSizeCalculatorOptions{`,
		`MinSize:` + valueToStringCollectionHasMinSizeCalculator(this.MinSize) + `,`,
		`}`,
	}, "")
	return s
}
func valueToStringCollectionHasMinSizeCalculator(v interface{}) string {
	rv := reflect.ValueOf(v)
	if rv.IsNil() {
		return "nil"
	}
	pv := reflect.Indirect(rv).Interface()
	return fmt.Sprintf("*%v", pv)
}
func (m *CollectionHasMinSizeCalculatorOptions) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowCollectionHasMinSizeCalculator
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CollectionHasMinSizeCalculatorOptions: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CollectionHasMinSizeCalculatorOptions: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MinSize", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCollectionHasMinSizeCalculator
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.MinSize = &v
		default:
			iNdEx = preIndex
			skippy, err := skipCollectionHasMinSizeCalculator(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthCollectionHasMinSizeCalculator
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipCollectionHasMinSizeCalculator(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowCollectionHasMinSizeCalculator
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowCollectionHasMinSizeCalculator
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowCollectionHasMinSizeCalculator
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthCollectionHasMinSizeCalculator
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupCollectionHasMinSizeCalculator
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthCollectionHasMinSizeCalculator
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthCollectionHasMinSizeCalculator        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowCollectionHasMinSizeCalculator          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupCollectionHasMinSizeCalculator = fmt.Errorf("proto: unexpected end of group")
)
