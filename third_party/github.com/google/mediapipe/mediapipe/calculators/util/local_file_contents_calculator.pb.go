// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: mediapipe/calculators/util/local_file_contents_calculator.proto

package util

import (
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	framework "github.com/google/mediapipe/mediapipe/framework"
	io "io"
	math "math"
	math_bits "math/bits"
	reflect "reflect"
	strings "strings"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type LocalFileContentsCalculatorOptions struct {
	TextMode bool `protobuf:"varint,1,opt,name=text_mode,json=textMode" json:"text_mode"`
}

func (m *LocalFileContentsCalculatorOptions) Reset()      { *m = LocalFileContentsCalculatorOptions{} }
func (*LocalFileContentsCalculatorOptions) ProtoMessage() {}
func (*LocalFileContentsCalculatorOptions) Descriptor() ([]byte, []int) {
	return fileDescriptor_d8114e873196de5e, []int{0}
}
func (m *LocalFileContentsCalculatorOptions) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *LocalFileContentsCalculatorOptions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_LocalFileContentsCalculatorOptions.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *LocalFileContentsCalculatorOptions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LocalFileContentsCalculatorOptions.Merge(m, src)
}
func (m *LocalFileContentsCalculatorOptions) XXX_Size() int {
	return m.Size()
}
func (m *LocalFileContentsCalculatorOptions) XXX_DiscardUnknown() {
	xxx_messageInfo_LocalFileContentsCalculatorOptions.DiscardUnknown(m)
}

var xxx_messageInfo_LocalFileContentsCalculatorOptions proto.InternalMessageInfo

func (m *LocalFileContentsCalculatorOptions) GetTextMode() bool {
	if m != nil {
		return m.TextMode
	}
	return false
}

var E_LocalFileContentsCalculatorOptions_Ext = &proto.ExtensionDesc{
	ExtendedType:  (*framework.CalculatorOptions)(nil),
	ExtensionType: (*LocalFileContentsCalculatorOptions)(nil),
	Field:         346849340,
	Name:          "mediapipe.LocalFileContentsCalculatorOptions.ext",
	Tag:           "bytes,346849340,opt,name=ext",
	Filename:      "mediapipe/calculators/util/local_file_contents_calculator.proto",
}

func init() {
	proto.RegisterExtension(E_LocalFileContentsCalculatorOptions_Ext)
	proto.RegisterType((*LocalFileContentsCalculatorOptions)(nil), "mediapipe.LocalFileContentsCalculatorOptions")
}

func init() {
	proto.RegisterFile("mediapipe/calculators/util/local_file_contents_calculator.proto", fileDescriptor_d8114e873196de5e)
}

var fileDescriptor_d8114e873196de5e = []byte{
	// 276 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xb2, 0xcf, 0x4d, 0x4d, 0xc9,
	0x4c, 0x2c, 0xc8, 0x2c, 0x48, 0xd5, 0x4f, 0x4e, 0xcc, 0x49, 0x2e, 0xcd, 0x49, 0x2c, 0xc9, 0x2f,
	0x2a, 0xd6, 0x2f, 0x2d, 0xc9, 0xcc, 0xd1, 0xcf, 0xc9, 0x4f, 0x4e, 0xcc, 0x89, 0x4f, 0xcb, 0xcc,
	0x49, 0x8d, 0x4f, 0xce, 0xcf, 0x2b, 0x49, 0xcd, 0x2b, 0x29, 0x8e, 0x47, 0x28, 0xd2, 0x2b, 0x28,
	0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x84, 0x1b, 0x20, 0xa5, 0x82, 0x30, 0x2b, 0xad, 0x28, 0x31, 0x37,
	0xb5, 0x3c, 0xbf, 0x28, 0x5b, 0x1f, 0x5d, 0x83, 0xd2, 0x2a, 0x46, 0x2e, 0x25, 0x1f, 0x90, 0xc9,
	0x6e, 0x99, 0x39, 0xa9, 0xce, 0x50, 0x73, 0x9d, 0xe1, 0xaa, 0xfc, 0x0b, 0x4a, 0x32, 0xf3, 0xf3,
	0x8a, 0x85, 0x14, 0xb9, 0x38, 0x4b, 0x52, 0x2b, 0x4a, 0xe2, 0x73, 0xf3, 0x53, 0x52, 0x25, 0x18,
	0x15, 0x18, 0x35, 0x38, 0x9c, 0x58, 0x4e, 0xdc, 0x93, 0x67, 0x08, 0xe2, 0x00, 0x09, 0xfb, 0xe6,
	0xa7, 0xa4, 0x1a, 0x25, 0x72, 0x31, 0xa7, 0x56, 0x94, 0x08, 0xc9, 0xe8, 0xc1, 0xed, 0xd5, 0xc3,
	0x30, 0x47, 0x62, 0x4f, 0xc3, 0xa6, 0xa5, 0x20, 0xed, 0xdc, 0x46, 0xba, 0x48, 0xea, 0x08, 0x3b,
	0x20, 0x08, 0x64, 0xb6, 0x53, 0xce, 0x85, 0x87, 0x72, 0x0c, 0x37, 0x1e, 0xca, 0x31, 0x7c, 0x78,
	0x28, 0xc7, 0xd8, 0xf0, 0x48, 0x8e, 0x71, 0xc5, 0x23, 0x39, 0xc6, 0x13, 0x8f, 0xe4, 0x18, 0x2f,
	0x3c, 0x92, 0x63, 0x7c, 0xf0, 0x48, 0x8e, 0xf1, 0xc5, 0x23, 0x39, 0x86, 0x0f, 0x8f, 0xe4, 0x18,
	0x27, 0x3c, 0x96, 0x63, 0xb8, 0xf0, 0x58, 0x8e, 0xe1, 0xc6, 0x63, 0x39, 0x86, 0x28, 0xb3, 0xf4,
	0xcc, 0x92, 0x8c, 0xd2, 0x24, 0xbd, 0xe4, 0xfc, 0x5c, 0xfd, 0xf4, 0xfc, 0xfc, 0xf4, 0x9c, 0x54,
	0x7d, 0x44, 0xd0, 0xe0, 0x0e, 0x70, 0x40, 0x00, 0x00, 0x00, 0xff, 0xff, 0xa9, 0x04, 0x80, 0x4f,
	0x8d, 0x01, 0x00, 0x00,
}

func (this *LocalFileContentsCalculatorOptions) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*LocalFileContentsCalculatorOptions)
	if !ok {
		that2, ok := that.(LocalFileContentsCalculatorOptions)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.TextMode != that1.TextMode {
		return false
	}
	return true
}
func (this *LocalFileContentsCalculatorOptions) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 5)
	s = append(s, "&util.LocalFileContentsCalculatorOptions{")
	s = append(s, "TextMode: "+fmt.Sprintf("%#v", this.TextMode)+",\n")
	s = append(s, "}")
	return strings.Join(s, "")
}
func valueToGoStringLocalFileContentsCalculator(v interface{}, typ string) string {
	rv := reflect.ValueOf(v)
	if rv.IsNil() {
		return "nil"
	}
	pv := reflect.Indirect(rv).Interface()
	return fmt.Sprintf("func(v %v) *%v { return &v } ( %#v )", typ, typ, pv)
}
func (m *LocalFileContentsCalculatorOptions) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *LocalFileContentsCalculatorOptions) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *LocalFileContentsCalculatorOptions) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	i--
	if m.TextMode {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x8
	return len(dAtA) - i, nil
}

func encodeVarintLocalFileContentsCalculator(dAtA []byte, offset int, v uint64) int {
	offset -= sovLocalFileContentsCalculator(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *LocalFileContentsCalculatorOptions) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 2
	return n
}

func sovLocalFileContentsCalculator(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozLocalFileContentsCalculator(x uint64) (n int) {
	return sovLocalFileContentsCalculator(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (this *LocalFileContentsCalculatorOptions) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&LocalFileContentsCalculatorOptions{`,
		`TextMode:` + fmt.Sprintf("%v", this.TextMode) + `,`,
		`}`,
	}, "")
	return s
}
func valueToStringLocalFileContentsCalculator(v interface{}) string {
	rv := reflect.ValueOf(v)
	if rv.IsNil() {
		return "nil"
	}
	pv := reflect.Indirect(rv).Interface()
	return fmt.Sprintf("*%v", pv)
}
func (m *LocalFileContentsCalculatorOptions) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowLocalFileContentsCalculator
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: LocalFileContentsCalculatorOptions: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: LocalFileContentsCalculatorOptions: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TextMode", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowLocalFileContentsCalculator
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.TextMode = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipLocalFileContentsCalculator(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthLocalFileContentsCalculator
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipLocalFileContentsCalculator(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowLocalFileContentsCalculator
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowLocalFileContentsCalculator
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowLocalFileContentsCalculator
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthLocalFileContentsCalculator
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupLocalFileContentsCalculator
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthLocalFileContentsCalculator
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthLocalFileContentsCalculator        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowLocalFileContentsCalculator          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupLocalFileContentsCalculator = fmt.Errorf("proto: unexpected end of group")
)
