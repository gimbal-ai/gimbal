// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: mediapipe/framework/packet_generator.proto

package framework

import (
	fmt "fmt"
	github_com_gogo_protobuf_proto "github.com/gogo/protobuf/proto"
	proto "github.com/gogo/protobuf/proto"
	io "io"
	math "math"
	math_bits "math/bits"
	reflect "reflect"
	sort "sort"
	strconv "strconv"
	strings "strings"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// Deprecated: Do not use.
type PacketGeneratorOptions struct {
	MergeFields                  *bool `protobuf:"varint,1,opt,name=merge_fields,json=mergeFields,def=1" json:"merge_fields,omitempty"`
	proto.XXX_InternalExtensions `json:"-"`
}

func (m *PacketGeneratorOptions) Reset()      { *m = PacketGeneratorOptions{} }
func (*PacketGeneratorOptions) ProtoMessage() {}
func (*PacketGeneratorOptions) Descriptor() ([]byte, []int) {
	return fileDescriptor_036e0eef9f7fa034, []int{0}
}

var extRange_PacketGeneratorOptions = []proto.ExtensionRange{
	{Start: 20000, End: 536870911},
}

func (*PacketGeneratorOptions) ExtensionRangeArray() []proto.ExtensionRange {
	return extRange_PacketGeneratorOptions
}

func (m *PacketGeneratorOptions) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *PacketGeneratorOptions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_PacketGeneratorOptions.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *PacketGeneratorOptions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PacketGeneratorOptions.Merge(m, src)
}
func (m *PacketGeneratorOptions) XXX_Size() int {
	return m.Size()
}
func (m *PacketGeneratorOptions) XXX_DiscardUnknown() {
	xxx_messageInfo_PacketGeneratorOptions.DiscardUnknown(m)
}

var xxx_messageInfo_PacketGeneratorOptions proto.InternalMessageInfo

const Default_PacketGeneratorOptions_MergeFields bool = true

func (m *PacketGeneratorOptions) GetMergeFields() bool {
	if m != nil && m.MergeFields != nil {
		return *m.MergeFields
	}
	return Default_PacketGeneratorOptions_MergeFields
}

// Deprecated: Do not use.
type PacketGeneratorConfig struct {
	PacketGenerator  string                  `protobuf:"bytes,1,opt,name=packet_generator,json=packetGenerator" json:"packet_generator"`
	InputSidePacket  []string                `protobuf:"bytes,2,rep,name=input_side_packet,json=inputSidePacket" json:"input_side_packet,omitempty"`
	ExternalInput    []string                `protobuf:"bytes,1002,rep,name=external_input,json=externalInput" json:"external_input,omitempty"`
	OutputSidePacket []string                `protobuf:"bytes,3,rep,name=output_side_packet,json=outputSidePacket" json:"output_side_packet,omitempty"`
	ExternalOutput   []string                `protobuf:"bytes,1003,rep,name=external_output,json=externalOutput" json:"external_output,omitempty"`
	Options          *PacketGeneratorOptions `protobuf:"bytes,4,opt,name=options" json:"options,omitempty"`
}

func (m *PacketGeneratorConfig) Reset()      { *m = PacketGeneratorConfig{} }
func (*PacketGeneratorConfig) ProtoMessage() {}
func (*PacketGeneratorConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_036e0eef9f7fa034, []int{1}
}
func (m *PacketGeneratorConfig) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *PacketGeneratorConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_PacketGeneratorConfig.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *PacketGeneratorConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PacketGeneratorConfig.Merge(m, src)
}
func (m *PacketGeneratorConfig) XXX_Size() int {
	return m.Size()
}
func (m *PacketGeneratorConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_PacketGeneratorConfig.DiscardUnknown(m)
}

var xxx_messageInfo_PacketGeneratorConfig proto.InternalMessageInfo

func (m *PacketGeneratorConfig) GetPacketGenerator() string {
	if m != nil {
		return m.PacketGenerator
	}
	return ""
}

func (m *PacketGeneratorConfig) GetInputSidePacket() []string {
	if m != nil {
		return m.InputSidePacket
	}
	return nil
}

func (m *PacketGeneratorConfig) GetExternalInput() []string {
	if m != nil {
		return m.ExternalInput
	}
	return nil
}

func (m *PacketGeneratorConfig) GetOutputSidePacket() []string {
	if m != nil {
		return m.OutputSidePacket
	}
	return nil
}

func (m *PacketGeneratorConfig) GetExternalOutput() []string {
	if m != nil {
		return m.ExternalOutput
	}
	return nil
}

func (m *PacketGeneratorConfig) GetOptions() *PacketGeneratorOptions {
	if m != nil {
		return m.Options
	}
	return nil
}

func init() {
	proto.RegisterType((*PacketGeneratorOptions)(nil), "mediapipe.PacketGeneratorOptions")
	proto.RegisterType((*PacketGeneratorConfig)(nil), "mediapipe.PacketGeneratorConfig")
}

func init() {
	proto.RegisterFile("mediapipe/framework/packet_generator.proto", fileDescriptor_036e0eef9f7fa034)
}

var fileDescriptor_036e0eef9f7fa034 = []byte{
	// 391 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x92, 0x41, 0x4f, 0xe2, 0x40,
	0x1c, 0xc5, 0x3b, 0x85, 0x04, 0x18, 0x76, 0x17, 0x76, 0xb2, 0xbb, 0x69, 0xf6, 0x30, 0x22, 0x07,
	0x6d, 0x88, 0x69, 0x13, 0x8f, 0x78, 0xc3, 0x44, 0xe3, 0x09, 0xac, 0x37, 0x2f, 0x4d, 0xa5, 0x43,
	0x9d, 0x40, 0x3b, 0xcd, 0x30, 0x8d, 0x1e, 0xfb, 0x11, 0xbc, 0x79, 0xf1, 0xe0, 0xd1, 0x2f, 0xe0,
	0x77, 0xe0, 0xc8, 0x91, 0x93, 0x91, 0x72, 0x31, 0x7a, 0xe1, 0x23, 0x18, 0xa6, 0xa1, 0x62, 0xc3,
	0xf5, 0xfd, 0xde, 0xff, 0xbd, 0xe6, 0x75, 0x60, 0xcb, 0x27, 0x2e, 0x75, 0x42, 0x1a, 0x12, 0x73,
	0xc0, 0x1d, 0x9f, 0xdc, 0x30, 0x3e, 0x34, 0x43, 0xa7, 0x3f, 0x24, 0xc2, 0xf6, 0x48, 0x40, 0xb8,
	0x23, 0x18, 0x37, 0x42, 0xce, 0x04, 0x43, 0x95, 0xcc, 0xdb, 0x3c, 0x87, 0xff, 0x7a, 0xd2, 0x74,
	0xba, 0xf6, 0x74, 0x43, 0x41, 0x59, 0x30, 0x46, 0xfb, 0xf0, 0x87, 0x4f, 0xb8, 0x47, 0xec, 0x01,
	0x25, 0x23, 0x77, 0xac, 0x81, 0x06, 0xd0, 0xcb, 0xed, 0xa2, 0xe0, 0x11, 0xb1, 0xaa, 0x92, 0x9c,
	0x48, 0xd0, 0x82, 0xe5, 0xc7, 0x07, 0x50, 0x8f, 0xe3, 0x38, 0x56, 0xdb, 0xaa, 0x06, 0x9a, 0xcf,
	0x2a, 0xfc, 0x9b, 0xcb, 0x3c, 0x66, 0xc1, 0x80, 0x7a, 0xc8, 0x84, 0xf5, 0xfc, 0x17, 0xc9, 0xd8,
	0x4a, 0xa7, 0x38, 0x79, 0xd9, 0x51, 0xac, 0x5a, 0xf8, 0xfd, 0x0c, 0xb5, 0xe0, 0x6f, 0x1a, 0x84,
	0x91, 0xb0, 0xc7, 0xd4, 0x25, 0x76, 0x4a, 0x35, 0xb5, 0x51, 0xd0, 0x2b, 0x56, 0x4d, 0x82, 0x0b,
	0xea, 0x92, 0xb4, 0x0b, 0xed, 0xc1, 0x5f, 0xe4, 0x56, 0x10, 0x1e, 0x38, 0x23, 0x5b, 0x32, 0xed,
	0xbd, 0x24, 0x9d, 0x3f, 0xd7, 0xf2, 0xd9, 0x4a, 0x45, 0x07, 0x10, 0xb1, 0x48, 0xe4, 0x43, 0x0b,
	0xd2, 0x5a, 0x4f, 0xc9, 0x46, 0xaa, 0x0e, 0x6b, 0x59, 0x6a, 0x0a, 0xb5, 0x8f, 0x34, 0x36, 0x6b,
	0xeb, 0x4a, 0x19, 0x1d, 0xc1, 0x12, 0x4b, 0xa7, 0xd3, 0x8a, 0x0d, 0xa0, 0x57, 0x0f, 0x77, 0x8d,
	0x6c, 0x66, 0x63, 0xfb, 0xc6, 0xd6, 0xfa, 0x62, 0xb5, 0x5b, 0xe7, 0x1e, 0x4c, 0xe7, 0x58, 0x99,
	0xcd, 0xb1, 0xb2, 0x9c, 0x63, 0x10, 0x27, 0x18, 0x3c, 0x25, 0x18, 0x4c, 0x12, 0x0c, 0xa6, 0x09,
	0x06, 0xaf, 0x09, 0x06, 0x6f, 0x09, 0x56, 0x96, 0x09, 0x06, 0x77, 0x0b, 0xac, 0x4c, 0x17, 0x58,
	0x99, 0x2d, 0xb0, 0x02, 0xff, 0xf7, 0x99, 0x6f, 0x78, 0x8c, 0x79, 0x23, 0xb2, 0x51, 0x28, 0x7f,
	0x74, 0xe7, 0x4f, 0xae, 0xb7, 0xb7, 0x52, 0x2f, 0x4d, 0x8f, 0x8a, 0xeb, 0xe8, 0xca, 0xe8, 0x33,
	0xdf, 0x4c, 0x0f, 0xcd, 0xaf, 0xc7, 0xb3, 0xe5, 0x19, 0x7d, 0x06, 0x00, 0x00, 0xff, 0xff, 0xc8,
	0x65, 0xfe, 0x16, 0x5c, 0x02, 0x00, 0x00,
}

func (this *PacketGeneratorOptions) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*PacketGeneratorOptions)
	if !ok {
		that2, ok := that.(PacketGeneratorOptions)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.MergeFields != nil && that1.MergeFields != nil {
		if *this.MergeFields != *that1.MergeFields {
			return false
		}
	} else if this.MergeFields != nil {
		return false
	} else if that1.MergeFields != nil {
		return false
	}
	thismap := github_com_gogo_protobuf_proto.GetUnsafeExtensionsMap(this)
	thatmap := github_com_gogo_protobuf_proto.GetUnsafeExtensionsMap(that1)
	for k, v := range thismap {
		if v2, ok := thatmap[k]; ok {
			if !v.Equal(&v2) {
				return false
			}
		} else {
			return false
		}
	}
	for k, _ := range thatmap {
		if _, ok := thismap[k]; !ok {
			return false
		}
	}
	return true
}
func (this *PacketGeneratorConfig) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*PacketGeneratorConfig)
	if !ok {
		that2, ok := that.(PacketGeneratorConfig)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.PacketGenerator != that1.PacketGenerator {
		return false
	}
	if len(this.InputSidePacket) != len(that1.InputSidePacket) {
		return false
	}
	for i := range this.InputSidePacket {
		if this.InputSidePacket[i] != that1.InputSidePacket[i] {
			return false
		}
	}
	if len(this.ExternalInput) != len(that1.ExternalInput) {
		return false
	}
	for i := range this.ExternalInput {
		if this.ExternalInput[i] != that1.ExternalInput[i] {
			return false
		}
	}
	if len(this.OutputSidePacket) != len(that1.OutputSidePacket) {
		return false
	}
	for i := range this.OutputSidePacket {
		if this.OutputSidePacket[i] != that1.OutputSidePacket[i] {
			return false
		}
	}
	if len(this.ExternalOutput) != len(that1.ExternalOutput) {
		return false
	}
	for i := range this.ExternalOutput {
		if this.ExternalOutput[i] != that1.ExternalOutput[i] {
			return false
		}
	}
	if !this.Options.Equal(that1.Options) {
		return false
	}
	return true
}
func (this *PacketGeneratorOptions) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 5)
	s = append(s, "&framework.PacketGeneratorOptions{")
	if this.MergeFields != nil {
		s = append(s, "MergeFields: "+valueToGoStringPacketGenerator(this.MergeFields, "bool")+",\n")
	}
	s = append(s, "XXX_InternalExtensions: "+extensionToGoStringPacketGenerator(this)+",\n")
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *PacketGeneratorConfig) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 10)
	s = append(s, "&framework.PacketGeneratorConfig{")
	s = append(s, "PacketGenerator: "+fmt.Sprintf("%#v", this.PacketGenerator)+",\n")
	if this.InputSidePacket != nil {
		s = append(s, "InputSidePacket: "+fmt.Sprintf("%#v", this.InputSidePacket)+",\n")
	}
	if this.ExternalInput != nil {
		s = append(s, "ExternalInput: "+fmt.Sprintf("%#v", this.ExternalInput)+",\n")
	}
	if this.OutputSidePacket != nil {
		s = append(s, "OutputSidePacket: "+fmt.Sprintf("%#v", this.OutputSidePacket)+",\n")
	}
	if this.ExternalOutput != nil {
		s = append(s, "ExternalOutput: "+fmt.Sprintf("%#v", this.ExternalOutput)+",\n")
	}
	if this.Options != nil {
		s = append(s, "Options: "+fmt.Sprintf("%#v", this.Options)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func valueToGoStringPacketGenerator(v interface{}, typ string) string {
	rv := reflect.ValueOf(v)
	if rv.IsNil() {
		return "nil"
	}
	pv := reflect.Indirect(rv).Interface()
	return fmt.Sprintf("func(v %v) *%v { return &v } ( %#v )", typ, typ, pv)
}
func extensionToGoStringPacketGenerator(m github_com_gogo_protobuf_proto.Message) string {
	e := github_com_gogo_protobuf_proto.GetUnsafeExtensionsMap(m)
	if e == nil {
		return "nil"
	}
	s := "proto.NewUnsafeXXX_InternalExtensions(map[int32]proto.Extension{"
	keys := make([]int, 0, len(e))
	for k := range e {
		keys = append(keys, int(k))
	}
	sort.Ints(keys)
	ss := []string{}
	for _, k := range keys {
		ss = append(ss, strconv.Itoa(k)+": "+e[int32(k)].GoString())
	}
	s += strings.Join(ss, ",") + "})"
	return s
}
func (m *PacketGeneratorOptions) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *PacketGeneratorOptions) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *PacketGeneratorOptions) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if n, err := github_com_gogo_protobuf_proto.EncodeInternalExtensionBackwards(m, dAtA[:i]); err != nil {
		return 0, err
	} else {
		i -= n
	}
	if m.MergeFields != nil {
		i--
		if *m.MergeFields {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *PacketGeneratorConfig) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *PacketGeneratorConfig) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *PacketGeneratorConfig) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.ExternalOutput) > 0 {
		for iNdEx := len(m.ExternalOutput) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.ExternalOutput[iNdEx])
			copy(dAtA[i:], m.ExternalOutput[iNdEx])
			i = encodeVarintPacketGenerator(dAtA, i, uint64(len(m.ExternalOutput[iNdEx])))
			i--
			dAtA[i] = 0x3e
			i--
			dAtA[i] = 0xda
		}
	}
	if len(m.ExternalInput) > 0 {
		for iNdEx := len(m.ExternalInput) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.ExternalInput[iNdEx])
			copy(dAtA[i:], m.ExternalInput[iNdEx])
			i = encodeVarintPacketGenerator(dAtA, i, uint64(len(m.ExternalInput[iNdEx])))
			i--
			dAtA[i] = 0x3e
			i--
			dAtA[i] = 0xd2
		}
	}
	if m.Options != nil {
		{
			size, err := m.Options.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintPacketGenerator(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if len(m.OutputSidePacket) > 0 {
		for iNdEx := len(m.OutputSidePacket) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.OutputSidePacket[iNdEx])
			copy(dAtA[i:], m.OutputSidePacket[iNdEx])
			i = encodeVarintPacketGenerator(dAtA, i, uint64(len(m.OutputSidePacket[iNdEx])))
			i--
			dAtA[i] = 0x1a
		}
	}
	if len(m.InputSidePacket) > 0 {
		for iNdEx := len(m.InputSidePacket) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.InputSidePacket[iNdEx])
			copy(dAtA[i:], m.InputSidePacket[iNdEx])
			i = encodeVarintPacketGenerator(dAtA, i, uint64(len(m.InputSidePacket[iNdEx])))
			i--
			dAtA[i] = 0x12
		}
	}
	i -= len(m.PacketGenerator)
	copy(dAtA[i:], m.PacketGenerator)
	i = encodeVarintPacketGenerator(dAtA, i, uint64(len(m.PacketGenerator)))
	i--
	dAtA[i] = 0xa
	return len(dAtA) - i, nil
}

func encodeVarintPacketGenerator(dAtA []byte, offset int, v uint64) int {
	offset -= sovPacketGenerator(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *PacketGeneratorOptions) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.MergeFields != nil {
		n += 2
	}
	n += github_com_gogo_protobuf_proto.SizeOfInternalExtension(m)
	return n
}

func (m *PacketGeneratorConfig) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.PacketGenerator)
	n += 1 + l + sovPacketGenerator(uint64(l))
	if len(m.InputSidePacket) > 0 {
		for _, s := range m.InputSidePacket {
			l = len(s)
			n += 1 + l + sovPacketGenerator(uint64(l))
		}
	}
	if len(m.OutputSidePacket) > 0 {
		for _, s := range m.OutputSidePacket {
			l = len(s)
			n += 1 + l + sovPacketGenerator(uint64(l))
		}
	}
	if m.Options != nil {
		l = m.Options.Size()
		n += 1 + l + sovPacketGenerator(uint64(l))
	}
	if len(m.ExternalInput) > 0 {
		for _, s := range m.ExternalInput {
			l = len(s)
			n += 2 + l + sovPacketGenerator(uint64(l))
		}
	}
	if len(m.ExternalOutput) > 0 {
		for _, s := range m.ExternalOutput {
			l = len(s)
			n += 2 + l + sovPacketGenerator(uint64(l))
		}
	}
	return n
}

func sovPacketGenerator(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozPacketGenerator(x uint64) (n int) {
	return sovPacketGenerator(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (this *PacketGeneratorOptions) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&PacketGeneratorOptions{`,
		`MergeFields:` + valueToStringPacketGenerator(this.MergeFields) + `,`,
		`XXX_InternalExtensions:` + github_com_gogo_protobuf_proto.StringFromInternalExtension(this) + `,`,
		`}`,
	}, "")
	return s
}
func (this *PacketGeneratorConfig) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&PacketGeneratorConfig{`,
		`PacketGenerator:` + fmt.Sprintf("%v", this.PacketGenerator) + `,`,
		`InputSidePacket:` + fmt.Sprintf("%v", this.InputSidePacket) + `,`,
		`OutputSidePacket:` + fmt.Sprintf("%v", this.OutputSidePacket) + `,`,
		`Options:` + strings.Replace(this.Options.String(), "PacketGeneratorOptions", "PacketGeneratorOptions", 1) + `,`,
		`ExternalInput:` + fmt.Sprintf("%v", this.ExternalInput) + `,`,
		`ExternalOutput:` + fmt.Sprintf("%v", this.ExternalOutput) + `,`,
		`}`,
	}, "")
	return s
}
func valueToStringPacketGenerator(v interface{}) string {
	rv := reflect.ValueOf(v)
	if rv.IsNil() {
		return "nil"
	}
	pv := reflect.Indirect(rv).Interface()
	return fmt.Sprintf("*%v", pv)
}
func (m *PacketGeneratorOptions) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowPacketGenerator
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: PacketGeneratorOptions: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: PacketGeneratorOptions: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MergeFields", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPacketGenerator
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.MergeFields = &b
		default:
			if (fieldNum >= 20000) && (fieldNum < 536870912) {
				var sizeOfWire int
				for {
					sizeOfWire++
					wire >>= 7
					if wire == 0 {
						break
					}
				}
				iNdEx -= sizeOfWire
				skippy, err := skipPacketGenerator(dAtA[iNdEx:])
				if err != nil {
					return err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return ErrInvalidLengthPacketGenerator
				}
				if (iNdEx + skippy) > l {
					return io.ErrUnexpectedEOF
				}
				github_com_gogo_protobuf_proto.AppendExtension(m, int32(fieldNum), dAtA[iNdEx:iNdEx+skippy])
				iNdEx += skippy
			} else {
				iNdEx = preIndex
				skippy, err := skipPacketGenerator(dAtA[iNdEx:])
				if err != nil {
					return err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return ErrInvalidLengthPacketGenerator
				}
				if (iNdEx + skippy) > l {
					return io.ErrUnexpectedEOF
				}
				iNdEx += skippy
			}
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *PacketGeneratorConfig) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowPacketGenerator
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: PacketGeneratorConfig: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: PacketGeneratorConfig: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PacketGenerator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPacketGenerator
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthPacketGenerator
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthPacketGenerator
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PacketGenerator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field InputSidePacket", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPacketGenerator
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthPacketGenerator
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthPacketGenerator
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.InputSidePacket = append(m.InputSidePacket, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OutputSidePacket", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPacketGenerator
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthPacketGenerator
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthPacketGenerator
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.OutputSidePacket = append(m.OutputSidePacket, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Options", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPacketGenerator
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthPacketGenerator
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthPacketGenerator
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Options == nil {
				m.Options = &PacketGeneratorOptions{}
			}
			if err := m.Options.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 1002:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ExternalInput", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPacketGenerator
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthPacketGenerator
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthPacketGenerator
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ExternalInput = append(m.ExternalInput, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		case 1003:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ExternalOutput", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPacketGenerator
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthPacketGenerator
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthPacketGenerator
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ExternalOutput = append(m.ExternalOutput, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipPacketGenerator(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthPacketGenerator
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipPacketGenerator(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowPacketGenerator
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowPacketGenerator
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowPacketGenerator
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthPacketGenerator
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupPacketGenerator
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthPacketGenerator
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthPacketGenerator        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowPacketGenerator          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupPacketGenerator = fmt.Errorf("proto: unexpected end of group")
)
