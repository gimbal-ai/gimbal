# Copyright Â© 2023- Gimlet Labs, Inc.
# All Rights Reserved.
#
# NOTICE:  All information contained herein is, and remains
# the property of Gimlet Labs, Inc. and its suppliers,
# if any.  The intellectual and technical concepts contained
# herein are proprietary to Gimlet Labs, Inc. and its suppliers and
# may be covered by U.S. and Foreign Patents, patents in process,
# and are protected by trade secret or copyright law. Dissemination
# of this information or reproduction of this material is strictly
# forbidden unless prior written permission is obtained from
# Gimlet Labs, Inc.
#
# SPDX-License-Identifier: Proprietary

load("@build_stack_rules_proto//rules:proto_compile.bzl", "proto_compile")
load("@build_stack_rules_proto//rules/cc:proto_cc_library.bzl", "proto_cc_library")
load("@build_stack_rules_proto//rules/go:proto_go_library.bzl", "proto_go_library")
load("@build_stack_rules_proto//rules/py:proto_py_library.bzl", "proto_py_library")
load("@rules_proto//proto:defs.bzl", "proto_library")

proto_library(
    name = "tracking_proto",
    srcs = [
        "box_detector.proto",
        "box_tracker.proto",
        "camera_motion.proto",
        "flow_packager.proto",
        "frame_selection.proto",
        "frame_selection_solution_evaluator.proto",
        "motion_analysis.proto",
        "motion_estimation.proto",
        "motion_models.proto",
        "motion_saliency.proto",
        "push_pull_filtering.proto",
        "region_flow.proto",
        "region_flow_computation.proto",
        "tone_estimation.proto",
        "tone_models.proto",
        "tracked_detection_manager_config.proto",
        "tracking.proto",
    ],
    strip_import_prefix = "/third_party/github.com/google/mediapipe",
    visibility = ["//visibility:public"],
)

proto_cc_library(
    name = "tracking_cc_library",
    srcs = [
        "box_detector.pb.cc",
        "box_tracker.pb.cc",
        "camera_motion.pb.cc",
        "flow_packager.pb.cc",
        "frame_selection.pb.cc",
        "frame_selection_solution_evaluator.pb.cc",
        "motion_analysis.pb.cc",
        "motion_estimation.pb.cc",
        "motion_models.pb.cc",
        "motion_saliency.pb.cc",
        "push_pull_filtering.pb.cc",
        "region_flow.pb.cc",
        "region_flow_computation.pb.cc",
        "tone_estimation.pb.cc",
        "tone_models.pb.cc",
        "tracked_detection_manager_config.pb.cc",
        "tracking.pb.cc",
    ],
    hdrs = [
        "box_detector.pb.h",
        "box_tracker.pb.h",
        "camera_motion.pb.h",
        "flow_packager.pb.h",
        "frame_selection.pb.h",
        "frame_selection_solution_evaluator.pb.h",
        "motion_analysis.pb.h",
        "motion_estimation.pb.h",
        "motion_models.pb.h",
        "motion_saliency.pb.h",
        "push_pull_filtering.pb.h",
        "region_flow.pb.h",
        "region_flow_computation.pb.h",
        "tone_estimation.pb.h",
        "tone_models.pb.h",
        "tracked_detection_manager_config.pb.h",
        "tracking.pb.h",
    ],
    strip_include_prefix = "/third_party/github.com/google/mediapipe",
    visibility = ["//visibility:public"],
    deps = ["@com_google_protobuf//:protobuf"],
)

proto_compile(
    name = "tracking_cpp_compile",
    output_mappings = [
        "box_detector.pb.cc=mediapipe/util/tracking/box_detector.pb.cc",
        "box_detector.pb.h=mediapipe/util/tracking/box_detector.pb.h",
        "box_tracker.pb.cc=mediapipe/util/tracking/box_tracker.pb.cc",
        "box_tracker.pb.h=mediapipe/util/tracking/box_tracker.pb.h",
        "camera_motion.pb.cc=mediapipe/util/tracking/camera_motion.pb.cc",
        "camera_motion.pb.h=mediapipe/util/tracking/camera_motion.pb.h",
        "flow_packager.pb.cc=mediapipe/util/tracking/flow_packager.pb.cc",
        "flow_packager.pb.h=mediapipe/util/tracking/flow_packager.pb.h",
        "frame_selection.pb.cc=mediapipe/util/tracking/frame_selection.pb.cc",
        "frame_selection.pb.h=mediapipe/util/tracking/frame_selection.pb.h",
        "frame_selection_solution_evaluator.pb.cc=mediapipe/util/tracking/frame_selection_solution_evaluator.pb.cc",
        "frame_selection_solution_evaluator.pb.h=mediapipe/util/tracking/frame_selection_solution_evaluator.pb.h",
        "motion_analysis.pb.cc=mediapipe/util/tracking/motion_analysis.pb.cc",
        "motion_analysis.pb.h=mediapipe/util/tracking/motion_analysis.pb.h",
        "motion_estimation.pb.cc=mediapipe/util/tracking/motion_estimation.pb.cc",
        "motion_estimation.pb.h=mediapipe/util/tracking/motion_estimation.pb.h",
        "motion_models.pb.cc=mediapipe/util/tracking/motion_models.pb.cc",
        "motion_models.pb.h=mediapipe/util/tracking/motion_models.pb.h",
        "motion_saliency.pb.cc=mediapipe/util/tracking/motion_saliency.pb.cc",
        "motion_saliency.pb.h=mediapipe/util/tracking/motion_saliency.pb.h",
        "push_pull_filtering.pb.cc=mediapipe/util/tracking/push_pull_filtering.pb.cc",
        "push_pull_filtering.pb.h=mediapipe/util/tracking/push_pull_filtering.pb.h",
        "region_flow.pb.cc=mediapipe/util/tracking/region_flow.pb.cc",
        "region_flow.pb.h=mediapipe/util/tracking/region_flow.pb.h",
        "region_flow_computation.pb.cc=mediapipe/util/tracking/region_flow_computation.pb.cc",
        "region_flow_computation.pb.h=mediapipe/util/tracking/region_flow_computation.pb.h",
        "tone_estimation.pb.cc=mediapipe/util/tracking/tone_estimation.pb.cc",
        "tone_estimation.pb.h=mediapipe/util/tracking/tone_estimation.pb.h",
        "tone_models.pb.cc=mediapipe/util/tracking/tone_models.pb.cc",
        "tone_models.pb.h=mediapipe/util/tracking/tone_models.pb.h",
        "tracked_detection_manager_config.pb.cc=mediapipe/util/tracking/tracked_detection_manager_config.pb.cc",
        "tracked_detection_manager_config.pb.h=mediapipe/util/tracking/tracked_detection_manager_config.pb.h",
        "tracking.pb.cc=mediapipe/util/tracking/tracking.pb.cc",
        "tracking.pb.h=mediapipe/util/tracking/tracking.pb.h",
    ],
    outputs = [
        "box_detector.pb.cc",
        "box_detector.pb.h",
        "box_tracker.pb.cc",
        "box_tracker.pb.h",
        "camera_motion.pb.cc",
        "camera_motion.pb.h",
        "flow_packager.pb.cc",
        "flow_packager.pb.h",
        "frame_selection.pb.cc",
        "frame_selection.pb.h",
        "frame_selection_solution_evaluator.pb.cc",
        "frame_selection_solution_evaluator.pb.h",
        "motion_analysis.pb.cc",
        "motion_analysis.pb.h",
        "motion_estimation.pb.cc",
        "motion_estimation.pb.h",
        "motion_models.pb.cc",
        "motion_models.pb.h",
        "motion_saliency.pb.cc",
        "motion_saliency.pb.h",
        "push_pull_filtering.pb.cc",
        "push_pull_filtering.pb.h",
        "region_flow.pb.cc",
        "region_flow.pb.h",
        "region_flow_computation.pb.cc",
        "region_flow_computation.pb.h",
        "tone_estimation.pb.cc",
        "tone_estimation.pb.h",
        "tone_models.pb.cc",
        "tone_models.pb.h",
        "tracked_detection_manager_config.pb.cc",
        "tracked_detection_manager_config.pb.h",
        "tracking.pb.cc",
        "tracking.pb.h",
    ],
    plugins = ["@build_stack_rules_proto//plugin/builtin:cpp"],
    proto = "tracking_proto",
    visibility = ["//visibility:public"],
)

proto_compile(
    name = "tracking_go_compile",
    output_mappings = [
        "box_detector.pb.go=github.com/google/mediapipe/mediapipe/util/tracking/box_detector.pb.go",
        "box_tracker.pb.go=github.com/google/mediapipe/mediapipe/util/tracking/box_tracker.pb.go",
        "camera_motion.pb.go=github.com/google/mediapipe/mediapipe/util/tracking/camera_motion.pb.go",
        "flow_packager.pb.go=github.com/google/mediapipe/mediapipe/util/tracking/flow_packager.pb.go",
        "frame_selection.pb.go=github.com/google/mediapipe/mediapipe/util/tracking/frame_selection.pb.go",
        "frame_selection_solution_evaluator.pb.go=github.com/google/mediapipe/mediapipe/util/tracking/frame_selection_solution_evaluator.pb.go",
        "motion_analysis.pb.go=github.com/google/mediapipe/mediapipe/util/tracking/motion_analysis.pb.go",
        "motion_estimation.pb.go=github.com/google/mediapipe/mediapipe/util/tracking/motion_estimation.pb.go",
        "motion_models.pb.go=github.com/google/mediapipe/mediapipe/util/tracking/motion_models.pb.go",
        "motion_saliency.pb.go=github.com/google/mediapipe/mediapipe/util/tracking/motion_saliency.pb.go",
        "push_pull_filtering.pb.go=github.com/google/mediapipe/mediapipe/util/tracking/push_pull_filtering.pb.go",
        "region_flow.pb.go=github.com/google/mediapipe/mediapipe/util/tracking/region_flow.pb.go",
        "region_flow_computation.pb.go=github.com/google/mediapipe/mediapipe/util/tracking/region_flow_computation.pb.go",
        "tone_estimation.pb.go=github.com/google/mediapipe/mediapipe/util/tracking/tone_estimation.pb.go",
        "tone_models.pb.go=github.com/google/mediapipe/mediapipe/util/tracking/tone_models.pb.go",
        "tracked_detection_manager_config.pb.go=github.com/google/mediapipe/mediapipe/util/tracking/tracked_detection_manager_config.pb.go",
        "tracking.pb.go=github.com/google/mediapipe/mediapipe/util/tracking/tracking.pb.go",
    ],
    outputs = [
        "box_detector.pb.go",
        "box_tracker.pb.go",
        "camera_motion.pb.go",
        "flow_packager.pb.go",
        "frame_selection.pb.go",
        "frame_selection_solution_evaluator.pb.go",
        "motion_analysis.pb.go",
        "motion_estimation.pb.go",
        "motion_models.pb.go",
        "motion_saliency.pb.go",
        "push_pull_filtering.pb.go",
        "region_flow.pb.go",
        "region_flow_computation.pb.go",
        "tone_estimation.pb.go",
        "tone_models.pb.go",
        "tracked_detection_manager_config.pb.go",
        "tracking.pb.go",
    ],
    plugins = ["@build_stack_rules_proto//plugin/gogo/protobuf:protoc-gen-gogoslick"],
    proto = "tracking_proto",
    visibility = ["//visibility:public"],
)

proto_go_library(
    name = "tracking_go_proto",
    srcs = [
        "box_detector.pb.go",
        "box_tracker.pb.go",
        "camera_motion.pb.go",
        "flow_packager.pb.go",
        "frame_selection.pb.go",
        "frame_selection_solution_evaluator.pb.go",
        "motion_analysis.pb.go",
        "motion_estimation.pb.go",
        "motion_models.pb.go",
        "motion_saliency.pb.go",
        "push_pull_filtering.pb.go",
        "region_flow.pb.go",
        "region_flow_computation.pb.go",
        "tone_estimation.pb.go",
        "tone_models.pb.go",
        "tracked_detection_manager_config.pb.go",
        "tracking.pb.go",
    ],
    importpath = "github.com/google/mediapipe/mediapipe/util/tracking",
    visibility = ["//visibility:public"],
    deps = [
        "@com_github_gogo_protobuf//proto",
        "@com_github_gogo_protobuf//protoc-gen-gogo/descriptor",
        "@com_github_gogo_protobuf//sortkeys",
        "@com_github_gogo_protobuf//types",
        "@org_golang_google_grpc//:go_default_library",
        "@org_golang_google_grpc//codes",
        "@org_golang_google_grpc//status",
    ],
)

proto_compile(
    name = "tracking_py_compile",
    output_mappings = [
        "box_detector_pb2.py=/mediapipe/util/tracking/box_detector_pb2.py",
        "box_tracker_pb2.py=/mediapipe/util/tracking/box_tracker_pb2.py",
        "camera_motion_pb2.py=/mediapipe/util/tracking/camera_motion_pb2.py",
        "flow_packager_pb2.py=/mediapipe/util/tracking/flow_packager_pb2.py",
        "frame_selection_pb2.py=/mediapipe/util/tracking/frame_selection_pb2.py",
        "frame_selection_solution_evaluator_pb2.py=/mediapipe/util/tracking/frame_selection_solution_evaluator_pb2.py",
        "motion_analysis_pb2.py=/mediapipe/util/tracking/motion_analysis_pb2.py",
        "motion_estimation_pb2.py=/mediapipe/util/tracking/motion_estimation_pb2.py",
        "motion_models_pb2.py=/mediapipe/util/tracking/motion_models_pb2.py",
        "motion_saliency_pb2.py=/mediapipe/util/tracking/motion_saliency_pb2.py",
        "push_pull_filtering_pb2.py=/mediapipe/util/tracking/push_pull_filtering_pb2.py",
        "region_flow_computation_pb2.py=/mediapipe/util/tracking/region_flow_computation_pb2.py",
        "region_flow_pb2.py=/mediapipe/util/tracking/region_flow_pb2.py",
        "tone_estimation_pb2.py=/mediapipe/util/tracking/tone_estimation_pb2.py",
        "tone_models_pb2.py=/mediapipe/util/tracking/tone_models_pb2.py",
        "tracked_detection_manager_config_pb2.py=/mediapipe/util/tracking/tracked_detection_manager_config_pb2.py",
        "tracking_pb2.py=/mediapipe/util/tracking/tracking_pb2.py",
    ],
    outputs = [
        "box_detector_pb2.py",
        "box_tracker_pb2.py",
        "camera_motion_pb2.py",
        "flow_packager_pb2.py",
        "frame_selection_pb2.py",
        "frame_selection_solution_evaluator_pb2.py",
        "motion_analysis_pb2.py",
        "motion_estimation_pb2.py",
        "motion_models_pb2.py",
        "motion_saliency_pb2.py",
        "push_pull_filtering_pb2.py",
        "region_flow_computation_pb2.py",
        "region_flow_pb2.py",
        "tone_estimation_pb2.py",
        "tone_models_pb2.py",
        "tracked_detection_manager_config_pb2.py",
        "tracking_pb2.py",
    ],
    plugins = ["@build_stack_rules_proto//plugin/builtin:python"],
    proto = "tracking_proto",
    visibility = ["//visibility:public"],
)

proto_py_library(
    name = "tracking_py_library",
    srcs = [
        "box_detector_pb2.py",
        "box_tracker_pb2.py",
        "camera_motion_pb2.py",
        "flow_packager_pb2.py",
        "frame_selection_pb2.py",
        "frame_selection_solution_evaluator_pb2.py",
        "motion_analysis_pb2.py",
        "motion_estimation_pb2.py",
        "motion_models_pb2.py",
        "motion_saliency_pb2.py",
        "push_pull_filtering_pb2.py",
        "region_flow_computation_pb2.py",
        "region_flow_pb2.py",
        "tone_estimation_pb2.py",
        "tone_models_pb2.py",
        "tracked_detection_manager_config_pb2.py",
        "tracking_pb2.py",
    ],
    imports = ["../../.."],
    visibility = ["//visibility:public"],
    deps = ["@pip//protobuf"],
)
