// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: mediapipe/util/tracking/push_pull_filtering.proto

package tracking

import (
	encoding_binary "encoding/binary"
	fmt "fmt"
	github_com_gogo_protobuf_proto "github.com/gogo/protobuf/proto"
	proto "github.com/gogo/protobuf/proto"
	io "io"
	math "math"
	math_bits "math/bits"
	reflect "reflect"
	sort "sort"
	strconv "strconv"
	strings "strings"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type PushPullOptions struct {
	BilateralSigma               *float32 `protobuf:"fixed32,1,opt,name=bilateral_sigma,json=bilateralSigma,def=20" json:"bilateral_sigma,omitempty"`
	PullPropagationScale         *float32 `protobuf:"fixed32,3,opt,name=pull_propagation_scale,json=pullPropagationScale,def=8" json:"pull_propagation_scale,omitempty"`
	PushPropagationScale         *float32 `protobuf:"fixed32,4,opt,name=push_propagation_scale,json=pushPropagationScale,def=8" json:"push_propagation_scale,omitempty"`
	PullBilateralScale           *float32 `protobuf:"fixed32,5,opt,name=pull_bilateral_scale,json=pullBilateralScale,def=0.7" json:"pull_bilateral_scale,omitempty"`
	PushBilateralScale           *float32 `protobuf:"fixed32,6,opt,name=push_bilateral_scale,json=pushBilateralScale,def=0.9" json:"push_bilateral_scale,omitempty"`
	proto.XXX_InternalExtensions `json:"-"`
}

func (m *PushPullOptions) Reset()      { *m = PushPullOptions{} }
func (*PushPullOptions) ProtoMessage() {}
func (*PushPullOptions) Descriptor() ([]byte, []int) {
	return fileDescriptor_aed7fef6ce3f454e, []int{0}
}

var extRange_PushPullOptions = []proto.ExtensionRange{
	{Start: 2, End: 2},
}

func (*PushPullOptions) ExtensionRangeArray() []proto.ExtensionRange {
	return extRange_PushPullOptions
}

func (m *PushPullOptions) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *PushPullOptions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_PushPullOptions.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *PushPullOptions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PushPullOptions.Merge(m, src)
}
func (m *PushPullOptions) XXX_Size() int {
	return m.Size()
}
func (m *PushPullOptions) XXX_DiscardUnknown() {
	xxx_messageInfo_PushPullOptions.DiscardUnknown(m)
}

var xxx_messageInfo_PushPullOptions proto.InternalMessageInfo

const Default_PushPullOptions_BilateralSigma float32 = 20
const Default_PushPullOptions_PullPropagationScale float32 = 8
const Default_PushPullOptions_PushPropagationScale float32 = 8
const Default_PushPullOptions_PullBilateralScale float32 = 0.7
const Default_PushPullOptions_PushBilateralScale float32 = 0.9

func (m *PushPullOptions) GetBilateralSigma() float32 {
	if m != nil && m.BilateralSigma != nil {
		return *m.BilateralSigma
	}
	return Default_PushPullOptions_BilateralSigma
}

func (m *PushPullOptions) GetPullPropagationScale() float32 {
	if m != nil && m.PullPropagationScale != nil {
		return *m.PullPropagationScale
	}
	return Default_PushPullOptions_PullPropagationScale
}

func (m *PushPullOptions) GetPushPropagationScale() float32 {
	if m != nil && m.PushPropagationScale != nil {
		return *m.PushPropagationScale
	}
	return Default_PushPullOptions_PushPropagationScale
}

func (m *PushPullOptions) GetPullBilateralScale() float32 {
	if m != nil && m.PullBilateralScale != nil {
		return *m.PullBilateralScale
	}
	return Default_PushPullOptions_PullBilateralScale
}

func (m *PushPullOptions) GetPushBilateralScale() float32 {
	if m != nil && m.PushBilateralScale != nil {
		return *m.PushBilateralScale
	}
	return Default_PushPullOptions_PushBilateralScale
}

func init() {
	proto.RegisterType((*PushPullOptions)(nil), "mediapipe.PushPullOptions")
}

func init() {
	proto.RegisterFile("mediapipe/util/tracking/push_pull_filtering.proto", fileDescriptor_aed7fef6ce3f454e)
}

var fileDescriptor_aed7fef6ce3f454e = []byte{
	// 306 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0xd1, 0x31, 0x4e, 0xf3, 0x30,
	0x14, 0x07, 0x70, 0x3b, 0xed, 0xf7, 0x09, 0x32, 0x50, 0x14, 0x21, 0xd4, 0xe9, 0x09, 0x31, 0x21,
	0x90, 0x9a, 0x02, 0x42, 0x05, 0xc6, 0x5e, 0x80, 0xaa, 0xdd, 0x58, 0x22, 0xb7, 0x18, 0xdb, 0xc2,
	0xad, 0xad, 0xd8, 0xde, 0x39, 0x02, 0x87, 0x60, 0xe0, 0x28, 0x8c, 0x1d, 0x3b, 0x52, 0x67, 0x61,
	0xec, 0x11, 0x90, 0x83, 0x48, 0x8a, 0x22, 0xe6, 0xff, 0xfb, 0xbd, 0xf7, 0x97, 0x5e, 0x7c, 0x3e,
	0xa7, 0x0f, 0x82, 0x68, 0xa1, 0x69, 0xea, 0xac, 0x90, 0xa9, 0xcd, 0xc9, 0xec, 0x49, 0x2c, 0x58,
	0xaa, 0x9d, 0xe1, 0x99, 0x76, 0x52, 0x66, 0x8f, 0x42, 0x5a, 0x9a, 0x8b, 0x05, 0xeb, 0xe9, 0x5c,
	0x59, 0x95, 0xec, 0x56, 0xe4, 0xf8, 0x35, 0x8a, 0x3b, 0x23, 0x67, 0xf8, 0xc8, 0x49, 0x79, 0xa7,
	0xad, 0x50, 0x0b, 0x93, 0x9c, 0xc5, 0x9d, 0xa9, 0x90, 0xc4, 0xd2, 0x9c, 0xc8, 0xcc, 0x08, 0x36,
	0x27, 0x5d, 0x7c, 0x84, 0x4f, 0xa2, 0xdb, 0xe8, 0xa2, 0x3f, 0xde, 0xab, 0xa2, 0x49, 0x48, 0x92,
	0x41, 0x7c, 0x58, 0xde, 0xd0, 0xb9, 0xd2, 0x84, 0x91, 0xb0, 0x21, 0x33, 0x33, 0x22, 0x69, 0xb7,
	0x55, 0x1a, 0x7c, 0x3d, 0x3e, 0x08, 0x03, 0xa3, 0x3a, 0x9f, 0x84, 0xf8, 0x1b, 0x86, 0x86, 0x0d,
	0xd8, 0xde, 0x82, 0x86, 0x37, 0xe0, 0x55, 0x5c, 0x2e, 0xcc, 0xb6, 0x3a, 0x96, 0xec, 0x5f, 0xc9,
	0x5a, 0xfd, 0xde, 0x60, 0x9c, 0x84, 0x81, 0x61, 0x55, 0xb4, 0x66, 0x86, 0x37, 0xd8, 0xff, 0x1f,
	0x76, 0x13, 0x98, 0xe1, 0xbf, 0xd9, 0x69, 0x7b, 0x27, 0xda, 0x6f, 0x0d, 0xc5, 0x72, 0x0d, 0x68,
	0xb5, 0x06, 0xb4, 0x59, 0x03, 0x7e, 0xf6, 0x80, 0xdf, 0x3c, 0xe0, 0x77, 0x0f, 0x78, 0xe9, 0x01,
	0x7f, 0x78, 0xc0, 0x9f, 0x1e, 0xd0, 0xc6, 0x03, 0x7e, 0x29, 0x00, 0x2d, 0x0b, 0x40, 0xab, 0x02,
	0xd0, 0xfd, 0x25, 0x13, 0x96, 0xbb, 0x69, 0x6f, 0xa6, 0xe6, 0x29, 0x53, 0x8a, 0x49, 0x9a, 0xd6,
	0xcf, 0xfa, 0xe3, 0x6d, 0x5f, 0x01, 0x00, 0x00, 0xff, 0xff, 0x24, 0x04, 0x05, 0xfa, 0xd0, 0x01,
	0x00, 0x00,
}

func (this *PushPullOptions) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*PushPullOptions)
	if !ok {
		that2, ok := that.(PushPullOptions)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.BilateralSigma != nil && that1.BilateralSigma != nil {
		if *this.BilateralSigma != *that1.BilateralSigma {
			return false
		}
	} else if this.BilateralSigma != nil {
		return false
	} else if that1.BilateralSigma != nil {
		return false
	}
	if this.PullPropagationScale != nil && that1.PullPropagationScale != nil {
		if *this.PullPropagationScale != *that1.PullPropagationScale {
			return false
		}
	} else if this.PullPropagationScale != nil {
		return false
	} else if that1.PullPropagationScale != nil {
		return false
	}
	if this.PushPropagationScale != nil && that1.PushPropagationScale != nil {
		if *this.PushPropagationScale != *that1.PushPropagationScale {
			return false
		}
	} else if this.PushPropagationScale != nil {
		return false
	} else if that1.PushPropagationScale != nil {
		return false
	}
	if this.PullBilateralScale != nil && that1.PullBilateralScale != nil {
		if *this.PullBilateralScale != *that1.PullBilateralScale {
			return false
		}
	} else if this.PullBilateralScale != nil {
		return false
	} else if that1.PullBilateralScale != nil {
		return false
	}
	if this.PushBilateralScale != nil && that1.PushBilateralScale != nil {
		if *this.PushBilateralScale != *that1.PushBilateralScale {
			return false
		}
	} else if this.PushBilateralScale != nil {
		return false
	} else if that1.PushBilateralScale != nil {
		return false
	}
	thismap := github_com_gogo_protobuf_proto.GetUnsafeExtensionsMap(this)
	thatmap := github_com_gogo_protobuf_proto.GetUnsafeExtensionsMap(that1)
	for k, v := range thismap {
		if v2, ok := thatmap[k]; ok {
			if !v.Equal(&v2) {
				return false
			}
		} else {
			return false
		}
	}
	for k, _ := range thatmap {
		if _, ok := thismap[k]; !ok {
			return false
		}
	}
	return true
}
func (this *PushPullOptions) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 9)
	s = append(s, "&tracking.PushPullOptions{")
	if this.BilateralSigma != nil {
		s = append(s, "BilateralSigma: "+valueToGoStringPushPullFiltering(this.BilateralSigma, "float32")+",\n")
	}
	if this.PullPropagationScale != nil {
		s = append(s, "PullPropagationScale: "+valueToGoStringPushPullFiltering(this.PullPropagationScale, "float32")+",\n")
	}
	if this.PushPropagationScale != nil {
		s = append(s, "PushPropagationScale: "+valueToGoStringPushPullFiltering(this.PushPropagationScale, "float32")+",\n")
	}
	if this.PullBilateralScale != nil {
		s = append(s, "PullBilateralScale: "+valueToGoStringPushPullFiltering(this.PullBilateralScale, "float32")+",\n")
	}
	if this.PushBilateralScale != nil {
		s = append(s, "PushBilateralScale: "+valueToGoStringPushPullFiltering(this.PushBilateralScale, "float32")+",\n")
	}
	s = append(s, "XXX_InternalExtensions: "+extensionToGoStringPushPullFiltering(this)+",\n")
	s = append(s, "}")
	return strings.Join(s, "")
}
func valueToGoStringPushPullFiltering(v interface{}, typ string) string {
	rv := reflect.ValueOf(v)
	if rv.IsNil() {
		return "nil"
	}
	pv := reflect.Indirect(rv).Interface()
	return fmt.Sprintf("func(v %v) *%v { return &v } ( %#v )", typ, typ, pv)
}
func extensionToGoStringPushPullFiltering(m github_com_gogo_protobuf_proto.Message) string {
	e := github_com_gogo_protobuf_proto.GetUnsafeExtensionsMap(m)
	if e == nil {
		return "nil"
	}
	s := "proto.NewUnsafeXXX_InternalExtensions(map[int32]proto.Extension{"
	keys := make([]int, 0, len(e))
	for k := range e {
		keys = append(keys, int(k))
	}
	sort.Ints(keys)
	ss := []string{}
	for _, k := range keys {
		ss = append(ss, strconv.Itoa(k)+": "+e[int32(k)].GoString())
	}
	s += strings.Join(ss, ",") + "})"
	return s
}
func (m *PushPullOptions) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *PushPullOptions) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *PushPullOptions) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if n, err := github_com_gogo_protobuf_proto.EncodeInternalExtensionBackwards(m, dAtA[:i]); err != nil {
		return 0, err
	} else {
		i -= n
	}
	if m.PushBilateralScale != nil {
		i -= 4
		encoding_binary.LittleEndian.PutUint32(dAtA[i:], uint32(math.Float32bits(float32(*m.PushBilateralScale))))
		i--
		dAtA[i] = 0x35
	}
	if m.PullBilateralScale != nil {
		i -= 4
		encoding_binary.LittleEndian.PutUint32(dAtA[i:], uint32(math.Float32bits(float32(*m.PullBilateralScale))))
		i--
		dAtA[i] = 0x2d
	}
	if m.PushPropagationScale != nil {
		i -= 4
		encoding_binary.LittleEndian.PutUint32(dAtA[i:], uint32(math.Float32bits(float32(*m.PushPropagationScale))))
		i--
		dAtA[i] = 0x25
	}
	if m.PullPropagationScale != nil {
		i -= 4
		encoding_binary.LittleEndian.PutUint32(dAtA[i:], uint32(math.Float32bits(float32(*m.PullPropagationScale))))
		i--
		dAtA[i] = 0x1d
	}
	if m.BilateralSigma != nil {
		i -= 4
		encoding_binary.LittleEndian.PutUint32(dAtA[i:], uint32(math.Float32bits(float32(*m.BilateralSigma))))
		i--
		dAtA[i] = 0xd
	}
	return len(dAtA) - i, nil
}

func encodeVarintPushPullFiltering(dAtA []byte, offset int, v uint64) int {
	offset -= sovPushPullFiltering(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *PushPullOptions) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.BilateralSigma != nil {
		n += 5
	}
	if m.PullPropagationScale != nil {
		n += 5
	}
	if m.PushPropagationScale != nil {
		n += 5
	}
	if m.PullBilateralScale != nil {
		n += 5
	}
	if m.PushBilateralScale != nil {
		n += 5
	}
	n += github_com_gogo_protobuf_proto.SizeOfInternalExtension(m)
	return n
}

func sovPushPullFiltering(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozPushPullFiltering(x uint64) (n int) {
	return sovPushPullFiltering(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (this *PushPullOptions) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&PushPullOptions{`,
		`BilateralSigma:` + valueToStringPushPullFiltering(this.BilateralSigma) + `,`,
		`PullPropagationScale:` + valueToStringPushPullFiltering(this.PullPropagationScale) + `,`,
		`PushPropagationScale:` + valueToStringPushPullFiltering(this.PushPropagationScale) + `,`,
		`PullBilateralScale:` + valueToStringPushPullFiltering(this.PullBilateralScale) + `,`,
		`PushBilateralScale:` + valueToStringPushPullFiltering(this.PushBilateralScale) + `,`,
		`XXX_InternalExtensions:` + github_com_gogo_protobuf_proto.StringFromInternalExtension(this) + `,`,
		`}`,
	}, "")
	return s
}
func valueToStringPushPullFiltering(v interface{}) string {
	rv := reflect.ValueOf(v)
	if rv.IsNil() {
		return "nil"
	}
	pv := reflect.Indirect(rv).Interface()
	return fmt.Sprintf("*%v", pv)
}
func (m *PushPullOptions) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowPushPullFiltering
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: PushPullOptions: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: PushPullOptions: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 5 {
				return fmt.Errorf("proto: wrong wireType = %d for field BilateralSigma", wireType)
			}
			var v uint32
			if (iNdEx + 4) > l {
				return io.ErrUnexpectedEOF
			}
			v = uint32(encoding_binary.LittleEndian.Uint32(dAtA[iNdEx:]))
			iNdEx += 4
			v2 := float32(math.Float32frombits(v))
			m.BilateralSigma = &v2
		case 3:
			if wireType != 5 {
				return fmt.Errorf("proto: wrong wireType = %d for field PullPropagationScale", wireType)
			}
			var v uint32
			if (iNdEx + 4) > l {
				return io.ErrUnexpectedEOF
			}
			v = uint32(encoding_binary.LittleEndian.Uint32(dAtA[iNdEx:]))
			iNdEx += 4
			v2 := float32(math.Float32frombits(v))
			m.PullPropagationScale = &v2
		case 4:
			if wireType != 5 {
				return fmt.Errorf("proto: wrong wireType = %d for field PushPropagationScale", wireType)
			}
			var v uint32
			if (iNdEx + 4) > l {
				return io.ErrUnexpectedEOF
			}
			v = uint32(encoding_binary.LittleEndian.Uint32(dAtA[iNdEx:]))
			iNdEx += 4
			v2 := float32(math.Float32frombits(v))
			m.PushPropagationScale = &v2
		case 5:
			if wireType != 5 {
				return fmt.Errorf("proto: wrong wireType = %d for field PullBilateralScale", wireType)
			}
			var v uint32
			if (iNdEx + 4) > l {
				return io.ErrUnexpectedEOF
			}
			v = uint32(encoding_binary.LittleEndian.Uint32(dAtA[iNdEx:]))
			iNdEx += 4
			v2 := float32(math.Float32frombits(v))
			m.PullBilateralScale = &v2
		case 6:
			if wireType != 5 {
				return fmt.Errorf("proto: wrong wireType = %d for field PushBilateralScale", wireType)
			}
			var v uint32
			if (iNdEx + 4) > l {
				return io.ErrUnexpectedEOF
			}
			v = uint32(encoding_binary.LittleEndian.Uint32(dAtA[iNdEx:]))
			iNdEx += 4
			v2 := float32(math.Float32frombits(v))
			m.PushBilateralScale = &v2
		default:
			if (fieldNum >= 2) && (fieldNum < 3) {
				var sizeOfWire int
				for {
					sizeOfWire++
					wire >>= 7
					if wire == 0 {
						break
					}
				}
				iNdEx -= sizeOfWire
				skippy, err := skipPushPullFiltering(dAtA[iNdEx:])
				if err != nil {
					return err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return ErrInvalidLengthPushPullFiltering
				}
				if (iNdEx + skippy) > l {
					return io.ErrUnexpectedEOF
				}
				github_com_gogo_protobuf_proto.AppendExtension(m, int32(fieldNum), dAtA[iNdEx:iNdEx+skippy])
				iNdEx += skippy
			} else {
				iNdEx = preIndex
				skippy, err := skipPushPullFiltering(dAtA[iNdEx:])
				if err != nil {
					return err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return ErrInvalidLengthPushPullFiltering
				}
				if (iNdEx + skippy) > l {
					return io.ErrUnexpectedEOF
				}
				iNdEx += skippy
			}
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipPushPullFiltering(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowPushPullFiltering
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowPushPullFiltering
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowPushPullFiltering
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthPushPullFiltering
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupPushPullFiltering
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthPushPullFiltering
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthPushPullFiltering        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowPushPullFiltering          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupPushPullFiltering = fmt.Errorf("proto: unexpected end of group")
)
