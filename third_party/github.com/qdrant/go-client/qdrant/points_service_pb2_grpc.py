# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from qdrant import points_pb2 as qdrant_dot_points__pb2


class PointsStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Upsert = channel.unary_unary(
                '/qdrant.Points/Upsert',
                request_serializer=qdrant_dot_points__pb2.UpsertPoints.SerializeToString,
                response_deserializer=qdrant_dot_points__pb2.PointsOperationResponse.FromString,
                )
        self.Delete = channel.unary_unary(
                '/qdrant.Points/Delete',
                request_serializer=qdrant_dot_points__pb2.DeletePoints.SerializeToString,
                response_deserializer=qdrant_dot_points__pb2.PointsOperationResponse.FromString,
                )
        self.Get = channel.unary_unary(
                '/qdrant.Points/Get',
                request_serializer=qdrant_dot_points__pb2.GetPoints.SerializeToString,
                response_deserializer=qdrant_dot_points__pb2.GetResponse.FromString,
                )
        self.UpdateVectors = channel.unary_unary(
                '/qdrant.Points/UpdateVectors',
                request_serializer=qdrant_dot_points__pb2.UpdatePointVectors.SerializeToString,
                response_deserializer=qdrant_dot_points__pb2.PointsOperationResponse.FromString,
                )
        self.DeleteVectors = channel.unary_unary(
                '/qdrant.Points/DeleteVectors',
                request_serializer=qdrant_dot_points__pb2.DeletePointVectors.SerializeToString,
                response_deserializer=qdrant_dot_points__pb2.PointsOperationResponse.FromString,
                )
        self.SetPayload = channel.unary_unary(
                '/qdrant.Points/SetPayload',
                request_serializer=qdrant_dot_points__pb2.SetPayloadPoints.SerializeToString,
                response_deserializer=qdrant_dot_points__pb2.PointsOperationResponse.FromString,
                )
        self.OverwritePayload = channel.unary_unary(
                '/qdrant.Points/OverwritePayload',
                request_serializer=qdrant_dot_points__pb2.SetPayloadPoints.SerializeToString,
                response_deserializer=qdrant_dot_points__pb2.PointsOperationResponse.FromString,
                )
        self.DeletePayload = channel.unary_unary(
                '/qdrant.Points/DeletePayload',
                request_serializer=qdrant_dot_points__pb2.DeletePayloadPoints.SerializeToString,
                response_deserializer=qdrant_dot_points__pb2.PointsOperationResponse.FromString,
                )
        self.ClearPayload = channel.unary_unary(
                '/qdrant.Points/ClearPayload',
                request_serializer=qdrant_dot_points__pb2.ClearPayloadPoints.SerializeToString,
                response_deserializer=qdrant_dot_points__pb2.PointsOperationResponse.FromString,
                )
        self.CreateFieldIndex = channel.unary_unary(
                '/qdrant.Points/CreateFieldIndex',
                request_serializer=qdrant_dot_points__pb2.CreateFieldIndexCollection.SerializeToString,
                response_deserializer=qdrant_dot_points__pb2.PointsOperationResponse.FromString,
                )
        self.DeleteFieldIndex = channel.unary_unary(
                '/qdrant.Points/DeleteFieldIndex',
                request_serializer=qdrant_dot_points__pb2.DeleteFieldIndexCollection.SerializeToString,
                response_deserializer=qdrant_dot_points__pb2.PointsOperationResponse.FromString,
                )
        self.Search = channel.unary_unary(
                '/qdrant.Points/Search',
                request_serializer=qdrant_dot_points__pb2.SearchPoints.SerializeToString,
                response_deserializer=qdrant_dot_points__pb2.SearchResponse.FromString,
                )
        self.SearchBatch = channel.unary_unary(
                '/qdrant.Points/SearchBatch',
                request_serializer=qdrant_dot_points__pb2.SearchBatchPoints.SerializeToString,
                response_deserializer=qdrant_dot_points__pb2.SearchBatchResponse.FromString,
                )
        self.SearchGroups = channel.unary_unary(
                '/qdrant.Points/SearchGroups',
                request_serializer=qdrant_dot_points__pb2.SearchPointGroups.SerializeToString,
                response_deserializer=qdrant_dot_points__pb2.SearchGroupsResponse.FromString,
                )
        self.Scroll = channel.unary_unary(
                '/qdrant.Points/Scroll',
                request_serializer=qdrant_dot_points__pb2.ScrollPoints.SerializeToString,
                response_deserializer=qdrant_dot_points__pb2.ScrollResponse.FromString,
                )
        self.Recommend = channel.unary_unary(
                '/qdrant.Points/Recommend',
                request_serializer=qdrant_dot_points__pb2.RecommendPoints.SerializeToString,
                response_deserializer=qdrant_dot_points__pb2.RecommendResponse.FromString,
                )
        self.RecommendBatch = channel.unary_unary(
                '/qdrant.Points/RecommendBatch',
                request_serializer=qdrant_dot_points__pb2.RecommendBatchPoints.SerializeToString,
                response_deserializer=qdrant_dot_points__pb2.RecommendBatchResponse.FromString,
                )
        self.RecommendGroups = channel.unary_unary(
                '/qdrant.Points/RecommendGroups',
                request_serializer=qdrant_dot_points__pb2.RecommendPointGroups.SerializeToString,
                response_deserializer=qdrant_dot_points__pb2.RecommendGroupsResponse.FromString,
                )
        self.Discover = channel.unary_unary(
                '/qdrant.Points/Discover',
                request_serializer=qdrant_dot_points__pb2.DiscoverPoints.SerializeToString,
                response_deserializer=qdrant_dot_points__pb2.DiscoverResponse.FromString,
                )
        self.DiscoverBatch = channel.unary_unary(
                '/qdrant.Points/DiscoverBatch',
                request_serializer=qdrant_dot_points__pb2.DiscoverBatchPoints.SerializeToString,
                response_deserializer=qdrant_dot_points__pb2.DiscoverBatchResponse.FromString,
                )
        self.Count = channel.unary_unary(
                '/qdrant.Points/Count',
                request_serializer=qdrant_dot_points__pb2.CountPoints.SerializeToString,
                response_deserializer=qdrant_dot_points__pb2.CountResponse.FromString,
                )
        self.UpdateBatch = channel.unary_unary(
                '/qdrant.Points/UpdateBatch',
                request_serializer=qdrant_dot_points__pb2.UpdateBatchPoints.SerializeToString,
                response_deserializer=qdrant_dot_points__pb2.UpdateBatchResponse.FromString,
                )
        self.Query = channel.unary_unary(
                '/qdrant.Points/Query',
                request_serializer=qdrant_dot_points__pb2.QueryPoints.SerializeToString,
                response_deserializer=qdrant_dot_points__pb2.QueryResponse.FromString,
                )
        self.QueryBatch = channel.unary_unary(
                '/qdrant.Points/QueryBatch',
                request_serializer=qdrant_dot_points__pb2.QueryBatchPoints.SerializeToString,
                response_deserializer=qdrant_dot_points__pb2.QueryBatchResponse.FromString,
                )


class PointsServicer(object):
    """Missing associated documentation comment in .proto file."""

    def Upsert(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Delete(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Get(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateVectors(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteVectors(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetPayload(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def OverwritePayload(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeletePayload(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ClearPayload(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateFieldIndex(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteFieldIndex(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Search(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SearchBatch(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SearchGroups(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Scroll(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Recommend(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RecommendBatch(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RecommendGroups(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Discover(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DiscoverBatch(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Count(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateBatch(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Query(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def QueryBatch(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_PointsServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Upsert': grpc.unary_unary_rpc_method_handler(
                    servicer.Upsert,
                    request_deserializer=qdrant_dot_points__pb2.UpsertPoints.FromString,
                    response_serializer=qdrant_dot_points__pb2.PointsOperationResponse.SerializeToString,
            ),
            'Delete': grpc.unary_unary_rpc_method_handler(
                    servicer.Delete,
                    request_deserializer=qdrant_dot_points__pb2.DeletePoints.FromString,
                    response_serializer=qdrant_dot_points__pb2.PointsOperationResponse.SerializeToString,
            ),
            'Get': grpc.unary_unary_rpc_method_handler(
                    servicer.Get,
                    request_deserializer=qdrant_dot_points__pb2.GetPoints.FromString,
                    response_serializer=qdrant_dot_points__pb2.GetResponse.SerializeToString,
            ),
            'UpdateVectors': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateVectors,
                    request_deserializer=qdrant_dot_points__pb2.UpdatePointVectors.FromString,
                    response_serializer=qdrant_dot_points__pb2.PointsOperationResponse.SerializeToString,
            ),
            'DeleteVectors': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteVectors,
                    request_deserializer=qdrant_dot_points__pb2.DeletePointVectors.FromString,
                    response_serializer=qdrant_dot_points__pb2.PointsOperationResponse.SerializeToString,
            ),
            'SetPayload': grpc.unary_unary_rpc_method_handler(
                    servicer.SetPayload,
                    request_deserializer=qdrant_dot_points__pb2.SetPayloadPoints.FromString,
                    response_serializer=qdrant_dot_points__pb2.PointsOperationResponse.SerializeToString,
            ),
            'OverwritePayload': grpc.unary_unary_rpc_method_handler(
                    servicer.OverwritePayload,
                    request_deserializer=qdrant_dot_points__pb2.SetPayloadPoints.FromString,
                    response_serializer=qdrant_dot_points__pb2.PointsOperationResponse.SerializeToString,
            ),
            'DeletePayload': grpc.unary_unary_rpc_method_handler(
                    servicer.DeletePayload,
                    request_deserializer=qdrant_dot_points__pb2.DeletePayloadPoints.FromString,
                    response_serializer=qdrant_dot_points__pb2.PointsOperationResponse.SerializeToString,
            ),
            'ClearPayload': grpc.unary_unary_rpc_method_handler(
                    servicer.ClearPayload,
                    request_deserializer=qdrant_dot_points__pb2.ClearPayloadPoints.FromString,
                    response_serializer=qdrant_dot_points__pb2.PointsOperationResponse.SerializeToString,
            ),
            'CreateFieldIndex': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateFieldIndex,
                    request_deserializer=qdrant_dot_points__pb2.CreateFieldIndexCollection.FromString,
                    response_serializer=qdrant_dot_points__pb2.PointsOperationResponse.SerializeToString,
            ),
            'DeleteFieldIndex': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteFieldIndex,
                    request_deserializer=qdrant_dot_points__pb2.DeleteFieldIndexCollection.FromString,
                    response_serializer=qdrant_dot_points__pb2.PointsOperationResponse.SerializeToString,
            ),
            'Search': grpc.unary_unary_rpc_method_handler(
                    servicer.Search,
                    request_deserializer=qdrant_dot_points__pb2.SearchPoints.FromString,
                    response_serializer=qdrant_dot_points__pb2.SearchResponse.SerializeToString,
            ),
            'SearchBatch': grpc.unary_unary_rpc_method_handler(
                    servicer.SearchBatch,
                    request_deserializer=qdrant_dot_points__pb2.SearchBatchPoints.FromString,
                    response_serializer=qdrant_dot_points__pb2.SearchBatchResponse.SerializeToString,
            ),
            'SearchGroups': grpc.unary_unary_rpc_method_handler(
                    servicer.SearchGroups,
                    request_deserializer=qdrant_dot_points__pb2.SearchPointGroups.FromString,
                    response_serializer=qdrant_dot_points__pb2.SearchGroupsResponse.SerializeToString,
            ),
            'Scroll': grpc.unary_unary_rpc_method_handler(
                    servicer.Scroll,
                    request_deserializer=qdrant_dot_points__pb2.ScrollPoints.FromString,
                    response_serializer=qdrant_dot_points__pb2.ScrollResponse.SerializeToString,
            ),
            'Recommend': grpc.unary_unary_rpc_method_handler(
                    servicer.Recommend,
                    request_deserializer=qdrant_dot_points__pb2.RecommendPoints.FromString,
                    response_serializer=qdrant_dot_points__pb2.RecommendResponse.SerializeToString,
            ),
            'RecommendBatch': grpc.unary_unary_rpc_method_handler(
                    servicer.RecommendBatch,
                    request_deserializer=qdrant_dot_points__pb2.RecommendBatchPoints.FromString,
                    response_serializer=qdrant_dot_points__pb2.RecommendBatchResponse.SerializeToString,
            ),
            'RecommendGroups': grpc.unary_unary_rpc_method_handler(
                    servicer.RecommendGroups,
                    request_deserializer=qdrant_dot_points__pb2.RecommendPointGroups.FromString,
                    response_serializer=qdrant_dot_points__pb2.RecommendGroupsResponse.SerializeToString,
            ),
            'Discover': grpc.unary_unary_rpc_method_handler(
                    servicer.Discover,
                    request_deserializer=qdrant_dot_points__pb2.DiscoverPoints.FromString,
                    response_serializer=qdrant_dot_points__pb2.DiscoverResponse.SerializeToString,
            ),
            'DiscoverBatch': grpc.unary_unary_rpc_method_handler(
                    servicer.DiscoverBatch,
                    request_deserializer=qdrant_dot_points__pb2.DiscoverBatchPoints.FromString,
                    response_serializer=qdrant_dot_points__pb2.DiscoverBatchResponse.SerializeToString,
            ),
            'Count': grpc.unary_unary_rpc_method_handler(
                    servicer.Count,
                    request_deserializer=qdrant_dot_points__pb2.CountPoints.FromString,
                    response_serializer=qdrant_dot_points__pb2.CountResponse.SerializeToString,
            ),
            'UpdateBatch': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateBatch,
                    request_deserializer=qdrant_dot_points__pb2.UpdateBatchPoints.FromString,
                    response_serializer=qdrant_dot_points__pb2.UpdateBatchResponse.SerializeToString,
            ),
            'Query': grpc.unary_unary_rpc_method_handler(
                    servicer.Query,
                    request_deserializer=qdrant_dot_points__pb2.QueryPoints.FromString,
                    response_serializer=qdrant_dot_points__pb2.QueryResponse.SerializeToString,
            ),
            'QueryBatch': grpc.unary_unary_rpc_method_handler(
                    servicer.QueryBatch,
                    request_deserializer=qdrant_dot_points__pb2.QueryBatchPoints.FromString,
                    response_serializer=qdrant_dot_points__pb2.QueryBatchResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'qdrant.Points', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Points(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def Upsert(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/qdrant.Points/Upsert',
            qdrant_dot_points__pb2.UpsertPoints.SerializeToString,
            qdrant_dot_points__pb2.PointsOperationResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Delete(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/qdrant.Points/Delete',
            qdrant_dot_points__pb2.DeletePoints.SerializeToString,
            qdrant_dot_points__pb2.PointsOperationResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Get(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/qdrant.Points/Get',
            qdrant_dot_points__pb2.GetPoints.SerializeToString,
            qdrant_dot_points__pb2.GetResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateVectors(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/qdrant.Points/UpdateVectors',
            qdrant_dot_points__pb2.UpdatePointVectors.SerializeToString,
            qdrant_dot_points__pb2.PointsOperationResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteVectors(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/qdrant.Points/DeleteVectors',
            qdrant_dot_points__pb2.DeletePointVectors.SerializeToString,
            qdrant_dot_points__pb2.PointsOperationResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetPayload(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/qdrant.Points/SetPayload',
            qdrant_dot_points__pb2.SetPayloadPoints.SerializeToString,
            qdrant_dot_points__pb2.PointsOperationResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def OverwritePayload(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/qdrant.Points/OverwritePayload',
            qdrant_dot_points__pb2.SetPayloadPoints.SerializeToString,
            qdrant_dot_points__pb2.PointsOperationResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeletePayload(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/qdrant.Points/DeletePayload',
            qdrant_dot_points__pb2.DeletePayloadPoints.SerializeToString,
            qdrant_dot_points__pb2.PointsOperationResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ClearPayload(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/qdrant.Points/ClearPayload',
            qdrant_dot_points__pb2.ClearPayloadPoints.SerializeToString,
            qdrant_dot_points__pb2.PointsOperationResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateFieldIndex(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/qdrant.Points/CreateFieldIndex',
            qdrant_dot_points__pb2.CreateFieldIndexCollection.SerializeToString,
            qdrant_dot_points__pb2.PointsOperationResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteFieldIndex(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/qdrant.Points/DeleteFieldIndex',
            qdrant_dot_points__pb2.DeleteFieldIndexCollection.SerializeToString,
            qdrant_dot_points__pb2.PointsOperationResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Search(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/qdrant.Points/Search',
            qdrant_dot_points__pb2.SearchPoints.SerializeToString,
            qdrant_dot_points__pb2.SearchResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SearchBatch(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/qdrant.Points/SearchBatch',
            qdrant_dot_points__pb2.SearchBatchPoints.SerializeToString,
            qdrant_dot_points__pb2.SearchBatchResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SearchGroups(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/qdrant.Points/SearchGroups',
            qdrant_dot_points__pb2.SearchPointGroups.SerializeToString,
            qdrant_dot_points__pb2.SearchGroupsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Scroll(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/qdrant.Points/Scroll',
            qdrant_dot_points__pb2.ScrollPoints.SerializeToString,
            qdrant_dot_points__pb2.ScrollResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Recommend(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/qdrant.Points/Recommend',
            qdrant_dot_points__pb2.RecommendPoints.SerializeToString,
            qdrant_dot_points__pb2.RecommendResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RecommendBatch(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/qdrant.Points/RecommendBatch',
            qdrant_dot_points__pb2.RecommendBatchPoints.SerializeToString,
            qdrant_dot_points__pb2.RecommendBatchResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RecommendGroups(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/qdrant.Points/RecommendGroups',
            qdrant_dot_points__pb2.RecommendPointGroups.SerializeToString,
            qdrant_dot_points__pb2.RecommendGroupsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Discover(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/qdrant.Points/Discover',
            qdrant_dot_points__pb2.DiscoverPoints.SerializeToString,
            qdrant_dot_points__pb2.DiscoverResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DiscoverBatch(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/qdrant.Points/DiscoverBatch',
            qdrant_dot_points__pb2.DiscoverBatchPoints.SerializeToString,
            qdrant_dot_points__pb2.DiscoverBatchResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Count(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/qdrant.Points/Count',
            qdrant_dot_points__pb2.CountPoints.SerializeToString,
            qdrant_dot_points__pb2.CountResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateBatch(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/qdrant.Points/UpdateBatch',
            qdrant_dot_points__pb2.UpdateBatchPoints.SerializeToString,
            qdrant_dot_points__pb2.UpdateBatchResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Query(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/qdrant.Points/Query',
            qdrant_dot_points__pb2.QueryPoints.SerializeToString,
            qdrant_dot_points__pb2.QueryResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def QueryBatch(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/qdrant.Points/QueryBatch',
            qdrant_dot_points__pb2.QueryBatchPoints.SerializeToString,
            qdrant_dot_points__pb2.QueryBatchResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
